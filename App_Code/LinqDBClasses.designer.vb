'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="NaremDB")>  _
Partial Public Class LinqDBClassesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAbout(instance As About)
    End Sub
  Partial Private Sub UpdateAbout(instance As About)
    End Sub
  Partial Private Sub DeleteAbout(instance As About)
    End Sub
  Partial Private Sub InsertAuthority(instance As Authority)
    End Sub
  Partial Private Sub UpdateAuthority(instance As Authority)
    End Sub
  Partial Private Sub DeleteAuthority(instance As Authority)
    End Sub
  Partial Private Sub InsertBlock(instance As Block)
    End Sub
  Partial Private Sub UpdateBlock(instance As Block)
    End Sub
  Partial Private Sub DeleteBlock(instance As Block)
    End Sub
  Partial Private Sub InsertCategory(instance As Category)
    End Sub
  Partial Private Sub UpdateCategory(instance As Category)
    End Sub
  Partial Private Sub DeleteCategory(instance As Category)
    End Sub
  Partial Private Sub InsertComment(instance As Comment)
    End Sub
  Partial Private Sub UpdateComment(instance As Comment)
    End Sub
  Partial Private Sub DeleteComment(instance As Comment)
    End Sub
  Partial Private Sub InsertContactUs(instance As ContactUs)
    End Sub
  Partial Private Sub UpdateContactUs(instance As ContactUs)
    End Sub
  Partial Private Sub DeleteContactUs(instance As ContactUs)
    End Sub
  Partial Private Sub InsertFAQm(instance As FAQm)
    End Sub
  Partial Private Sub UpdateFAQm(instance As FAQm)
    End Sub
  Partial Private Sub DeleteFAQm(instance As FAQm)
    End Sub
  Partial Private Sub InsertLink(instance As Link)
    End Sub
  Partial Private Sub UpdateLink(instance As Link)
    End Sub
  Partial Private Sub DeleteLink(instance As Link)
    End Sub
  Partial Private Sub InsertMegaMenu(instance As MegaMenu)
    End Sub
  Partial Private Sub UpdateMegaMenu(instance As MegaMenu)
    End Sub
  Partial Private Sub DeleteMegaMenu(instance As MegaMenu)
    End Sub
  Partial Private Sub InsertMenu(instance As Menu)
    End Sub
  Partial Private Sub UpdateMenu(instance As Menu)
    End Sub
  Partial Private Sub DeleteMenu(instance As Menu)
    End Sub
  Partial Private Sub InsertMessage(instance As Message)
    End Sub
  Partial Private Sub UpdateMessage(instance As Message)
    End Sub
  Partial Private Sub DeleteMessage(instance As Message)
    End Sub
  Partial Private Sub InsertNews1(instance As News1)
    End Sub
  Partial Private Sub UpdateNews1(instance As News1)
    End Sub
  Partial Private Sub DeleteNews1(instance As News1)
    End Sub
  Partial Private Sub InsertNewsLetter(instance As NewsLetter)
    End Sub
  Partial Private Sub UpdateNewsLetter(instance As NewsLetter)
    End Sub
  Partial Private Sub DeleteNewsLetter(instance As NewsLetter)
    End Sub
  Partial Private Sub InsertOrder(instance As [Order])
    End Sub
  Partial Private Sub UpdateOrder(instance As [Order])
    End Sub
  Partial Private Sub DeleteOrder(instance As [Order])
    End Sub
  Partial Private Sub InsertPage(instance As Page)
    End Sub
  Partial Private Sub UpdatePage(instance As Page)
    End Sub
  Partial Private Sub DeletePage(instance As Page)
    End Sub
  Partial Private Sub InsertPortfolio(instance As Portfolio)
    End Sub
  Partial Private Sub UpdatePortfolio(instance As Portfolio)
    End Sub
  Partial Private Sub DeletePortfolio(instance As Portfolio)
    End Sub
  Partial Private Sub InsertPortfolioCat(instance As PortfolioCat)
    End Sub
  Partial Private Sub UpdatePortfolioCat(instance As PortfolioCat)
    End Sub
  Partial Private Sub DeletePortfolioCat(instance As PortfolioCat)
    End Sub
  Partial Private Sub InsertPortfolioGallery(instance As PortfolioGallery)
    End Sub
  Partial Private Sub UpdatePortfolioGallery(instance As PortfolioGallery)
    End Sub
  Partial Private Sub DeletePortfolioGallery(instance As PortfolioGallery)
    End Sub
  Partial Private Sub InsertServise(instance As Servise)
    End Sub
  Partial Private Sub UpdateServise(instance As Servise)
    End Sub
  Partial Private Sub DeleteServise(instance As Servise)
    End Sub
  Partial Private Sub InsertSetting(instance As Setting)
    End Sub
  Partial Private Sub UpdateSetting(instance As Setting)
    End Sub
  Partial Private Sub DeleteSetting(instance As Setting)
    End Sub
  Partial Private Sub InsertUser(instance As User)
    End Sub
  Partial Private Sub UpdateUser(instance As User)
    End Sub
  Partial Private Sub DeleteUser(instance As User)
    End Sub
  Partial Private Sub InsertStudent(instance As Student)
    End Sub
  Partial Private Sub UpdateStudent(instance As Student)
    End Sub
  Partial Private Sub DeleteStudent(instance As Student)
    End Sub
  Partial Private Sub InsertStdMessage(instance As StdMessage)
    End Sub
  Partial Private Sub UpdateStdMessage(instance As StdMessage)
    End Sub
  Partial Private Sub DeleteStdMessage(instance As StdMessage)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("NaremDBConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property ToEmploys() As System.Data.Linq.Table(Of ToEmploy)
		Get
			Return Me.GetTable(Of ToEmploy)
		End Get
	End Property
	
	Public ReadOnly Property Abouts() As System.Data.Linq.Table(Of About)
		Get
			Return Me.GetTable(Of About)
		End Get
	End Property
	
	Public ReadOnly Property Authorities() As System.Data.Linq.Table(Of Authority)
		Get
			Return Me.GetTable(Of Authority)
		End Get
	End Property
	
	Public ReadOnly Property Blocks() As System.Data.Linq.Table(Of Block)
		Get
			Return Me.GetTable(Of Block)
		End Get
	End Property
	
	Public ReadOnly Property Categories() As System.Data.Linq.Table(Of Category)
		Get
			Return Me.GetTable(Of Category)
		End Get
	End Property
	
	Public ReadOnly Property Comments() As System.Data.Linq.Table(Of Comment)
		Get
			Return Me.GetTable(Of Comment)
		End Get
	End Property
	
	Public ReadOnly Property ContactUs() As System.Data.Linq.Table(Of ContactUs)
		Get
			Return Me.GetTable(Of ContactUs)
		End Get
	End Property
	
	Public ReadOnly Property Contracts() As System.Data.Linq.Table(Of Contract)
		Get
			Return Me.GetTable(Of Contract)
		End Get
	End Property
	
	Public ReadOnly Property Covers() As System.Data.Linq.Table(Of Cover)
		Get
			Return Me.GetTable(Of Cover)
		End Get
	End Property
	
	Public ReadOnly Property FAQms() As System.Data.Linq.Table(Of FAQm)
		Get
			Return Me.GetTable(Of FAQm)
		End Get
	End Property
	
	Public ReadOnly Property FaultLogs() As System.Data.Linq.Table(Of FaultLog)
		Get
			Return Me.GetTable(Of FaultLog)
		End Get
	End Property
	
	Public ReadOnly Property Galleries() As System.Data.Linq.Table(Of Gallery)
		Get
			Return Me.GetTable(Of Gallery)
		End Get
	End Property
	
	Public ReadOnly Property Links() As System.Data.Linq.Table(Of Link)
		Get
			Return Me.GetTable(Of Link)
		End Get
	End Property
	
	Public ReadOnly Property MegaMenus() As System.Data.Linq.Table(Of MegaMenu)
		Get
			Return Me.GetTable(Of MegaMenu)
		End Get
	End Property
	
	Public ReadOnly Property Menus() As System.Data.Linq.Table(Of Menu)
		Get
			Return Me.GetTable(Of Menu)
		End Get
	End Property
	
	Public ReadOnly Property Messages() As System.Data.Linq.Table(Of Message)
		Get
			Return Me.GetTable(Of Message)
		End Get
	End Property
	
	Public ReadOnly Property News1s() As System.Data.Linq.Table(Of News1)
		Get
			Return Me.GetTable(Of News1)
		End Get
	End Property
	
	Public ReadOnly Property NewsLetters() As System.Data.Linq.Table(Of NewsLetter)
		Get
			Return Me.GetTable(Of NewsLetter)
		End Get
	End Property
	
	Public ReadOnly Property Orders() As System.Data.Linq.Table(Of [Order])
		Get
			Return Me.GetTable(Of [Order])
		End Get
	End Property
	
	Public ReadOnly Property Pages() As System.Data.Linq.Table(Of Page)
		Get
			Return Me.GetTable(Of Page)
		End Get
	End Property
	
	Public ReadOnly Property Portfolios() As System.Data.Linq.Table(Of Portfolio)
		Get
			Return Me.GetTable(Of Portfolio)
		End Get
	End Property
	
	Public ReadOnly Property PortfolioCats() As System.Data.Linq.Table(Of PortfolioCat)
		Get
			Return Me.GetTable(Of PortfolioCat)
		End Get
	End Property
	
	Public ReadOnly Property PortfolioGalleries() As System.Data.Linq.Table(Of PortfolioGallery)
		Get
			Return Me.GetTable(Of PortfolioGallery)
		End Get
	End Property
	
	Public ReadOnly Property Products() As System.Data.Linq.Table(Of Product)
		Get
			Return Me.GetTable(Of Product)
		End Get
	End Property
	
	Public ReadOnly Property Sales() As System.Data.Linq.Table(Of Sale)
		Get
			Return Me.GetTable(Of Sale)
		End Get
	End Property
	
	Public ReadOnly Property Servises() As System.Data.Linq.Table(Of Servise)
		Get
			Return Me.GetTable(Of Servise)
		End Get
	End Property
	
	Public ReadOnly Property Settings() As System.Data.Linq.Table(Of Setting)
		Get
			Return Me.GetTable(Of Setting)
		End Get
	End Property
	
	Public ReadOnly Property SoldProducts() As System.Data.Linq.Table(Of SoldProduct)
		Get
			Return Me.GetTable(Of SoldProduct)
		End Get
	End Property
	
	Public ReadOnly Property Tasks() As System.Data.Linq.Table(Of Task)
		Get
			Return Me.GetTable(Of Task)
		End Get
	End Property
	
	Public ReadOnly Property Users() As System.Data.Linq.Table(Of User)
		Get
			Return Me.GetTable(Of User)
		End Get
	End Property
	
	Public ReadOnly Property UsersOnlineDetails() As System.Data.Linq.Table(Of UsersOnlineDetail)
		Get
			Return Me.GetTable(Of UsersOnlineDetail)
		End Get
	End Property
	
	Public ReadOnly Property Visitors() As System.Data.Linq.Table(Of Visitor)
		Get
			Return Me.GetTable(Of Visitor)
		End Get
	End Property
	
	Public ReadOnly Property Clients() As System.Data.Linq.Table(Of Client)
		Get
			Return Me.GetTable(Of Client)
		End Get
	End Property
	
	Public ReadOnly Property Students() As System.Data.Linq.Table(Of Student)
		Get
			Return Me.GetTable(Of Student)
		End Get
	End Property
	
	Public ReadOnly Property StdMessages() As System.Data.Linq.Table(Of StdMessage)
		Get
			Return Me.GetTable(Of StdMessage)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="ariyasof_user.ToEmploy")>  _
Partial Public Class ToEmploy
	
	Private _IDTE As Integer
	
	Private _Email As String
	
	Private _Name As String
	
	Private _Family As String
	
	Private _Mobile As String
	
	Private _Address As String
	
	Private _Intresting As String
	
	Private _Skills As String
	
	Private _Gender As String
	
	Private _Birthday As String
	
	Private _GradeEdu As String
	
	Private _FieldOfStudy As String
	
	Private _ForJob As String
	
	Private _Married As System.Nullable(Of Boolean)
	
	Private _LanguageSkills As String
	
	Private _Certificate As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDTE", DbType:="Int NOT NULL")>  _
	Public Property IDTE() As Integer
		Get
			Return Me._IDTE
		End Get
		Set
			If ((Me._IDTE = value)  _
						= false) Then
				Me._IDTE = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(500)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(150)")>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Family", DbType:="NVarChar(150)")>  _
	Public Property Family() As String
		Get
			Return Me._Family
		End Get
		Set
			If (String.Equals(Me._Family, value) = false) Then
				Me._Family = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mobile", DbType:="NChar(11)")>  _
	Public Property Mobile() As String
		Get
			Return Me._Mobile
		End Get
		Set
			If (String.Equals(Me._Mobile, value) = false) Then
				Me._Mobile = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(50)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me._Address = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Intresting", DbType:="NChar(10)")>  _
	Public Property Intresting() As String
		Get
			Return Me._Intresting
		End Get
		Set
			If (String.Equals(Me._Intresting, value) = false) Then
				Me._Intresting = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Skills", DbType:="NChar(10)")>  _
	Public Property Skills() As String
		Get
			Return Me._Skills
		End Get
		Set
			If (String.Equals(Me._Skills, value) = false) Then
				Me._Skills = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="NChar(10)")>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me._Gender = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Birthday", DbType:="NChar(10)")>  _
	Public Property Birthday() As String
		Get
			Return Me._Birthday
		End Get
		Set
			If (String.Equals(Me._Birthday, value) = false) Then
				Me._Birthday = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GradeEdu", DbType:="NChar(10)")>  _
	Public Property GradeEdu() As String
		Get
			Return Me._GradeEdu
		End Get
		Set
			If (String.Equals(Me._GradeEdu, value) = false) Then
				Me._GradeEdu = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldOfStudy", DbType:="NChar(10)")>  _
	Public Property FieldOfStudy() As String
		Get
			Return Me._FieldOfStudy
		End Get
		Set
			If (String.Equals(Me._FieldOfStudy, value) = false) Then
				Me._FieldOfStudy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ForJob", DbType:="NVarChar(50)")>  _
	Public Property ForJob() As String
		Get
			Return Me._ForJob
		End Get
		Set
			If (String.Equals(Me._ForJob, value) = false) Then
				Me._ForJob = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Married", DbType:="Bit")>  _
	Public Property Married() As System.Nullable(Of Boolean)
		Get
			Return Me._Married
		End Get
		Set
			If (Me._Married.Equals(value) = false) Then
				Me._Married = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LanguageSkills", DbType:="NVarChar(50)")>  _
	Public Property LanguageSkills() As String
		Get
			Return Me._LanguageSkills
		End Get
		Set
			If (String.Equals(Me._LanguageSkills, value) = false) Then
				Me._LanguageSkills = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Certificate", DbType:="NVarChar(50)")>  _
	Public Property Certificate() As String
		Get
			Return Me._Certificate
		End Get
		Set
			If (String.Equals(Me._Certificate, value) = false) Then
				Me._Certificate = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.About")>  _
Partial Public Class About
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _IDManager As String
	
	Private _AboutSite_Fa As String
	
	Private _AboutSite_En As String
	
	Private _Contact As String
	
	Private _Biography_Fa As String
	
	Private _Biography_En As String
	
	Private _BiographyPic As String
	
	Private _Keyword_Fa As String
	
	Private _Keyword_En As String
	
	Private _Address_Fa As String
	
	Private _Address_En As String
	
	Private _Tele As String
	
	Private _Telegram As String
	
	Private _Instagram As String
	
	Private _Facebook As String
	
	Private _Twitter As String
	
	Private _Googleplus As String
	
	Private _Linkedin As String
	
	Private _WorkingHours_Fa As String
	
	Private _WorkingHours_En As String
	
	Private _BodyContact_Fa As String
	
	Private _BodyContact_En As String
	
	Private _MetaDescription_Fa As String
	
	Private _MetaDescription_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnIDManagerChanging(value As String)
    End Sub
    Partial Private Sub OnIDManagerChanged()
    End Sub
    Partial Private Sub OnAboutSite_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAboutSite_FaChanged()
    End Sub
    Partial Private Sub OnAboutSite_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAboutSite_EnChanged()
    End Sub
    Partial Private Sub OnContactChanging(value As String)
    End Sub
    Partial Private Sub OnContactChanged()
    End Sub
    Partial Private Sub OnBiography_FaChanging(value As String)
    End Sub
    Partial Private Sub OnBiography_FaChanged()
    End Sub
    Partial Private Sub OnBiography_EnChanging(value As String)
    End Sub
    Partial Private Sub OnBiography_EnChanged()
    End Sub
    Partial Private Sub OnBiographyPicChanging(value As String)
    End Sub
    Partial Private Sub OnBiographyPicChanged()
    End Sub
    Partial Private Sub OnKeyword_FaChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_FaChanged()
    End Sub
    Partial Private Sub OnKeyword_EnChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_EnChanged()
    End Sub
    Partial Private Sub OnAddress_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAddress_FaChanged()
    End Sub
    Partial Private Sub OnAddress_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAddress_EnChanged()
    End Sub
    Partial Private Sub OnTeleChanging(value As String)
    End Sub
    Partial Private Sub OnTeleChanged()
    End Sub
    Partial Private Sub OnTelegramChanging(value As String)
    End Sub
    Partial Private Sub OnTelegramChanged()
    End Sub
    Partial Private Sub OnInstagramChanging(value As String)
    End Sub
    Partial Private Sub OnInstagramChanged()
    End Sub
    Partial Private Sub OnFacebookChanging(value As String)
    End Sub
    Partial Private Sub OnFacebookChanged()
    End Sub
    Partial Private Sub OnTwitterChanging(value As String)
    End Sub
    Partial Private Sub OnTwitterChanged()
    End Sub
    Partial Private Sub OnGoogleplusChanging(value As String)
    End Sub
    Partial Private Sub OnGoogleplusChanged()
    End Sub
    Partial Private Sub OnLinkedinChanging(value As String)
    End Sub
    Partial Private Sub OnLinkedinChanged()
    End Sub
    Partial Private Sub OnWorkingHours_FaChanging(value As String)
    End Sub
    Partial Private Sub OnWorkingHours_FaChanged()
    End Sub
    Partial Private Sub OnWorkingHours_EnChanging(value As String)
    End Sub
    Partial Private Sub OnWorkingHours_EnChanged()
    End Sub
    Partial Private Sub OnBodyContact_FaChanging(value As String)
    End Sub
    Partial Private Sub OnBodyContact_FaChanged()
    End Sub
    Partial Private Sub OnBodyContact_EnChanging(value As String)
    End Sub
    Partial Private Sub OnBodyContact_EnChanged()
    End Sub
    Partial Private Sub OnMetaDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMetaDescription_FaChanged()
    End Sub
    Partial Private Sub OnMetaDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMetaDescription_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDManager", DbType:="NVarChar(4000)")>  _
	Public Property IDManager() As String
		Get
			Return Me._IDManager
		End Get
		Set
			If (String.Equals(Me._IDManager, value) = false) Then
				Me.OnIDManagerChanging(value)
				Me.SendPropertyChanging
				Me._IDManager = value
				Me.SendPropertyChanged("IDManager")
				Me.OnIDManagerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AboutSite_Fa", DbType:="NVarChar(4000)")>  _
	Public Property AboutSite_Fa() As String
		Get
			Return Me._AboutSite_Fa
		End Get
		Set
			If (String.Equals(Me._AboutSite_Fa, value) = false) Then
				Me.OnAboutSite_FaChanging(value)
				Me.SendPropertyChanging
				Me._AboutSite_Fa = value
				Me.SendPropertyChanged("AboutSite_Fa")
				Me.OnAboutSite_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AboutSite_En", DbType:="NVarChar(4000)")>  _
	Public Property AboutSite_En() As String
		Get
			Return Me._AboutSite_En
		End Get
		Set
			If (String.Equals(Me._AboutSite_En, value) = false) Then
				Me.OnAboutSite_EnChanging(value)
				Me.SendPropertyChanging
				Me._AboutSite_En = value
				Me.SendPropertyChanged("AboutSite_En")
				Me.OnAboutSite_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contact", DbType:="NVarChar(4000)")>  _
	Public Property Contact() As String
		Get
			Return Me._Contact
		End Get
		Set
			If (String.Equals(Me._Contact, value) = false) Then
				Me.OnContactChanging(value)
				Me.SendPropertyChanging
				Me._Contact = value
				Me.SendPropertyChanged("Contact")
				Me.OnContactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Biography_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Biography_Fa() As String
		Get
			Return Me._Biography_Fa
		End Get
		Set
			If (String.Equals(Me._Biography_Fa, value) = false) Then
				Me.OnBiography_FaChanging(value)
				Me.SendPropertyChanging
				Me._Biography_Fa = value
				Me.SendPropertyChanged("Biography_Fa")
				Me.OnBiography_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Biography_En", DbType:="NVarChar(4000)")>  _
	Public Property Biography_En() As String
		Get
			Return Me._Biography_En
		End Get
		Set
			If (String.Equals(Me._Biography_En, value) = false) Then
				Me.OnBiography_EnChanging(value)
				Me.SendPropertyChanging
				Me._Biography_En = value
				Me.SendPropertyChanged("Biography_En")
				Me.OnBiography_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BiographyPic", DbType:="NVarChar(1100)")>  _
	Public Property BiographyPic() As String
		Get
			Return Me._BiographyPic
		End Get
		Set
			If (String.Equals(Me._BiographyPic, value) = false) Then
				Me.OnBiographyPicChanging(value)
				Me.SendPropertyChanging
				Me._BiographyPic = value
				Me.SendPropertyChanged("BiographyPic")
				Me.OnBiographyPicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_Fa", DbType:="NVarChar(500)")>  _
	Public Property Keyword_Fa() As String
		Get
			Return Me._Keyword_Fa
		End Get
		Set
			If (String.Equals(Me._Keyword_Fa, value) = false) Then
				Me.OnKeyword_FaChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_Fa = value
				Me.SendPropertyChanged("Keyword_Fa")
				Me.OnKeyword_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_En", DbType:="NVarChar(500)")>  _
	Public Property Keyword_En() As String
		Get
			Return Me._Keyword_En
		End Get
		Set
			If (String.Equals(Me._Keyword_En, value) = false) Then
				Me.OnKeyword_EnChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_En = value
				Me.SendPropertyChanged("Keyword_En")
				Me.OnKeyword_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address_Fa", DbType:="NVarChar(250)")>  _
	Public Property Address_Fa() As String
		Get
			Return Me._Address_Fa
		End Get
		Set
			If (String.Equals(Me._Address_Fa, value) = false) Then
				Me.OnAddress_FaChanging(value)
				Me.SendPropertyChanging
				Me._Address_Fa = value
				Me.SendPropertyChanged("Address_Fa")
				Me.OnAddress_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address_En", DbType:="NVarChar(250)")>  _
	Public Property Address_En() As String
		Get
			Return Me._Address_En
		End Get
		Set
			If (String.Equals(Me._Address_En, value) = false) Then
				Me.OnAddress_EnChanging(value)
				Me.SendPropertyChanging
				Me._Address_En = value
				Me.SendPropertyChanged("Address_En")
				Me.OnAddress_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tele", DbType:="NVarChar(100)")>  _
	Public Property Tele() As String
		Get
			Return Me._Tele
		End Get
		Set
			If (String.Equals(Me._Tele, value) = false) Then
				Me.OnTeleChanging(value)
				Me.SendPropertyChanging
				Me._Tele = value
				Me.SendPropertyChanged("Tele")
				Me.OnTeleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telegram", DbType:="NVarChar(1000)")>  _
	Public Property Telegram() As String
		Get
			Return Me._Telegram
		End Get
		Set
			If (String.Equals(Me._Telegram, value) = false) Then
				Me.OnTelegramChanging(value)
				Me.SendPropertyChanging
				Me._Telegram = value
				Me.SendPropertyChanged("Telegram")
				Me.OnTelegramChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Instagram", DbType:="NVarChar(1000)")>  _
	Public Property Instagram() As String
		Get
			Return Me._Instagram
		End Get
		Set
			If (String.Equals(Me._Instagram, value) = false) Then
				Me.OnInstagramChanging(value)
				Me.SendPropertyChanging
				Me._Instagram = value
				Me.SendPropertyChanged("Instagram")
				Me.OnInstagramChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facebook", DbType:="NVarChar(1000)")>  _
	Public Property Facebook() As String
		Get
			Return Me._Facebook
		End Get
		Set
			If (String.Equals(Me._Facebook, value) = false) Then
				Me.OnFacebookChanging(value)
				Me.SendPropertyChanging
				Me._Facebook = value
				Me.SendPropertyChanged("Facebook")
				Me.OnFacebookChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Twitter", DbType:="NVarChar(1000)")>  _
	Public Property Twitter() As String
		Get
			Return Me._Twitter
		End Get
		Set
			If (String.Equals(Me._Twitter, value) = false) Then
				Me.OnTwitterChanging(value)
				Me.SendPropertyChanging
				Me._Twitter = value
				Me.SendPropertyChanged("Twitter")
				Me.OnTwitterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Googleplus", DbType:="NVarChar(1000)")>  _
	Public Property Googleplus() As String
		Get
			Return Me._Googleplus
		End Get
		Set
			If (String.Equals(Me._Googleplus, value) = false) Then
				Me.OnGoogleplusChanging(value)
				Me.SendPropertyChanging
				Me._Googleplus = value
				Me.SendPropertyChanged("Googleplus")
				Me.OnGoogleplusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Linkedin", DbType:="NVarChar(1000)")>  _
	Public Property Linkedin() As String
		Get
			Return Me._Linkedin
		End Get
		Set
			If (String.Equals(Me._Linkedin, value) = false) Then
				Me.OnLinkedinChanging(value)
				Me.SendPropertyChanging
				Me._Linkedin = value
				Me.SendPropertyChanged("Linkedin")
				Me.OnLinkedinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WorkingHours_Fa", DbType:="NVarChar(1000)")>  _
	Public Property WorkingHours_Fa() As String
		Get
			Return Me._WorkingHours_Fa
		End Get
		Set
			If (String.Equals(Me._WorkingHours_Fa, value) = false) Then
				Me.OnWorkingHours_FaChanging(value)
				Me.SendPropertyChanging
				Me._WorkingHours_Fa = value
				Me.SendPropertyChanged("WorkingHours_Fa")
				Me.OnWorkingHours_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WorkingHours_En", DbType:="NVarChar(1000)")>  _
	Public Property WorkingHours_En() As String
		Get
			Return Me._WorkingHours_En
		End Get
		Set
			If (String.Equals(Me._WorkingHours_En, value) = false) Then
				Me.OnWorkingHours_EnChanging(value)
				Me.SendPropertyChanging
				Me._WorkingHours_En = value
				Me.SendPropertyChanged("WorkingHours_En")
				Me.OnWorkingHours_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BodyContact_Fa", DbType:="NVarChar(4000)")>  _
	Public Property BodyContact_Fa() As String
		Get
			Return Me._BodyContact_Fa
		End Get
		Set
			If (String.Equals(Me._BodyContact_Fa, value) = false) Then
				Me.OnBodyContact_FaChanging(value)
				Me.SendPropertyChanging
				Me._BodyContact_Fa = value
				Me.SendPropertyChanged("BodyContact_Fa")
				Me.OnBodyContact_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BodyContact_En", DbType:="NVarChar(4000)")>  _
	Public Property BodyContact_En() As String
		Get
			Return Me._BodyContact_En
		End Get
		Set
			If (String.Equals(Me._BodyContact_En, value) = false) Then
				Me.OnBodyContact_EnChanging(value)
				Me.SendPropertyChanging
				Me._BodyContact_En = value
				Me.SendPropertyChanged("BodyContact_En")
				Me.OnBodyContact_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MetaDescription_Fa", DbType:="NVarChar(1000)")>  _
	Public Property MetaDescription_Fa() As String
		Get
			Return Me._MetaDescription_Fa
		End Get
		Set
			If (String.Equals(Me._MetaDescription_Fa, value) = false) Then
				Me.OnMetaDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._MetaDescription_Fa = value
				Me.SendPropertyChanged("MetaDescription_Fa")
				Me.OnMetaDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MetaDescription_En", DbType:="NVarChar(1000)")>  _
	Public Property MetaDescription_En() As String
		Get
			Return Me._MetaDescription_En
		End Get
		Set
			If (String.Equals(Me._MetaDescription_En, value) = false) Then
				Me.OnMetaDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._MetaDescription_En = value
				Me.SendPropertyChanged("MetaDescription_En")
				Me.OnMetaDescription_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Authority")>  _
Partial Public Class Authority
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDA As Integer
	
	Private _Name_Fa As String
	
	Private _Description_Fa As String
	
	Private _Name_En As String
	
	Private _Description_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDAChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDAChanged()
    End Sub
    Partial Private Sub OnName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnName_FaChanged()
    End Sub
    Partial Private Sub OnDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_FaChanged()
    End Sub
    Partial Private Sub OnName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnName_EnChanged()
    End Sub
    Partial Private Sub OnDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDA", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDA() As Integer
		Get
			Return Me._IDA
		End Get
		Set
			If ((Me._IDA = value)  _
						= false) Then
				Me.OnIDAChanging(value)
				Me.SendPropertyChanging
				Me._IDA = value
				Me.SendPropertyChanged("IDA")
				Me.OnIDAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_Fa", DbType:="NVarChar(100)")>  _
	Public Property Name_Fa() As String
		Get
			Return Me._Name_Fa
		End Get
		Set
			If (String.Equals(Me._Name_Fa, value) = false) Then
				Me.OnName_FaChanging(value)
				Me.SendPropertyChanging
				Me._Name_Fa = value
				Me.SendPropertyChanged("Name_Fa")
				Me.OnName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_Fa", DbType:="NVarChar(1000)")>  _
	Public Property Description_Fa() As String
		Get
			Return Me._Description_Fa
		End Get
		Set
			If (String.Equals(Me._Description_Fa, value) = false) Then
				Me.OnDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._Description_Fa = value
				Me.SendPropertyChanged("Description_Fa")
				Me.OnDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_En", DbType:="NVarChar(100)")>  _
	Public Property Name_En() As String
		Get
			Return Me._Name_En
		End Get
		Set
			If (String.Equals(Me._Name_En, value) = false) Then
				Me.OnName_EnChanging(value)
				Me.SendPropertyChanging
				Me._Name_En = value
				Me.SendPropertyChanged("Name_En")
				Me.OnName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_En", DbType:="NVarChar(1000)")>  _
	Public Property Description_En() As String
		Get
			Return Me._Description_En
		End Get
		Set
			If (String.Equals(Me._Description_En, value) = false) Then
				Me.OnDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._Description_En = value
				Me.SendPropertyChanged("Description_En")
				Me.OnDescription_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Block")>  _
Partial Public Class Block
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDB As Integer
	
	Private _Name_Fa As String
	
	Private _Name_En As String
	
	Private _Position As String
	
	Private _Priority As System.Nullable(Of Integer)
	
	Private _Description_Fa As String
	
	Private _Description_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDBChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDBChanged()
    End Sub
    Partial Private Sub OnName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnName_FaChanged()
    End Sub
    Partial Private Sub OnName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnName_EnChanged()
    End Sub
    Partial Private Sub OnPositionChanging(value As String)
    End Sub
    Partial Private Sub OnPositionChanged()
    End Sub
    Partial Private Sub OnPriorityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPriorityChanged()
    End Sub
    Partial Private Sub OnDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_FaChanged()
    End Sub
    Partial Private Sub OnDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDB", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDB() As Integer
		Get
			Return Me._IDB
		End Get
		Set
			If ((Me._IDB = value)  _
						= false) Then
				Me.OnIDBChanging(value)
				Me.SendPropertyChanging
				Me._IDB = value
				Me.SendPropertyChanged("IDB")
				Me.OnIDBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_Fa", DbType:="NVarChar(500)")>  _
	Public Property Name_Fa() As String
		Get
			Return Me._Name_Fa
		End Get
		Set
			If (String.Equals(Me._Name_Fa, value) = false) Then
				Me.OnName_FaChanging(value)
				Me.SendPropertyChanging
				Me._Name_Fa = value
				Me.SendPropertyChanged("Name_Fa")
				Me.OnName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_En", DbType:="NVarChar(500)")>  _
	Public Property Name_En() As String
		Get
			Return Me._Name_En
		End Get
		Set
			If (String.Equals(Me._Name_En, value) = false) Then
				Me.OnName_EnChanging(value)
				Me.SendPropertyChanging
				Me._Name_En = value
				Me.SendPropertyChanged("Name_En")
				Me.OnName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Position", DbType:="NVarChar(6)")>  _
	Public Property Position() As String
		Get
			Return Me._Position
		End Get
		Set
			If (String.Equals(Me._Position, value) = false) Then
				Me.OnPositionChanging(value)
				Me.SendPropertyChanging
				Me._Position = value
				Me.SendPropertyChanged("Position")
				Me.OnPositionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="Int")>  _
	Public Property Priority() As System.Nullable(Of Integer)
		Get
			Return Me._Priority
		End Get
		Set
			If (Me._Priority.Equals(value) = false) Then
				Me.OnPriorityChanging(value)
				Me.SendPropertyChanging
				Me._Priority = value
				Me.SendPropertyChanged("Priority")
				Me.OnPriorityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_Fa", DbType:="NVarChar(600)")>  _
	Public Property Description_Fa() As String
		Get
			Return Me._Description_Fa
		End Get
		Set
			If (String.Equals(Me._Description_Fa, value) = false) Then
				Me.OnDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._Description_Fa = value
				Me.SendPropertyChanged("Description_Fa")
				Me.OnDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_En", DbType:="NVarChar(600)")>  _
	Public Property Description_En() As String
		Get
			Return Me._Description_En
		End Get
		Set
			If (String.Equals(Me._Description_En, value) = false) Then
				Me.OnDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._Description_En = value
				Me.SendPropertyChanged("Description_En")
				Me.OnDescription_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Categorys")>  _
Partial Public Class Category
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDCat As Integer
	
	Private _CatName_Fa As String
	
	Private _CatName_En As String
	
	Private _Description_Fa As String
	
	Private _Description_En As String
	
	Private _Priority As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDCatChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCatChanged()
    End Sub
    Partial Private Sub OnCatName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnCatName_FaChanged()
    End Sub
    Partial Private Sub OnCatName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnCatName_EnChanged()
    End Sub
    Partial Private Sub OnDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_FaChanged()
    End Sub
    Partial Private Sub OnDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_EnChanged()
    End Sub
    Partial Private Sub OnPriorityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPriorityChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCat", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDCat() As Integer
		Get
			Return Me._IDCat
		End Get
		Set
			If ((Me._IDCat = value)  _
						= false) Then
				Me.OnIDCatChanging(value)
				Me.SendPropertyChanging
				Me._IDCat = value
				Me.SendPropertyChanged("IDCat")
				Me.OnIDCatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatName_Fa", DbType:="NVarChar(1000)")>  _
	Public Property CatName_Fa() As String
		Get
			Return Me._CatName_Fa
		End Get
		Set
			If (String.Equals(Me._CatName_Fa, value) = false) Then
				Me.OnCatName_FaChanging(value)
				Me.SendPropertyChanging
				Me._CatName_Fa = value
				Me.SendPropertyChanged("CatName_Fa")
				Me.OnCatName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatName_En", DbType:="NVarChar(1000)")>  _
	Public Property CatName_En() As String
		Get
			Return Me._CatName_En
		End Get
		Set
			If (String.Equals(Me._CatName_En, value) = false) Then
				Me.OnCatName_EnChanging(value)
				Me.SendPropertyChanging
				Me._CatName_En = value
				Me.SendPropertyChanged("CatName_En")
				Me.OnCatName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_Fa", DbType:="NVarChar(1000)")>  _
	Public Property Description_Fa() As String
		Get
			Return Me._Description_Fa
		End Get
		Set
			If (String.Equals(Me._Description_Fa, value) = false) Then
				Me.OnDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._Description_Fa = value
				Me.SendPropertyChanged("Description_Fa")
				Me.OnDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_En", DbType:="NVarChar(1000)")>  _
	Public Property Description_En() As String
		Get
			Return Me._Description_En
		End Get
		Set
			If (String.Equals(Me._Description_En, value) = false) Then
				Me.OnDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._Description_En = value
				Me.SendPropertyChanged("Description_En")
				Me.OnDescription_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="Int")>  _
	Public Property Priority() As System.Nullable(Of Integer)
		Get
			Return Me._Priority
		End Get
		Set
			If (Me._Priority.Equals(value) = false) Then
				Me.OnPriorityChanging(value)
				Me.SendPropertyChanging
				Me._Priority = value
				Me.SendPropertyChanged("Priority")
				Me.OnPriorityChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Comments")>  _
Partial Public Class Comment
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDC As Integer
	
	Private _NameAndFamily_Fa As String
	
	Private _NameAndFamily_En As String
	
	Private _Email As String
	
	Private _WebSite As String
	
	Private _MSG_Fa As String
	
	Private _MSG_En As String
	
	Private _Moment_Fa As String
	
	Private _Moment_En As String
	
	Private _Year_En As System.Nullable(Of Integer)
	
	Private _Month_En As System.Nullable(Of Integer)
	
	Private _Day_En As System.Nullable(Of Integer)
	
	Private _IsShow As System.Nullable(Of Boolean)
	
	Private _Seen As String
	
	Private _Access As String
	
	Private _Keyword_Fa As String
	
	Private _Keyword_En As String
	
	Private _IDElement As System.Nullable(Of Integer)
	
	Private _Action As String
	
	Private _Active As System.Nullable(Of Boolean)
	
	Private _Parent As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDCChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCChanged()
    End Sub
    Partial Private Sub OnNameAndFamily_FaChanging(value As String)
    End Sub
    Partial Private Sub OnNameAndFamily_FaChanged()
    End Sub
    Partial Private Sub OnNameAndFamily_EnChanging(value As String)
    End Sub
    Partial Private Sub OnNameAndFamily_EnChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnWebSiteChanging(value As String)
    End Sub
    Partial Private Sub OnWebSiteChanged()
    End Sub
    Partial Private Sub OnMSG_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMSG_FaChanged()
    End Sub
    Partial Private Sub OnMSG_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMSG_EnChanged()
    End Sub
    Partial Private Sub OnMoment_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_FaChanged()
    End Sub
    Partial Private Sub OnMoment_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_EnChanged()
    End Sub
    Partial Private Sub OnYear_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYear_EnChanged()
    End Sub
    Partial Private Sub OnMonth_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMonth_EnChanged()
    End Sub
    Partial Private Sub OnDay_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDay_EnChanged()
    End Sub
    Partial Private Sub OnIsShowChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsShowChanged()
    End Sub
    Partial Private Sub OnSeenChanging(value As String)
    End Sub
    Partial Private Sub OnSeenChanged()
    End Sub
    Partial Private Sub OnAccessChanging(value As String)
    End Sub
    Partial Private Sub OnAccessChanged()
    End Sub
    Partial Private Sub OnKeyword_FaChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_FaChanged()
    End Sub
    Partial Private Sub OnKeyword_EnChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_EnChanged()
    End Sub
    Partial Private Sub OnIDElementChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDElementChanged()
    End Sub
    Partial Private Sub OnActionChanging(value As String)
    End Sub
    Partial Private Sub OnActionChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnParentChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnParentChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDC", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDC() As Integer
		Get
			Return Me._IDC
		End Get
		Set
			If ((Me._IDC = value)  _
						= false) Then
				Me.OnIDCChanging(value)
				Me.SendPropertyChanging
				Me._IDC = value
				Me.SendPropertyChanged("IDC")
				Me.OnIDCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameAndFamily_Fa", DbType:="NVarChar(500)")>  _
	Public Property NameAndFamily_Fa() As String
		Get
			Return Me._NameAndFamily_Fa
		End Get
		Set
			If (String.Equals(Me._NameAndFamily_Fa, value) = false) Then
				Me.OnNameAndFamily_FaChanging(value)
				Me.SendPropertyChanging
				Me._NameAndFamily_Fa = value
				Me.SendPropertyChanged("NameAndFamily_Fa")
				Me.OnNameAndFamily_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameAndFamily_En", DbType:="NVarChar(500)")>  _
	Public Property NameAndFamily_En() As String
		Get
			Return Me._NameAndFamily_En
		End Get
		Set
			If (String.Equals(Me._NameAndFamily_En, value) = false) Then
				Me.OnNameAndFamily_EnChanging(value)
				Me.SendPropertyChanging
				Me._NameAndFamily_En = value
				Me.SendPropertyChanged("NameAndFamily_En")
				Me.OnNameAndFamily_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(200)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebSite", DbType:="NVarChar(500)")>  _
	Public Property WebSite() As String
		Get
			Return Me._WebSite
		End Get
		Set
			If (String.Equals(Me._WebSite, value) = false) Then
				Me.OnWebSiteChanging(value)
				Me.SendPropertyChanging
				Me._WebSite = value
				Me.SendPropertyChanged("WebSite")
				Me.OnWebSiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSG_Fa", DbType:="NVarChar(1000)")>  _
	Public Property MSG_Fa() As String
		Get
			Return Me._MSG_Fa
		End Get
		Set
			If (String.Equals(Me._MSG_Fa, value) = false) Then
				Me.OnMSG_FaChanging(value)
				Me.SendPropertyChanging
				Me._MSG_Fa = value
				Me.SendPropertyChanged("MSG_Fa")
				Me.OnMSG_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSG_En", DbType:="NVarChar(1000)")>  _
	Public Property MSG_En() As String
		Get
			Return Me._MSG_En
		End Get
		Set
			If (String.Equals(Me._MSG_En, value) = false) Then
				Me.OnMSG_EnChanging(value)
				Me.SendPropertyChanging
				Me._MSG_En = value
				Me.SendPropertyChanged("MSG_En")
				Me.OnMSG_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_Fa", DbType:="NVarChar(50)")>  _
	Public Property Moment_Fa() As String
		Get
			Return Me._Moment_Fa
		End Get
		Set
			If (String.Equals(Me._Moment_Fa, value) = false) Then
				Me.OnMoment_FaChanging(value)
				Me.SendPropertyChanging
				Me._Moment_Fa = value
				Me.SendPropertyChanged("Moment_Fa")
				Me.OnMoment_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_En", DbType:="NVarChar(50)")>  _
	Public Property Moment_En() As String
		Get
			Return Me._Moment_En
		End Get
		Set
			If (String.Equals(Me._Moment_En, value) = false) Then
				Me.OnMoment_EnChanging(value)
				Me.SendPropertyChanging
				Me._Moment_En = value
				Me.SendPropertyChanged("Moment_En")
				Me.OnMoment_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year_En", DbType:="Int")>  _
	Public Property Year_En() As System.Nullable(Of Integer)
		Get
			Return Me._Year_En
		End Get
		Set
			If (Me._Year_En.Equals(value) = false) Then
				Me.OnYear_EnChanging(value)
				Me.SendPropertyChanging
				Me._Year_En = value
				Me.SendPropertyChanged("Year_En")
				Me.OnYear_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Month_En", DbType:="Int")>  _
	Public Property Month_En() As System.Nullable(Of Integer)
		Get
			Return Me._Month_En
		End Get
		Set
			If (Me._Month_En.Equals(value) = false) Then
				Me.OnMonth_EnChanging(value)
				Me.SendPropertyChanging
				Me._Month_En = value
				Me.SendPropertyChanged("Month_En")
				Me.OnMonth_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Day_En", DbType:="Int")>  _
	Public Property Day_En() As System.Nullable(Of Integer)
		Get
			Return Me._Day_En
		End Get
		Set
			If (Me._Day_En.Equals(value) = false) Then
				Me.OnDay_EnChanging(value)
				Me.SendPropertyChanging
				Me._Day_En = value
				Me.SendPropertyChanged("Day_En")
				Me.OnDay_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsShow", DbType:="Bit")>  _
	Public Property IsShow() As System.Nullable(Of Boolean)
		Get
			Return Me._IsShow
		End Get
		Set
			If (Me._IsShow.Equals(value) = false) Then
				Me.OnIsShowChanging(value)
				Me.SendPropertyChanging
				Me._IsShow = value
				Me.SendPropertyChanged("IsShow")
				Me.OnIsShowChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seen", DbType:="NVarChar(10)")>  _
	Public Property Seen() As String
		Get
			Return Me._Seen
		End Get
		Set
			If (String.Equals(Me._Seen, value) = false) Then
				Me.OnSeenChanging(value)
				Me.SendPropertyChanging
				Me._Seen = value
				Me.SendPropertyChanged("Seen")
				Me.OnSeenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Access", DbType:="NVarChar(8)")>  _
	Public Property Access() As String
		Get
			Return Me._Access
		End Get
		Set
			If (String.Equals(Me._Access, value) = false) Then
				Me.OnAccessChanging(value)
				Me.SendPropertyChanging
				Me._Access = value
				Me.SendPropertyChanged("Access")
				Me.OnAccessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_Fa", DbType:="NVarChar(100)")>  _
	Public Property Keyword_Fa() As String
		Get
			Return Me._Keyword_Fa
		End Get
		Set
			If (String.Equals(Me._Keyword_Fa, value) = false) Then
				Me.OnKeyword_FaChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_Fa = value
				Me.SendPropertyChanged("Keyword_Fa")
				Me.OnKeyword_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_En", DbType:="NVarChar(100)")>  _
	Public Property Keyword_En() As String
		Get
			Return Me._Keyword_En
		End Get
		Set
			If (String.Equals(Me._Keyword_En, value) = false) Then
				Me.OnKeyword_EnChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_En = value
				Me.SendPropertyChanged("Keyword_En")
				Me.OnKeyword_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDElement", DbType:="Int")>  _
	Public Property IDElement() As System.Nullable(Of Integer)
		Get
			Return Me._IDElement
		End Get
		Set
			If (Me._IDElement.Equals(value) = false) Then
				Me.OnIDElementChanging(value)
				Me.SendPropertyChanging
				Me._IDElement = value
				Me.SendPropertyChanged("IDElement")
				Me.OnIDElementChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Action", DbType:="NVarChar(100)")>  _
	Public Property Action() As String
		Get
			Return Me._Action
		End Get
		Set
			If (String.Equals(Me._Action, value) = false) Then
				Me.OnActionChanging(value)
				Me.SendPropertyChanging
				Me._Action = value
				Me.SendPropertyChanged("Action")
				Me.OnActionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit")>  _
	Public Property Active() As System.Nullable(Of Boolean)
		Get
			Return Me._Active
		End Get
		Set
			If (Me._Active.Equals(value) = false) Then
				Me.OnActiveChanging(value)
				Me.SendPropertyChanging
				Me._Active = value
				Me.SendPropertyChanged("Active")
				Me.OnActiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Parent", DbType:="Int")>  _
	Public Property Parent() As System.Nullable(Of Integer)
		Get
			Return Me._Parent
		End Get
		Set
			If (Me._Parent.Equals(value) = false) Then
				Me.OnParentChanging(value)
				Me.SendPropertyChanging
				Me._Parent = value
				Me.SendPropertyChanged("Parent")
				Me.OnParentChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ContactUs")>  _
Partial Public Class ContactUs
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDCU As Integer
	
	Private _NameAndFamily_Fa As String
	
	Private _NameAndFamily_En As String
	
	Private _Email As String
	
	Private _WebSite As String
	
	Private _MSG_Fa As String
	
	Private _MSG_En As String
	
	Private _Moment_Fa As String
	
	Private _Moment_En As String
	
	Private _Year_En As System.Nullable(Of Integer)
	
	Private _Month_En As System.Nullable(Of Integer)
	
	Private _Day_En As System.Nullable(Of Integer)
	
	Private _Seen As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDCUChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDCUChanged()
    End Sub
    Partial Private Sub OnNameAndFamily_FaChanging(value As String)
    End Sub
    Partial Private Sub OnNameAndFamily_FaChanged()
    End Sub
    Partial Private Sub OnNameAndFamily_EnChanging(value As String)
    End Sub
    Partial Private Sub OnNameAndFamily_EnChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnWebSiteChanging(value As String)
    End Sub
    Partial Private Sub OnWebSiteChanged()
    End Sub
    Partial Private Sub OnMSG_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMSG_FaChanged()
    End Sub
    Partial Private Sub OnMSG_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMSG_EnChanged()
    End Sub
    Partial Private Sub OnMoment_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_FaChanged()
    End Sub
    Partial Private Sub OnMoment_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_EnChanged()
    End Sub
    Partial Private Sub OnYear_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYear_EnChanged()
    End Sub
    Partial Private Sub OnMonth_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMonth_EnChanged()
    End Sub
    Partial Private Sub OnDay_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDay_EnChanged()
    End Sub
    Partial Private Sub OnSeenChanging(value As String)
    End Sub
    Partial Private Sub OnSeenChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCU", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDCU() As Integer
		Get
			Return Me._IDCU
		End Get
		Set
			If ((Me._IDCU = value)  _
						= false) Then
				Me.OnIDCUChanging(value)
				Me.SendPropertyChanging
				Me._IDCU = value
				Me.SendPropertyChanged("IDCU")
				Me.OnIDCUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameAndFamily_Fa", DbType:="NVarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property NameAndFamily_Fa() As String
		Get
			Return Me._NameAndFamily_Fa
		End Get
		Set
			If (String.Equals(Me._NameAndFamily_Fa, value) = false) Then
				Me.OnNameAndFamily_FaChanging(value)
				Me.SendPropertyChanging
				Me._NameAndFamily_Fa = value
				Me.SendPropertyChanged("NameAndFamily_Fa")
				Me.OnNameAndFamily_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameAndFamily_En", DbType:="NVarChar(500)")>  _
	Public Property NameAndFamily_En() As String
		Get
			Return Me._NameAndFamily_En
		End Get
		Set
			If (String.Equals(Me._NameAndFamily_En, value) = false) Then
				Me.OnNameAndFamily_EnChanging(value)
				Me.SendPropertyChanging
				Me._NameAndFamily_En = value
				Me.SendPropertyChanged("NameAndFamily_En")
				Me.OnNameAndFamily_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WebSite", DbType:="NVarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property WebSite() As String
		Get
			Return Me._WebSite
		End Get
		Set
			If (String.Equals(Me._WebSite, value) = false) Then
				Me.OnWebSiteChanging(value)
				Me.SendPropertyChanging
				Me._WebSite = value
				Me.SendPropertyChanged("WebSite")
				Me.OnWebSiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSG_Fa", DbType:="NVarChar(4000) NOT NULL", CanBeNull:=false)>  _
	Public Property MSG_Fa() As String
		Get
			Return Me._MSG_Fa
		End Get
		Set
			If (String.Equals(Me._MSG_Fa, value) = false) Then
				Me.OnMSG_FaChanging(value)
				Me.SendPropertyChanging
				Me._MSG_Fa = value
				Me.SendPropertyChanged("MSG_Fa")
				Me.OnMSG_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSG_En", DbType:="NVarChar(4000)")>  _
	Public Property MSG_En() As String
		Get
			Return Me._MSG_En
		End Get
		Set
			If (String.Equals(Me._MSG_En, value) = false) Then
				Me.OnMSG_EnChanging(value)
				Me.SendPropertyChanging
				Me._MSG_En = value
				Me.SendPropertyChanged("MSG_En")
				Me.OnMSG_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_Fa", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Moment_Fa() As String
		Get
			Return Me._Moment_Fa
		End Get
		Set
			If (String.Equals(Me._Moment_Fa, value) = false) Then
				Me.OnMoment_FaChanging(value)
				Me.SendPropertyChanging
				Me._Moment_Fa = value
				Me.SendPropertyChanged("Moment_Fa")
				Me.OnMoment_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_En", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Moment_En() As String
		Get
			Return Me._Moment_En
		End Get
		Set
			If (String.Equals(Me._Moment_En, value) = false) Then
				Me.OnMoment_EnChanging(value)
				Me.SendPropertyChanging
				Me._Moment_En = value
				Me.SendPropertyChanged("Moment_En")
				Me.OnMoment_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year_En", DbType:="Int")>  _
	Public Property Year_En() As System.Nullable(Of Integer)
		Get
			Return Me._Year_En
		End Get
		Set
			If (Me._Year_En.Equals(value) = false) Then
				Me.OnYear_EnChanging(value)
				Me.SendPropertyChanging
				Me._Year_En = value
				Me.SendPropertyChanged("Year_En")
				Me.OnYear_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Month_En", DbType:="Int")>  _
	Public Property Month_En() As System.Nullable(Of Integer)
		Get
			Return Me._Month_En
		End Get
		Set
			If (Me._Month_En.Equals(value) = false) Then
				Me.OnMonth_EnChanging(value)
				Me.SendPropertyChanging
				Me._Month_En = value
				Me.SendPropertyChanged("Month_En")
				Me.OnMonth_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Day_En", DbType:="Int")>  _
	Public Property Day_En() As System.Nullable(Of Integer)
		Get
			Return Me._Day_En
		End Get
		Set
			If (Me._Day_En.Equals(value) = false) Then
				Me.OnDay_EnChanging(value)
				Me.SendPropertyChanging
				Me._Day_En = value
				Me.SendPropertyChanged("Day_En")
				Me.OnDay_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seen", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Seen() As String
		Get
			Return Me._Seen
		End Get
		Set
			If (String.Equals(Me._Seen, value) = false) Then
				Me.OnSeenChanging(value)
				Me.SendPropertyChanging
				Me._Seen = value
				Me.SendPropertyChanged("Seen")
				Me.OnSeenChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Contract")>  _
Partial Public Class Contract
	
	Private _IDCon As Integer
	
	Private _IDO As Integer
	
	Private _Title As String
	
	Private _Contract As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCon", DbType:="Int NOT NULL")>  _
	Public Property IDCon() As Integer
		Get
			Return Me._IDCon
		End Get
		Set
			If ((Me._IDCon = value)  _
						= false) Then
				Me._IDCon = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDO", DbType:="Int NOT NULL")>  _
	Public Property IDO() As Integer
		Get
			Return Me._IDO
		End Get
		Set
			If ((Me._IDO = value)  _
						= false) Then
				Me._IDO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(200)")>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me._Title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contract", DbType:="NVarChar(MAX)")>  _
	Public Property Contract() As String
		Get
			Return Me._Contract
		End Get
		Set
			If (String.Equals(Me._Contract, value) = false) Then
				Me._Contract = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Covers")>  _
Partial Public Class Cover
	
	Private _IDCover As Integer
	
	Private _Title_Fa As String
	
	Private _Title_En As String
	
	Private _Description_Fa As String
	
	Private _Description_En As String
	
	Private _Location_Fa As String
	
	Private _Location_En As String
	
	Private _Moment_Fa As String
	
	Private _Moment_En As String
	
	Private _Address As String
	
	Private _Keyword_Fa As String
	
	Private _Keyword_En As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCover", DbType:="Int NOT NULL")>  _
	Public Property IDCover() As Integer
		Get
			Return Me._IDCover
		End Get
		Set
			If ((Me._IDCover = value)  _
						= false) Then
				Me._IDCover = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_Fa", DbType:="NVarChar(2000)")>  _
	Public Property Title_Fa() As String
		Get
			Return Me._Title_Fa
		End Get
		Set
			If (String.Equals(Me._Title_Fa, value) = false) Then
				Me._Title_Fa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_En", DbType:="NVarChar(2000)")>  _
	Public Property Title_En() As String
		Get
			Return Me._Title_En
		End Get
		Set
			If (String.Equals(Me._Title_En, value) = false) Then
				Me._Title_En = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Description_Fa() As String
		Get
			Return Me._Description_Fa
		End Get
		Set
			If (String.Equals(Me._Description_Fa, value) = false) Then
				Me._Description_Fa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_En", DbType:="NVarChar(4000)")>  _
	Public Property Description_En() As String
		Get
			Return Me._Description_En
		End Get
		Set
			If (String.Equals(Me._Description_En, value) = false) Then
				Me._Description_En = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location_Fa", DbType:="NVarChar(2000)")>  _
	Public Property Location_Fa() As String
		Get
			Return Me._Location_Fa
		End Get
		Set
			If (String.Equals(Me._Location_Fa, value) = false) Then
				Me._Location_Fa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location_En", DbType:="NVarChar(2000)")>  _
	Public Property Location_En() As String
		Get
			Return Me._Location_En
		End Get
		Set
			If (String.Equals(Me._Location_En, value) = false) Then
				Me._Location_En = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_Fa", DbType:="NVarChar(50)")>  _
	Public Property Moment_Fa() As String
		Get
			Return Me._Moment_Fa
		End Get
		Set
			If (String.Equals(Me._Moment_Fa, value) = false) Then
				Me._Moment_Fa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_En", DbType:="NVarChar(50)")>  _
	Public Property Moment_En() As String
		Get
			Return Me._Moment_En
		End Get
		Set
			If (String.Equals(Me._Moment_En, value) = false) Then
				Me._Moment_En = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(2000)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me._Address = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Keyword_Fa() As String
		Get
			Return Me._Keyword_Fa
		End Get
		Set
			If (String.Equals(Me._Keyword_Fa, value) = false) Then
				Me._Keyword_Fa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_En", DbType:="NVarChar(4000)")>  _
	Public Property Keyword_En() As String
		Get
			Return Me._Keyword_En
		End Get
		Set
			If (String.Equals(Me._Keyword_En, value) = false) Then
				Me._Keyword_En = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FAQm")>  _
Partial Public Class FAQm
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDF As Integer
	
	Private _Question_Fa As String
	
	Private _Question_En As String
	
	Private _Answer_Fa As String
	
	Private _Answer_En As String
	
	Private _IsShow As Boolean
	
	Private _Moment_Fa As String
	
	Private _Moment_En As String
	
	Private _Year_En As System.Nullable(Of Integer)
	
	Private _Month_En As System.Nullable(Of Integer)
	
	Private _Day_En As System.Nullable(Of Integer)
	
	Private _Keyword_Fa As String
	
	Private _Keyword_En As String
	
	Private _AnswerBy_Fa As String
	
	Private _AnswerBy_En As String
	
	Private _AskedBy_Fa As String
	
	Private _AskedBy_En As String
	
	Private _Seen As String
	
	Private _Priority As System.Nullable(Of Integer)
	
	Private _CatName_Fa As String
	
	Private _CatName_En As String
	
	Private _MetaDescription_Fa As String
	
	Private _MetaDescription_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDFChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDFChanged()
    End Sub
    Partial Private Sub OnQuestion_FaChanging(value As String)
    End Sub
    Partial Private Sub OnQuestion_FaChanged()
    End Sub
    Partial Private Sub OnQuestion_EnChanging(value As String)
    End Sub
    Partial Private Sub OnQuestion_EnChanged()
    End Sub
    Partial Private Sub OnAnswer_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAnswer_FaChanged()
    End Sub
    Partial Private Sub OnAnswer_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAnswer_EnChanged()
    End Sub
    Partial Private Sub OnIsShowChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsShowChanged()
    End Sub
    Partial Private Sub OnMoment_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_FaChanged()
    End Sub
    Partial Private Sub OnMoment_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_EnChanged()
    End Sub
    Partial Private Sub OnYear_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYear_EnChanged()
    End Sub
    Partial Private Sub OnMonth_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMonth_EnChanged()
    End Sub
    Partial Private Sub OnDay_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDay_EnChanged()
    End Sub
    Partial Private Sub OnKeyword_FaChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_FaChanged()
    End Sub
    Partial Private Sub OnKeyword_EnChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_EnChanged()
    End Sub
    Partial Private Sub OnAnswerBy_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAnswerBy_FaChanged()
    End Sub
    Partial Private Sub OnAnswerBy_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAnswerBy_EnChanged()
    End Sub
    Partial Private Sub OnAskedBy_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAskedBy_FaChanged()
    End Sub
    Partial Private Sub OnAskedBy_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAskedBy_EnChanged()
    End Sub
    Partial Private Sub OnSeenChanging(value As String)
    End Sub
    Partial Private Sub OnSeenChanged()
    End Sub
    Partial Private Sub OnPriorityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPriorityChanged()
    End Sub
    Partial Private Sub OnCatName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnCatName_FaChanged()
    End Sub
    Partial Private Sub OnCatName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnCatName_EnChanged()
    End Sub
    Partial Private Sub OnMetaDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMetaDescription_FaChanged()
    End Sub
    Partial Private Sub OnMetaDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMetaDescription_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDF", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDF() As Integer
		Get
			Return Me._IDF
		End Get
		Set
			If ((Me._IDF = value)  _
						= false) Then
				Me.OnIDFChanging(value)
				Me.SendPropertyChanging
				Me._IDF = value
				Me.SendPropertyChanged("IDF")
				Me.OnIDFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Question_Fa", DbType:="NVarChar(800) NOT NULL", CanBeNull:=false)>  _
	Public Property Question_Fa() As String
		Get
			Return Me._Question_Fa
		End Get
		Set
			If (String.Equals(Me._Question_Fa, value) = false) Then
				Me.OnQuestion_FaChanging(value)
				Me.SendPropertyChanging
				Me._Question_Fa = value
				Me.SendPropertyChanged("Question_Fa")
				Me.OnQuestion_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Question_En", DbType:="NVarChar(800)")>  _
	Public Property Question_En() As String
		Get
			Return Me._Question_En
		End Get
		Set
			If (String.Equals(Me._Question_En, value) = false) Then
				Me.OnQuestion_EnChanging(value)
				Me.SendPropertyChanging
				Me._Question_En = value
				Me.SendPropertyChanged("Question_En")
				Me.OnQuestion_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Answer_Fa", DbType:="NVarChar(4000) NOT NULL", CanBeNull:=false)>  _
	Public Property Answer_Fa() As String
		Get
			Return Me._Answer_Fa
		End Get
		Set
			If (String.Equals(Me._Answer_Fa, value) = false) Then
				Me.OnAnswer_FaChanging(value)
				Me.SendPropertyChanging
				Me._Answer_Fa = value
				Me.SendPropertyChanged("Answer_Fa")
				Me.OnAnswer_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Answer_En", DbType:="NVarChar(4000)")>  _
	Public Property Answer_En() As String
		Get
			Return Me._Answer_En
		End Get
		Set
			If (String.Equals(Me._Answer_En, value) = false) Then
				Me.OnAnswer_EnChanging(value)
				Me.SendPropertyChanging
				Me._Answer_En = value
				Me.SendPropertyChanged("Answer_En")
				Me.OnAnswer_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsShow", DbType:="Bit NOT NULL")>  _
	Public Property IsShow() As Boolean
		Get
			Return Me._IsShow
		End Get
		Set
			If ((Me._IsShow = value)  _
						= false) Then
				Me.OnIsShowChanging(value)
				Me.SendPropertyChanging
				Me._IsShow = value
				Me.SendPropertyChanged("IsShow")
				Me.OnIsShowChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_Fa", DbType:="NVarChar(50)")>  _
	Public Property Moment_Fa() As String
		Get
			Return Me._Moment_Fa
		End Get
		Set
			If (String.Equals(Me._Moment_Fa, value) = false) Then
				Me.OnMoment_FaChanging(value)
				Me.SendPropertyChanging
				Me._Moment_Fa = value
				Me.SendPropertyChanged("Moment_Fa")
				Me.OnMoment_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_En", DbType:="NVarChar(50)")>  _
	Public Property Moment_En() As String
		Get
			Return Me._Moment_En
		End Get
		Set
			If (String.Equals(Me._Moment_En, value) = false) Then
				Me.OnMoment_EnChanging(value)
				Me.SendPropertyChanging
				Me._Moment_En = value
				Me.SendPropertyChanged("Moment_En")
				Me.OnMoment_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year_En", DbType:="Int")>  _
	Public Property Year_En() As System.Nullable(Of Integer)
		Get
			Return Me._Year_En
		End Get
		Set
			If (Me._Year_En.Equals(value) = false) Then
				Me.OnYear_EnChanging(value)
				Me.SendPropertyChanging
				Me._Year_En = value
				Me.SendPropertyChanged("Year_En")
				Me.OnYear_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Month_En", DbType:="Int")>  _
	Public Property Month_En() As System.Nullable(Of Integer)
		Get
			Return Me._Month_En
		End Get
		Set
			If (Me._Month_En.Equals(value) = false) Then
				Me.OnMonth_EnChanging(value)
				Me.SendPropertyChanging
				Me._Month_En = value
				Me.SendPropertyChanged("Month_En")
				Me.OnMonth_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Day_En", DbType:="Int")>  _
	Public Property Day_En() As System.Nullable(Of Integer)
		Get
			Return Me._Day_En
		End Get
		Set
			If (Me._Day_En.Equals(value) = false) Then
				Me.OnDay_EnChanging(value)
				Me.SendPropertyChanging
				Me._Day_En = value
				Me.SendPropertyChanged("Day_En")
				Me.OnDay_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_Fa", DbType:="NVarChar(500)")>  _
	Public Property Keyword_Fa() As String
		Get
			Return Me._Keyword_Fa
		End Get
		Set
			If (String.Equals(Me._Keyword_Fa, value) = false) Then
				Me.OnKeyword_FaChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_Fa = value
				Me.SendPropertyChanged("Keyword_Fa")
				Me.OnKeyword_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_En", DbType:="NVarChar(500)")>  _
	Public Property Keyword_En() As String
		Get
			Return Me._Keyword_En
		End Get
		Set
			If (String.Equals(Me._Keyword_En, value) = false) Then
				Me.OnKeyword_EnChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_En = value
				Me.SendPropertyChanged("Keyword_En")
				Me.OnKeyword_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnswerBy_Fa", DbType:="NVarChar(500)")>  _
	Public Property AnswerBy_Fa() As String
		Get
			Return Me._AnswerBy_Fa
		End Get
		Set
			If (String.Equals(Me._AnswerBy_Fa, value) = false) Then
				Me.OnAnswerBy_FaChanging(value)
				Me.SendPropertyChanging
				Me._AnswerBy_Fa = value
				Me.SendPropertyChanged("AnswerBy_Fa")
				Me.OnAnswerBy_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnswerBy_En", DbType:="NVarChar(500)")>  _
	Public Property AnswerBy_En() As String
		Get
			Return Me._AnswerBy_En
		End Get
		Set
			If (String.Equals(Me._AnswerBy_En, value) = false) Then
				Me.OnAnswerBy_EnChanging(value)
				Me.SendPropertyChanging
				Me._AnswerBy_En = value
				Me.SendPropertyChanged("AnswerBy_En")
				Me.OnAnswerBy_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AskedBy_Fa", DbType:="NVarChar(500)")>  _
	Public Property AskedBy_Fa() As String
		Get
			Return Me._AskedBy_Fa
		End Get
		Set
			If (String.Equals(Me._AskedBy_Fa, value) = false) Then
				Me.OnAskedBy_FaChanging(value)
				Me.SendPropertyChanging
				Me._AskedBy_Fa = value
				Me.SendPropertyChanged("AskedBy_Fa")
				Me.OnAskedBy_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AskedBy_En", DbType:="NVarChar(500)")>  _
	Public Property AskedBy_En() As String
		Get
			Return Me._AskedBy_En
		End Get
		Set
			If (String.Equals(Me._AskedBy_En, value) = false) Then
				Me.OnAskedBy_EnChanging(value)
				Me.SendPropertyChanging
				Me._AskedBy_En = value
				Me.SendPropertyChanged("AskedBy_En")
				Me.OnAskedBy_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seen", DbType:="NChar(10)")>  _
	Public Property Seen() As String
		Get
			Return Me._Seen
		End Get
		Set
			If (String.Equals(Me._Seen, value) = false) Then
				Me.OnSeenChanging(value)
				Me.SendPropertyChanging
				Me._Seen = value
				Me.SendPropertyChanged("Seen")
				Me.OnSeenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="Int")>  _
	Public Property Priority() As System.Nullable(Of Integer)
		Get
			Return Me._Priority
		End Get
		Set
			If (Me._Priority.Equals(value) = false) Then
				Me.OnPriorityChanging(value)
				Me.SendPropertyChanging
				Me._Priority = value
				Me.SendPropertyChanged("Priority")
				Me.OnPriorityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatName_Fa", DbType:="NVarChar(100)")>  _
	Public Property CatName_Fa() As String
		Get
			Return Me._CatName_Fa
		End Get
		Set
			If (String.Equals(Me._CatName_Fa, value) = false) Then
				Me.OnCatName_FaChanging(value)
				Me.SendPropertyChanging
				Me._CatName_Fa = value
				Me.SendPropertyChanged("CatName_Fa")
				Me.OnCatName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatName_En", DbType:="NVarChar(100)")>  _
	Public Property CatName_En() As String
		Get
			Return Me._CatName_En
		End Get
		Set
			If (String.Equals(Me._CatName_En, value) = false) Then
				Me.OnCatName_EnChanging(value)
				Me.SendPropertyChanging
				Me._CatName_En = value
				Me.SendPropertyChanged("CatName_En")
				Me.OnCatName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MetaDescription_Fa", DbType:="NVarChar(1000)")>  _
	Public Property MetaDescription_Fa() As String
		Get
			Return Me._MetaDescription_Fa
		End Get
		Set
			If (String.Equals(Me._MetaDescription_Fa, value) = false) Then
				Me.OnMetaDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._MetaDescription_Fa = value
				Me.SendPropertyChanged("MetaDescription_Fa")
				Me.OnMetaDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MetaDescription_En", DbType:="NVarChar(1000)")>  _
	Public Property MetaDescription_En() As String
		Get
			Return Me._MetaDescription_En
		End Get
		Set
			If (String.Equals(Me._MetaDescription_En, value) = false) Then
				Me.OnMetaDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._MetaDescription_En = value
				Me.SendPropertyChanged("MetaDescription_En")
				Me.OnMetaDescription_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FaultLog")>  _
Partial Public Class FaultLog
	
	Private _Id As Integer
	
	Private _PageName As String
	
	Private _ErrorMessage As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL")>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me._Id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PageName", DbType:="NVarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property PageName() As String
		Get
			Return Me._PageName
		End Get
		Set
			If (String.Equals(Me._PageName, value) = false) Then
				Me._PageName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorMessage", DbType:="NVarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property ErrorMessage() As String
		Get
			Return Me._ErrorMessage
		End Get
		Set
			If (String.Equals(Me._ErrorMessage, value) = false) Then
				Me._ErrorMessage = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Gallery")>  _
Partial Public Class Gallery
	
	Private _IDG As Integer
	
	Private _Name_Fa As String
	
	Private _Description_Fa As String
	
	Private _Location_Fa As String
	
	Private _Moment_Fa As String
	
	Private _Name_En As String
	
	Private _Description_En As String
	
	Private _Location_En As String
	
	Private _Moment_En As String
	
	Private _PicName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDG", DbType:="Int NOT NULL")>  _
	Public Property IDG() As Integer
		Get
			Return Me._IDG
		End Get
		Set
			If ((Me._IDG = value)  _
						= false) Then
				Me._IDG = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_Fa", DbType:="NVarChar(100)")>  _
	Public Property Name_Fa() As String
		Get
			Return Me._Name_Fa
		End Get
		Set
			If (String.Equals(Me._Name_Fa, value) = false) Then
				Me._Name_Fa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_Fa", DbType:="NVarChar(1000)")>  _
	Public Property Description_Fa() As String
		Get
			Return Me._Description_Fa
		End Get
		Set
			If (String.Equals(Me._Description_Fa, value) = false) Then
				Me._Description_Fa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location_Fa", DbType:="NVarChar(500)")>  _
	Public Property Location_Fa() As String
		Get
			Return Me._Location_Fa
		End Get
		Set
			If (String.Equals(Me._Location_Fa, value) = false) Then
				Me._Location_Fa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_Fa", DbType:="NChar(10)")>  _
	Public Property Moment_Fa() As String
		Get
			Return Me._Moment_Fa
		End Get
		Set
			If (String.Equals(Me._Moment_Fa, value) = false) Then
				Me._Moment_Fa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_En", DbType:="NVarChar(100)")>  _
	Public Property Name_En() As String
		Get
			Return Me._Name_En
		End Get
		Set
			If (String.Equals(Me._Name_En, value) = false) Then
				Me._Name_En = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_En", DbType:="NVarChar(1000)")>  _
	Public Property Description_En() As String
		Get
			Return Me._Description_En
		End Get
		Set
			If (String.Equals(Me._Description_En, value) = false) Then
				Me._Description_En = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location_En", DbType:="NVarChar(500)")>  _
	Public Property Location_En() As String
		Get
			Return Me._Location_En
		End Get
		Set
			If (String.Equals(Me._Location_En, value) = false) Then
				Me._Location_En = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_En", DbType:="NChar(10)")>  _
	Public Property Moment_En() As String
		Get
			Return Me._Moment_En
		End Get
		Set
			If (String.Equals(Me._Moment_En, value) = false) Then
				Me._Moment_En = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PicName", DbType:="NVarChar(1100)")>  _
	Public Property PicName() As String
		Get
			Return Me._PicName
		End Get
		Set
			If (String.Equals(Me._PicName, value) = false) Then
				Me._PicName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Link")>  _
Partial Public Class Link
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDL As Integer
	
	Private _Name_Fa As String
	
	Private _Name_En As String
	
	Private _Address_Fa As String
	
	Private _Address_En As String
	
	Private _Alt_Fa As String
	
	Private _Alt_En As String
	
	Private _IDB As System.Nullable(Of Integer)
	
	Private _Target As String
	
	Private _Priority As System.Nullable(Of Integer)
	
	Private _IsHTML As System.Nullable(Of Boolean)
	
	Private _BodyHTML_Fa As String
	
	Private _BodyHTML_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDLChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDLChanged()
    End Sub
    Partial Private Sub OnName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnName_FaChanged()
    End Sub
    Partial Private Sub OnName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnName_EnChanged()
    End Sub
    Partial Private Sub OnAddress_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAddress_FaChanged()
    End Sub
    Partial Private Sub OnAddress_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAddress_EnChanged()
    End Sub
    Partial Private Sub OnAlt_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAlt_FaChanged()
    End Sub
    Partial Private Sub OnAlt_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAlt_EnChanged()
    End Sub
    Partial Private Sub OnIDBChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDBChanged()
    End Sub
    Partial Private Sub OnTargetChanging(value As String)
    End Sub
    Partial Private Sub OnTargetChanged()
    End Sub
    Partial Private Sub OnPriorityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPriorityChanged()
    End Sub
    Partial Private Sub OnIsHTMLChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsHTMLChanged()
    End Sub
    Partial Private Sub OnBodyHTML_FaChanging(value As String)
    End Sub
    Partial Private Sub OnBodyHTML_FaChanged()
    End Sub
    Partial Private Sub OnBodyHTML_EnChanging(value As String)
    End Sub
    Partial Private Sub OnBodyHTML_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDL", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDL() As Integer
		Get
			Return Me._IDL
		End Get
		Set
			If ((Me._IDL = value)  _
						= false) Then
				Me.OnIDLChanging(value)
				Me.SendPropertyChanging
				Me._IDL = value
				Me.SendPropertyChanged("IDL")
				Me.OnIDLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_Fa", DbType:="NVarChar(150)")>  _
	Public Property Name_Fa() As String
		Get
			Return Me._Name_Fa
		End Get
		Set
			If (String.Equals(Me._Name_Fa, value) = false) Then
				Me.OnName_FaChanging(value)
				Me.SendPropertyChanging
				Me._Name_Fa = value
				Me.SendPropertyChanged("Name_Fa")
				Me.OnName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_En", DbType:="NVarChar(150)")>  _
	Public Property Name_En() As String
		Get
			Return Me._Name_En
		End Get
		Set
			If (String.Equals(Me._Name_En, value) = false) Then
				Me.OnName_EnChanging(value)
				Me.SendPropertyChanging
				Me._Name_En = value
				Me.SendPropertyChanged("Name_En")
				Me.OnName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address_Fa", DbType:="NVarChar(1100)")>  _
	Public Property Address_Fa() As String
		Get
			Return Me._Address_Fa
		End Get
		Set
			If (String.Equals(Me._Address_Fa, value) = false) Then
				Me.OnAddress_FaChanging(value)
				Me.SendPropertyChanging
				Me._Address_Fa = value
				Me.SendPropertyChanged("Address_Fa")
				Me.OnAddress_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address_En", DbType:="NVarChar(1100)")>  _
	Public Property Address_En() As String
		Get
			Return Me._Address_En
		End Get
		Set
			If (String.Equals(Me._Address_En, value) = false) Then
				Me.OnAddress_EnChanging(value)
				Me.SendPropertyChanging
				Me._Address_En = value
				Me.SendPropertyChanged("Address_En")
				Me.OnAddress_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Alt_Fa", DbType:="NVarChar(1100)")>  _
	Public Property Alt_Fa() As String
		Get
			Return Me._Alt_Fa
		End Get
		Set
			If (String.Equals(Me._Alt_Fa, value) = false) Then
				Me.OnAlt_FaChanging(value)
				Me.SendPropertyChanging
				Me._Alt_Fa = value
				Me.SendPropertyChanged("Alt_Fa")
				Me.OnAlt_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Alt_En", DbType:="NVarChar(1100)")>  _
	Public Property Alt_En() As String
		Get
			Return Me._Alt_En
		End Get
		Set
			If (String.Equals(Me._Alt_En, value) = false) Then
				Me.OnAlt_EnChanging(value)
				Me.SendPropertyChanging
				Me._Alt_En = value
				Me.SendPropertyChanged("Alt_En")
				Me.OnAlt_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDB", DbType:="Int")>  _
	Public Property IDB() As System.Nullable(Of Integer)
		Get
			Return Me._IDB
		End Get
		Set
			If (Me._IDB.Equals(value) = false) Then
				Me.OnIDBChanging(value)
				Me.SendPropertyChanging
				Me._IDB = value
				Me.SendPropertyChanged("IDB")
				Me.OnIDBChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Target", DbType:="NVarChar(7)")>  _
	Public Property Target() As String
		Get
			Return Me._Target
		End Get
		Set
			If (String.Equals(Me._Target, value) = false) Then
				Me.OnTargetChanging(value)
				Me.SendPropertyChanging
				Me._Target = value
				Me.SendPropertyChanged("Target")
				Me.OnTargetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="Int")>  _
	Public Property Priority() As System.Nullable(Of Integer)
		Get
			Return Me._Priority
		End Get
		Set
			If (Me._Priority.Equals(value) = false) Then
				Me.OnPriorityChanging(value)
				Me.SendPropertyChanging
				Me._Priority = value
				Me.SendPropertyChanged("Priority")
				Me.OnPriorityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsHTML", DbType:="Bit")>  _
	Public Property IsHTML() As System.Nullable(Of Boolean)
		Get
			Return Me._IsHTML
		End Get
		Set
			If (Me._IsHTML.Equals(value) = false) Then
				Me.OnIsHTMLChanging(value)
				Me.SendPropertyChanging
				Me._IsHTML = value
				Me.SendPropertyChanged("IsHTML")
				Me.OnIsHTMLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BodyHTML_Fa", DbType:="NVarChar(4000)")>  _
	Public Property BodyHTML_Fa() As String
		Get
			Return Me._BodyHTML_Fa
		End Get
		Set
			If (String.Equals(Me._BodyHTML_Fa, value) = false) Then
				Me.OnBodyHTML_FaChanging(value)
				Me.SendPropertyChanging
				Me._BodyHTML_Fa = value
				Me.SendPropertyChanged("BodyHTML_Fa")
				Me.OnBodyHTML_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BodyHTML_En", DbType:="NVarChar(4000)")>  _
	Public Property BodyHTML_En() As String
		Get
			Return Me._BodyHTML_En
		End Get
		Set
			If (String.Equals(Me._BodyHTML_En, value) = false) Then
				Me.OnBodyHTML_EnChanging(value)
				Me.SendPropertyChanging
				Me._BodyHTML_En = value
				Me.SendPropertyChanged("BodyHTML_En")
				Me.OnBodyHTML_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MegaMenu")>  _
Partial Public Class MegaMenu
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDMM As Integer
	
	Private _IDSM As System.Nullable(Of Integer)
	
	Private _Image As String
	
	Private _Href As String
	
	Private _Content_Fa As String
	
	Private _Content_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDMMChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDMMChanged()
    End Sub
    Partial Private Sub OnIDSMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDSMChanged()
    End Sub
    Partial Private Sub OnImageChanging(value As String)
    End Sub
    Partial Private Sub OnImageChanged()
    End Sub
    Partial Private Sub OnHrefChanging(value As String)
    End Sub
    Partial Private Sub OnHrefChanged()
    End Sub
    Partial Private Sub OnContent_FaChanging(value As String)
    End Sub
    Partial Private Sub OnContent_FaChanged()
    End Sub
    Partial Private Sub OnContent_EnChanging(value As String)
    End Sub
    Partial Private Sub OnContent_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDMM", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDMM() As Integer
		Get
			Return Me._IDMM
		End Get
		Set
			If ((Me._IDMM = value)  _
						= false) Then
				Me.OnIDMMChanging(value)
				Me.SendPropertyChanging
				Me._IDMM = value
				Me.SendPropertyChanged("IDMM")
				Me.OnIDMMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSM", DbType:="Int")>  _
	Public Property IDSM() As System.Nullable(Of Integer)
		Get
			Return Me._IDSM
		End Get
		Set
			If (Me._IDSM.Equals(value) = false) Then
				Me.OnIDSMChanging(value)
				Me.SendPropertyChanging
				Me._IDSM = value
				Me.SendPropertyChanged("IDSM")
				Me.OnIDSMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Image", DbType:="NVarChar(2000)")>  _
	Public Property Image() As String
		Get
			Return Me._Image
		End Get
		Set
			If (String.Equals(Me._Image, value) = false) Then
				Me.OnImageChanging(value)
				Me.SendPropertyChanging
				Me._Image = value
				Me.SendPropertyChanged("Image")
				Me.OnImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Href", DbType:="NVarChar(2000)")>  _
	Public Property Href() As String
		Get
			Return Me._Href
		End Get
		Set
			If (String.Equals(Me._Href, value) = false) Then
				Me.OnHrefChanging(value)
				Me.SendPropertyChanging
				Me._Href = value
				Me.SendPropertyChanged("Href")
				Me.OnHrefChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Content_Fa", DbType:="NVarChar(MAX)")>  _
	Public Property Content_Fa() As String
		Get
			Return Me._Content_Fa
		End Get
		Set
			If (String.Equals(Me._Content_Fa, value) = false) Then
				Me.OnContent_FaChanging(value)
				Me.SendPropertyChanging
				Me._Content_Fa = value
				Me.SendPropertyChanged("Content_Fa")
				Me.OnContent_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Content_En", DbType:="NVarChar(MAX)")>  _
	Public Property Content_En() As String
		Get
			Return Me._Content_En
		End Get
		Set
			If (String.Equals(Me._Content_En, value) = false) Then
				Me.OnContent_EnChanging(value)
				Me.SendPropertyChanging
				Me._Content_En = value
				Me.SendPropertyChanged("Content_En")
				Me.OnContent_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Menu")>  _
Partial Public Class Menu
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDM As Integer
	
	Private _Name_Fa As String
	
	Private _Name_En As String
	
	Private _Alt_Fa As String
	
	Private _Alt_En As String
	
	Private _Target As String
	
	Private _Href As String
	
	Private _IsShow As System.Nullable(Of Boolean)
	
	Private _Priority As System.Nullable(Of Integer)
	
	Private _IDSM As System.Nullable(Of Integer)
	
	Private _HasSub As System.Nullable(Of Boolean)
	
	Private _MegaMenu As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDMChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDMChanged()
    End Sub
    Partial Private Sub OnName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnName_FaChanged()
    End Sub
    Partial Private Sub OnName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnName_EnChanged()
    End Sub
    Partial Private Sub OnAlt_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAlt_FaChanged()
    End Sub
    Partial Private Sub OnAlt_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAlt_EnChanged()
    End Sub
    Partial Private Sub OnTargetChanging(value As String)
    End Sub
    Partial Private Sub OnTargetChanged()
    End Sub
    Partial Private Sub OnHrefChanging(value As String)
    End Sub
    Partial Private Sub OnHrefChanged()
    End Sub
    Partial Private Sub OnIsShowChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsShowChanged()
    End Sub
    Partial Private Sub OnPriorityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPriorityChanged()
    End Sub
    Partial Private Sub OnIDSMChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDSMChanged()
    End Sub
    Partial Private Sub OnHasSubChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnHasSubChanged()
    End Sub
    Partial Private Sub OnMegaMenuChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnMegaMenuChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDM", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDM() As Integer
		Get
			Return Me._IDM
		End Get
		Set
			If ((Me._IDM = value)  _
						= false) Then
				Me.OnIDMChanging(value)
				Me.SendPropertyChanging
				Me._IDM = value
				Me.SendPropertyChanged("IDM")
				Me.OnIDMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_Fa", DbType:="NVarChar(500)")>  _
	Public Property Name_Fa() As String
		Get
			Return Me._Name_Fa
		End Get
		Set
			If (String.Equals(Me._Name_Fa, value) = false) Then
				Me.OnName_FaChanging(value)
				Me.SendPropertyChanging
				Me._Name_Fa = value
				Me.SendPropertyChanged("Name_Fa")
				Me.OnName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_En", DbType:="NVarChar(500)")>  _
	Public Property Name_En() As String
		Get
			Return Me._Name_En
		End Get
		Set
			If (String.Equals(Me._Name_En, value) = false) Then
				Me.OnName_EnChanging(value)
				Me.SendPropertyChanging
				Me._Name_En = value
				Me.SendPropertyChanged("Name_En")
				Me.OnName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Alt_Fa", DbType:="NVarChar(1000)")>  _
	Public Property Alt_Fa() As String
		Get
			Return Me._Alt_Fa
		End Get
		Set
			If (String.Equals(Me._Alt_Fa, value) = false) Then
				Me.OnAlt_FaChanging(value)
				Me.SendPropertyChanging
				Me._Alt_Fa = value
				Me.SendPropertyChanged("Alt_Fa")
				Me.OnAlt_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Alt_En", DbType:="NVarChar(1000)")>  _
	Public Property Alt_En() As String
		Get
			Return Me._Alt_En
		End Get
		Set
			If (String.Equals(Me._Alt_En, value) = false) Then
				Me.OnAlt_EnChanging(value)
				Me.SendPropertyChanging
				Me._Alt_En = value
				Me.SendPropertyChanged("Alt_En")
				Me.OnAlt_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Target", DbType:="NVarChar(100)")>  _
	Public Property Target() As String
		Get
			Return Me._Target
		End Get
		Set
			If (String.Equals(Me._Target, value) = false) Then
				Me.OnTargetChanging(value)
				Me.SendPropertyChanging
				Me._Target = value
				Me.SendPropertyChanged("Target")
				Me.OnTargetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Href", DbType:="NVarChar(4000)")>  _
	Public Property Href() As String
		Get
			Return Me._Href
		End Get
		Set
			If (String.Equals(Me._Href, value) = false) Then
				Me.OnHrefChanging(value)
				Me.SendPropertyChanging
				Me._Href = value
				Me.SendPropertyChanged("Href")
				Me.OnHrefChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsShow", DbType:="Bit")>  _
	Public Property IsShow() As System.Nullable(Of Boolean)
		Get
			Return Me._IsShow
		End Get
		Set
			If (Me._IsShow.Equals(value) = false) Then
				Me.OnIsShowChanging(value)
				Me.SendPropertyChanging
				Me._IsShow = value
				Me.SendPropertyChanged("IsShow")
				Me.OnIsShowChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="Int")>  _
	Public Property Priority() As System.Nullable(Of Integer)
		Get
			Return Me._Priority
		End Get
		Set
			If (Me._Priority.Equals(value) = false) Then
				Me.OnPriorityChanging(value)
				Me.SendPropertyChanging
				Me._Priority = value
				Me.SendPropertyChanged("Priority")
				Me.OnPriorityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSM", DbType:="Int")>  _
	Public Property IDSM() As System.Nullable(Of Integer)
		Get
			Return Me._IDSM
		End Get
		Set
			If (Me._IDSM.Equals(value) = false) Then
				Me.OnIDSMChanging(value)
				Me.SendPropertyChanging
				Me._IDSM = value
				Me.SendPropertyChanged("IDSM")
				Me.OnIDSMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HasSub", DbType:="Bit")>  _
	Public Property HasSub() As System.Nullable(Of Boolean)
		Get
			Return Me._HasSub
		End Get
		Set
			If (Me._HasSub.Equals(value) = false) Then
				Me.OnHasSubChanging(value)
				Me.SendPropertyChanging
				Me._HasSub = value
				Me.SendPropertyChanged("HasSub")
				Me.OnHasSubChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MegaMenu", DbType:="Bit")>  _
	Public Property MegaMenu() As System.Nullable(Of Boolean)
		Get
			Return Me._MegaMenu
		End Get
		Set
			If (Me._MegaMenu.Equals(value) = false) Then
				Me.OnMegaMenuChanging(value)
				Me.SendPropertyChanging
				Me._MegaMenu = value
				Me.SendPropertyChanged("MegaMenu")
				Me.OnMegaMenuChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Message")>  _
Partial Public Class Message
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDMessage As Integer
	
	Private _Title_Fa As String
	
	Private _Title_En As String
	
	Private _PreMessage_Fa As String
	
	Private _Message_Fa As String
	
	Private _PreMessage_En As String
	
	Private _Message_En As String
	
	Private _Keyword_Fa As String
	
	Private _Keyword_En As String
	
	Private _IsShow As System.Nullable(Of Boolean)
	
	Private _Image As String
	
	Private _WrittenBy_Fa As String
	
	Private _WrittenBy_En As String
	
	Private _Priority As System.Nullable(Of Integer)
	
	Private _CatName_Fa As String
	
	Private _CatName_En As String
	
	Private _Moment_Fa As String
	
	Private _Moment_En As String
	
	Private _Year_En As System.Nullable(Of Integer)
	
	Private _Month_En As System.Nullable(Of Integer)
	
	Private _Day_En As System.Nullable(Of Integer)
	
	Private _MetaDescription_Fa As String
	
	Private _MetaDescription_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDMessageChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDMessageChanged()
    End Sub
    Partial Private Sub OnTitle_FaChanging(value As String)
    End Sub
    Partial Private Sub OnTitle_FaChanged()
    End Sub
    Partial Private Sub OnTitle_EnChanging(value As String)
    End Sub
    Partial Private Sub OnTitle_EnChanged()
    End Sub
    Partial Private Sub OnPreMessage_FaChanging(value As String)
    End Sub
    Partial Private Sub OnPreMessage_FaChanged()
    End Sub
    Partial Private Sub OnMessage_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMessage_FaChanged()
    End Sub
    Partial Private Sub OnPreMessage_EnChanging(value As String)
    End Sub
    Partial Private Sub OnPreMessage_EnChanged()
    End Sub
    Partial Private Sub OnMessage_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMessage_EnChanged()
    End Sub
    Partial Private Sub OnKeyword_FaChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_FaChanged()
    End Sub
    Partial Private Sub OnKeyword_EnChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_EnChanged()
    End Sub
    Partial Private Sub OnIsShowChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsShowChanged()
    End Sub
    Partial Private Sub OnImageChanging(value As String)
    End Sub
    Partial Private Sub OnImageChanged()
    End Sub
    Partial Private Sub OnWrittenBy_FaChanging(value As String)
    End Sub
    Partial Private Sub OnWrittenBy_FaChanged()
    End Sub
    Partial Private Sub OnWrittenBy_EnChanging(value As String)
    End Sub
    Partial Private Sub OnWrittenBy_EnChanged()
    End Sub
    Partial Private Sub OnPriorityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPriorityChanged()
    End Sub
    Partial Private Sub OnCatName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnCatName_FaChanged()
    End Sub
    Partial Private Sub OnCatName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnCatName_EnChanged()
    End Sub
    Partial Private Sub OnMoment_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_FaChanged()
    End Sub
    Partial Private Sub OnMoment_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_EnChanged()
    End Sub
    Partial Private Sub OnYear_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYear_EnChanged()
    End Sub
    Partial Private Sub OnMonth_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMonth_EnChanged()
    End Sub
    Partial Private Sub OnDay_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDay_EnChanged()
    End Sub
    Partial Private Sub OnMetaDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMetaDescription_FaChanged()
    End Sub
    Partial Private Sub OnMetaDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMetaDescription_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDMessage", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDMessage() As Integer
		Get
			Return Me._IDMessage
		End Get
		Set
			If ((Me._IDMessage = value)  _
						= false) Then
				Me.OnIDMessageChanging(value)
				Me.SendPropertyChanging
				Me._IDMessage = value
				Me.SendPropertyChanged("IDMessage")
				Me.OnIDMessageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_Fa", DbType:="NVarChar(500)")>  _
	Public Property Title_Fa() As String
		Get
			Return Me._Title_Fa
		End Get
		Set
			If (String.Equals(Me._Title_Fa, value) = false) Then
				Me.OnTitle_FaChanging(value)
				Me.SendPropertyChanging
				Me._Title_Fa = value
				Me.SendPropertyChanged("Title_Fa")
				Me.OnTitle_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_En", DbType:="NVarChar(500)")>  _
	Public Property Title_En() As String
		Get
			Return Me._Title_En
		End Get
		Set
			If (String.Equals(Me._Title_En, value) = false) Then
				Me.OnTitle_EnChanging(value)
				Me.SendPropertyChanging
				Me._Title_En = value
				Me.SendPropertyChanged("Title_En")
				Me.OnTitle_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PreMessage_Fa", DbType:="NVarChar(MAX)")>  _
	Public Property PreMessage_Fa() As String
		Get
			Return Me._PreMessage_Fa
		End Get
		Set
			If (String.Equals(Me._PreMessage_Fa, value) = false) Then
				Me.OnPreMessage_FaChanging(value)
				Me.SendPropertyChanging
				Me._PreMessage_Fa = value
				Me.SendPropertyChanged("PreMessage_Fa")
				Me.OnPreMessage_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Message_Fa", DbType:="NVarChar(MAX)")>  _
	Public Property Message_Fa() As String
		Get
			Return Me._Message_Fa
		End Get
		Set
			If (String.Equals(Me._Message_Fa, value) = false) Then
				Me.OnMessage_FaChanging(value)
				Me.SendPropertyChanging
				Me._Message_Fa = value
				Me.SendPropertyChanged("Message_Fa")
				Me.OnMessage_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PreMessage_En", DbType:="NVarChar(MAX)")>  _
	Public Property PreMessage_En() As String
		Get
			Return Me._PreMessage_En
		End Get
		Set
			If (String.Equals(Me._PreMessage_En, value) = false) Then
				Me.OnPreMessage_EnChanging(value)
				Me.SendPropertyChanging
				Me._PreMessage_En = value
				Me.SendPropertyChanged("PreMessage_En")
				Me.OnPreMessage_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Message_En", DbType:="NVarChar(MAX)")>  _
	Public Property Message_En() As String
		Get
			Return Me._Message_En
		End Get
		Set
			If (String.Equals(Me._Message_En, value) = false) Then
				Me.OnMessage_EnChanging(value)
				Me.SendPropertyChanging
				Me._Message_En = value
				Me.SendPropertyChanged("Message_En")
				Me.OnMessage_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Keyword_Fa() As String
		Get
			Return Me._Keyword_Fa
		End Get
		Set
			If (String.Equals(Me._Keyword_Fa, value) = false) Then
				Me.OnKeyword_FaChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_Fa = value
				Me.SendPropertyChanged("Keyword_Fa")
				Me.OnKeyword_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_En", DbType:="NVarChar(4000)")>  _
	Public Property Keyword_En() As String
		Get
			Return Me._Keyword_En
		End Get
		Set
			If (String.Equals(Me._Keyword_En, value) = false) Then
				Me.OnKeyword_EnChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_En = value
				Me.SendPropertyChanged("Keyword_En")
				Me.OnKeyword_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsShow", DbType:="Bit")>  _
	Public Property IsShow() As System.Nullable(Of Boolean)
		Get
			Return Me._IsShow
		End Get
		Set
			If (Me._IsShow.Equals(value) = false) Then
				Me.OnIsShowChanging(value)
				Me.SendPropertyChanging
				Me._IsShow = value
				Me.SendPropertyChanged("IsShow")
				Me.OnIsShowChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Image", DbType:="NVarChar(2000)")>  _
	Public Property Image() As String
		Get
			Return Me._Image
		End Get
		Set
			If (String.Equals(Me._Image, value) = false) Then
				Me.OnImageChanging(value)
				Me.SendPropertyChanging
				Me._Image = value
				Me.SendPropertyChanged("Image")
				Me.OnImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WrittenBy_Fa", DbType:="NVarChar(1000)")>  _
	Public Property WrittenBy_Fa() As String
		Get
			Return Me._WrittenBy_Fa
		End Get
		Set
			If (String.Equals(Me._WrittenBy_Fa, value) = false) Then
				Me.OnWrittenBy_FaChanging(value)
				Me.SendPropertyChanging
				Me._WrittenBy_Fa = value
				Me.SendPropertyChanged("WrittenBy_Fa")
				Me.OnWrittenBy_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WrittenBy_En", DbType:="NVarChar(1000)")>  _
	Public Property WrittenBy_En() As String
		Get
			Return Me._WrittenBy_En
		End Get
		Set
			If (String.Equals(Me._WrittenBy_En, value) = false) Then
				Me.OnWrittenBy_EnChanging(value)
				Me.SendPropertyChanging
				Me._WrittenBy_En = value
				Me.SendPropertyChanged("WrittenBy_En")
				Me.OnWrittenBy_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="Int")>  _
	Public Property Priority() As System.Nullable(Of Integer)
		Get
			Return Me._Priority
		End Get
		Set
			If (Me._Priority.Equals(value) = false) Then
				Me.OnPriorityChanging(value)
				Me.SendPropertyChanging
				Me._Priority = value
				Me.SendPropertyChanged("Priority")
				Me.OnPriorityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatName_Fa", DbType:="NVarChar(4000)")>  _
	Public Property CatName_Fa() As String
		Get
			Return Me._CatName_Fa
		End Get
		Set
			If (String.Equals(Me._CatName_Fa, value) = false) Then
				Me.OnCatName_FaChanging(value)
				Me.SendPropertyChanging
				Me._CatName_Fa = value
				Me.SendPropertyChanged("CatName_Fa")
				Me.OnCatName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatName_En", DbType:="NVarChar(4000)")>  _
	Public Property CatName_En() As String
		Get
			Return Me._CatName_En
		End Get
		Set
			If (String.Equals(Me._CatName_En, value) = false) Then
				Me.OnCatName_EnChanging(value)
				Me.SendPropertyChanging
				Me._CatName_En = value
				Me.SendPropertyChanged("CatName_En")
				Me.OnCatName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_Fa", DbType:="NVarChar(50)")>  _
	Public Property Moment_Fa() As String
		Get
			Return Me._Moment_Fa
		End Get
		Set
			If (String.Equals(Me._Moment_Fa, value) = false) Then
				Me.OnMoment_FaChanging(value)
				Me.SendPropertyChanging
				Me._Moment_Fa = value
				Me.SendPropertyChanged("Moment_Fa")
				Me.OnMoment_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_En", DbType:="NVarChar(50)")>  _
	Public Property Moment_En() As String
		Get
			Return Me._Moment_En
		End Get
		Set
			If (String.Equals(Me._Moment_En, value) = false) Then
				Me.OnMoment_EnChanging(value)
				Me.SendPropertyChanging
				Me._Moment_En = value
				Me.SendPropertyChanged("Moment_En")
				Me.OnMoment_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year_En", DbType:="Int")>  _
	Public Property Year_En() As System.Nullable(Of Integer)
		Get
			Return Me._Year_En
		End Get
		Set
			If (Me._Year_En.Equals(value) = false) Then
				Me.OnYear_EnChanging(value)
				Me.SendPropertyChanging
				Me._Year_En = value
				Me.SendPropertyChanged("Year_En")
				Me.OnYear_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Month_En", DbType:="Int")>  _
	Public Property Month_En() As System.Nullable(Of Integer)
		Get
			Return Me._Month_En
		End Get
		Set
			If (Me._Month_En.Equals(value) = false) Then
				Me.OnMonth_EnChanging(value)
				Me.SendPropertyChanging
				Me._Month_En = value
				Me.SendPropertyChanged("Month_En")
				Me.OnMonth_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Day_En", DbType:="Int")>  _
	Public Property Day_En() As System.Nullable(Of Integer)
		Get
			Return Me._Day_En
		End Get
		Set
			If (Me._Day_En.Equals(value) = false) Then
				Me.OnDay_EnChanging(value)
				Me.SendPropertyChanging
				Me._Day_En = value
				Me.SendPropertyChanged("Day_En")
				Me.OnDay_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MetaDescription_Fa", DbType:="NVarChar(1000)")>  _
	Public Property MetaDescription_Fa() As String
		Get
			Return Me._MetaDescription_Fa
		End Get
		Set
			If (String.Equals(Me._MetaDescription_Fa, value) = false) Then
				Me.OnMetaDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._MetaDescription_Fa = value
				Me.SendPropertyChanged("MetaDescription_Fa")
				Me.OnMetaDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MetaDescription_En", DbType:="NVarChar(1000)")>  _
	Public Property MetaDescription_En() As String
		Get
			Return Me._MetaDescription_En
		End Get
		Set
			If (String.Equals(Me._MetaDescription_En, value) = false) Then
				Me.OnMetaDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._MetaDescription_En = value
				Me.SendPropertyChanged("MetaDescription_En")
				Me.OnMetaDescription_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.News1")>  _
Partial Public Class News1
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDN As Integer
	
	Private _Title_Fa As String
	
	Private _Title_En As String
	
	Private _PreMSG_Fa As String
	
	Private _MSG_Fa As String
	
	Private _PreMSG_En As String
	
	Private _MSG_En As String
	
	Private _IsShow As System.Nullable(Of Boolean)
	
	Private _Priority As System.Nullable(Of Integer)
	
	Private _Access As String
	
	Private _Keyword_Fa As String
	
	Private _Keyword_En As String
	
	Private _Pic As String
	
	Private _Moment_Fa As String
	
	Private _Moment_En As String
	
	Private _Year_En As System.Nullable(Of Integer)
	
	Private _Month_En As System.Nullable(Of Integer)
	
	Private _Day_En As System.Nullable(Of Integer)
	
	Private _WrittenBy_Fa As String
	
	Private _WrittenBy_En As String
	
	Private _CatName_Fa As String
	
	Private _CatName_En As String
	
	Private _MetaDescription_Fa As String
	
	Private _MetaDescription_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDNChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDNChanged()
    End Sub
    Partial Private Sub OnTitle_FaChanging(value As String)
    End Sub
    Partial Private Sub OnTitle_FaChanged()
    End Sub
    Partial Private Sub OnTitle_EnChanging(value As String)
    End Sub
    Partial Private Sub OnTitle_EnChanged()
    End Sub
    Partial Private Sub OnPreMSG_FaChanging(value As String)
    End Sub
    Partial Private Sub OnPreMSG_FaChanged()
    End Sub
    Partial Private Sub OnMSG_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMSG_FaChanged()
    End Sub
    Partial Private Sub OnPreMSG_EnChanging(value As String)
    End Sub
    Partial Private Sub OnPreMSG_EnChanged()
    End Sub
    Partial Private Sub OnMSG_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMSG_EnChanged()
    End Sub
    Partial Private Sub OnIsShowChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsShowChanged()
    End Sub
    Partial Private Sub OnPriorityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPriorityChanged()
    End Sub
    Partial Private Sub OnAccessChanging(value As String)
    End Sub
    Partial Private Sub OnAccessChanged()
    End Sub
    Partial Private Sub OnKeyword_FaChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_FaChanged()
    End Sub
    Partial Private Sub OnKeyword_EnChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_EnChanged()
    End Sub
    Partial Private Sub OnPicChanging(value As String)
    End Sub
    Partial Private Sub OnPicChanged()
    End Sub
    Partial Private Sub OnMoment_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_FaChanged()
    End Sub
    Partial Private Sub OnMoment_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_EnChanged()
    End Sub
    Partial Private Sub OnYear_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYear_EnChanged()
    End Sub
    Partial Private Sub OnMonth_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMonth_EnChanged()
    End Sub
    Partial Private Sub OnDay_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDay_EnChanged()
    End Sub
    Partial Private Sub OnWrittenBy_FaChanging(value As String)
    End Sub
    Partial Private Sub OnWrittenBy_FaChanged()
    End Sub
    Partial Private Sub OnWrittenBy_EnChanging(value As String)
    End Sub
    Partial Private Sub OnWrittenBy_EnChanged()
    End Sub
    Partial Private Sub OnCatName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnCatName_FaChanged()
    End Sub
    Partial Private Sub OnCatName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnCatName_EnChanged()
    End Sub
    Partial Private Sub OnMetaDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMetaDescription_FaChanged()
    End Sub
    Partial Private Sub OnMetaDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMetaDescription_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDN", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDN() As Integer
		Get
			Return Me._IDN
		End Get
		Set
			If ((Me._IDN = value)  _
						= false) Then
				Me.OnIDNChanging(value)
				Me.SendPropertyChanging
				Me._IDN = value
				Me.SendPropertyChanged("IDN")
				Me.OnIDNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_Fa", DbType:="NVarChar(500)")>  _
	Public Property Title_Fa() As String
		Get
			Return Me._Title_Fa
		End Get
		Set
			If (String.Equals(Me._Title_Fa, value) = false) Then
				Me.OnTitle_FaChanging(value)
				Me.SendPropertyChanging
				Me._Title_Fa = value
				Me.SendPropertyChanged("Title_Fa")
				Me.OnTitle_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_En", DbType:="NVarChar(500)")>  _
	Public Property Title_En() As String
		Get
			Return Me._Title_En
		End Get
		Set
			If (String.Equals(Me._Title_En, value) = false) Then
				Me.OnTitle_EnChanging(value)
				Me.SendPropertyChanging
				Me._Title_En = value
				Me.SendPropertyChanged("Title_En")
				Me.OnTitle_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PreMSG_Fa", DbType:="NVarChar(4000)")>  _
	Public Property PreMSG_Fa() As String
		Get
			Return Me._PreMSG_Fa
		End Get
		Set
			If (String.Equals(Me._PreMSG_Fa, value) = false) Then
				Me.OnPreMSG_FaChanging(value)
				Me.SendPropertyChanging
				Me._PreMSG_Fa = value
				Me.SendPropertyChanged("PreMSG_Fa")
				Me.OnPreMSG_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSG_Fa", DbType:="NVarChar(MAX)")>  _
	Public Property MSG_Fa() As String
		Get
			Return Me._MSG_Fa
		End Get
		Set
			If (String.Equals(Me._MSG_Fa, value) = false) Then
				Me.OnMSG_FaChanging(value)
				Me.SendPropertyChanging
				Me._MSG_Fa = value
				Me.SendPropertyChanged("MSG_Fa")
				Me.OnMSG_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PreMSG_En", DbType:="NVarChar(4000)")>  _
	Public Property PreMSG_En() As String
		Get
			Return Me._PreMSG_En
		End Get
		Set
			If (String.Equals(Me._PreMSG_En, value) = false) Then
				Me.OnPreMSG_EnChanging(value)
				Me.SendPropertyChanging
				Me._PreMSG_En = value
				Me.SendPropertyChanged("PreMSG_En")
				Me.OnPreMSG_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSG_En", DbType:="NVarChar(MAX)")>  _
	Public Property MSG_En() As String
		Get
			Return Me._MSG_En
		End Get
		Set
			If (String.Equals(Me._MSG_En, value) = false) Then
				Me.OnMSG_EnChanging(value)
				Me.SendPropertyChanging
				Me._MSG_En = value
				Me.SendPropertyChanged("MSG_En")
				Me.OnMSG_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsShow", DbType:="Bit")>  _
	Public Property IsShow() As System.Nullable(Of Boolean)
		Get
			Return Me._IsShow
		End Get
		Set
			If (Me._IsShow.Equals(value) = false) Then
				Me.OnIsShowChanging(value)
				Me.SendPropertyChanging
				Me._IsShow = value
				Me.SendPropertyChanged("IsShow")
				Me.OnIsShowChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="Int")>  _
	Public Property Priority() As System.Nullable(Of Integer)
		Get
			Return Me._Priority
		End Get
		Set
			If (Me._Priority.Equals(value) = false) Then
				Me.OnPriorityChanging(value)
				Me.SendPropertyChanging
				Me._Priority = value
				Me.SendPropertyChanged("Priority")
				Me.OnPriorityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Access", DbType:="NVarChar(10)")>  _
	Public Property Access() As String
		Get
			Return Me._Access
		End Get
		Set
			If (String.Equals(Me._Access, value) = false) Then
				Me.OnAccessChanging(value)
				Me.SendPropertyChanging
				Me._Access = value
				Me.SendPropertyChanged("Access")
				Me.OnAccessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_Fa", DbType:="NVarChar(500)")>  _
	Public Property Keyword_Fa() As String
		Get
			Return Me._Keyword_Fa
		End Get
		Set
			If (String.Equals(Me._Keyword_Fa, value) = false) Then
				Me.OnKeyword_FaChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_Fa = value
				Me.SendPropertyChanged("Keyword_Fa")
				Me.OnKeyword_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_En", DbType:="NVarChar(500)")>  _
	Public Property Keyword_En() As String
		Get
			Return Me._Keyword_En
		End Get
		Set
			If (String.Equals(Me._Keyword_En, value) = false) Then
				Me.OnKeyword_EnChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_En = value
				Me.SendPropertyChanged("Keyword_En")
				Me.OnKeyword_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pic", DbType:="NVarChar(1100)")>  _
	Public Property Pic() As String
		Get
			Return Me._Pic
		End Get
		Set
			If (String.Equals(Me._Pic, value) = false) Then
				Me.OnPicChanging(value)
				Me.SendPropertyChanging
				Me._Pic = value
				Me.SendPropertyChanged("Pic")
				Me.OnPicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_Fa", DbType:="NVarChar(50)")>  _
	Public Property Moment_Fa() As String
		Get
			Return Me._Moment_Fa
		End Get
		Set
			If (String.Equals(Me._Moment_Fa, value) = false) Then
				Me.OnMoment_FaChanging(value)
				Me.SendPropertyChanging
				Me._Moment_Fa = value
				Me.SendPropertyChanged("Moment_Fa")
				Me.OnMoment_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_En", DbType:="NVarChar(50)")>  _
	Public Property Moment_En() As String
		Get
			Return Me._Moment_En
		End Get
		Set
			If (String.Equals(Me._Moment_En, value) = false) Then
				Me.OnMoment_EnChanging(value)
				Me.SendPropertyChanging
				Me._Moment_En = value
				Me.SendPropertyChanged("Moment_En")
				Me.OnMoment_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year_En", DbType:="Int")>  _
	Public Property Year_En() As System.Nullable(Of Integer)
		Get
			Return Me._Year_En
		End Get
		Set
			If (Me._Year_En.Equals(value) = false) Then
				Me.OnYear_EnChanging(value)
				Me.SendPropertyChanging
				Me._Year_En = value
				Me.SendPropertyChanged("Year_En")
				Me.OnYear_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Month_En", DbType:="Int")>  _
	Public Property Month_En() As System.Nullable(Of Integer)
		Get
			Return Me._Month_En
		End Get
		Set
			If (Me._Month_En.Equals(value) = false) Then
				Me.OnMonth_EnChanging(value)
				Me.SendPropertyChanging
				Me._Month_En = value
				Me.SendPropertyChanged("Month_En")
				Me.OnMonth_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Day_En", DbType:="Int")>  _
	Public Property Day_En() As System.Nullable(Of Integer)
		Get
			Return Me._Day_En
		End Get
		Set
			If (Me._Day_En.Equals(value) = false) Then
				Me.OnDay_EnChanging(value)
				Me.SendPropertyChanging
				Me._Day_En = value
				Me.SendPropertyChanged("Day_En")
				Me.OnDay_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WrittenBy_Fa", DbType:="NVarChar(1000)")>  _
	Public Property WrittenBy_Fa() As String
		Get
			Return Me._WrittenBy_Fa
		End Get
		Set
			If (String.Equals(Me._WrittenBy_Fa, value) = false) Then
				Me.OnWrittenBy_FaChanging(value)
				Me.SendPropertyChanging
				Me._WrittenBy_Fa = value
				Me.SendPropertyChanged("WrittenBy_Fa")
				Me.OnWrittenBy_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WrittenBy_En", DbType:="NVarChar(1000)")>  _
	Public Property WrittenBy_En() As String
		Get
			Return Me._WrittenBy_En
		End Get
		Set
			If (String.Equals(Me._WrittenBy_En, value) = false) Then
				Me.OnWrittenBy_EnChanging(value)
				Me.SendPropertyChanging
				Me._WrittenBy_En = value
				Me.SendPropertyChanged("WrittenBy_En")
				Me.OnWrittenBy_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatName_Fa", DbType:="NVarChar(100)")>  _
	Public Property CatName_Fa() As String
		Get
			Return Me._CatName_Fa
		End Get
		Set
			If (String.Equals(Me._CatName_Fa, value) = false) Then
				Me.OnCatName_FaChanging(value)
				Me.SendPropertyChanging
				Me._CatName_Fa = value
				Me.SendPropertyChanged("CatName_Fa")
				Me.OnCatName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatName_En", DbType:="NVarChar(100)")>  _
	Public Property CatName_En() As String
		Get
			Return Me._CatName_En
		End Get
		Set
			If (String.Equals(Me._CatName_En, value) = false) Then
				Me.OnCatName_EnChanging(value)
				Me.SendPropertyChanging
				Me._CatName_En = value
				Me.SendPropertyChanged("CatName_En")
				Me.OnCatName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MetaDescription_Fa", DbType:="NVarChar(1000)")>  _
	Public Property MetaDescription_Fa() As String
		Get
			Return Me._MetaDescription_Fa
		End Get
		Set
			If (String.Equals(Me._MetaDescription_Fa, value) = false) Then
				Me.OnMetaDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._MetaDescription_Fa = value
				Me.SendPropertyChanged("MetaDescription_Fa")
				Me.OnMetaDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MetaDescription_En", DbType:="NVarChar(1000)")>  _
	Public Property MetaDescription_En() As String
		Get
			Return Me._MetaDescription_En
		End Get
		Set
			If (String.Equals(Me._MetaDescription_En, value) = false) Then
				Me.OnMetaDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._MetaDescription_En = value
				Me.SendPropertyChanged("MetaDescription_En")
				Me.OnMetaDescription_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.NewsLetter")>  _
Partial Public Class NewsLetter
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDNL As Integer
	
	Private _Email As String
	
	Private _Moment_En As String
	
	Private _Moment_Fa As String
	
	Private _Year_En As System.Nullable(Of Integer)
	
	Private _Month_En As System.Nullable(Of Integer)
	
	Private _Day_En As System.Nullable(Of Integer)
	
	Private _IsLatin As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDNLChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDNLChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnMoment_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_EnChanged()
    End Sub
    Partial Private Sub OnMoment_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_FaChanged()
    End Sub
    Partial Private Sub OnYear_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYear_EnChanged()
    End Sub
    Partial Private Sub OnMonth_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMonth_EnChanged()
    End Sub
    Partial Private Sub OnDay_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDay_EnChanged()
    End Sub
    Partial Private Sub OnIsLatinChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsLatinChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDNL", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDNL() As Integer
		Get
			Return Me._IDNL
		End Get
		Set
			If ((Me._IDNL = value)  _
						= false) Then
				Me.OnIDNLChanging(value)
				Me.SendPropertyChanging
				Me._IDNL = value
				Me.SendPropertyChanged("IDNL")
				Me.OnIDNLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(100)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_En", DbType:="NVarChar(50)")>  _
	Public Property Moment_En() As String
		Get
			Return Me._Moment_En
		End Get
		Set
			If (String.Equals(Me._Moment_En, value) = false) Then
				Me.OnMoment_EnChanging(value)
				Me.SendPropertyChanging
				Me._Moment_En = value
				Me.SendPropertyChanged("Moment_En")
				Me.OnMoment_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_Fa", DbType:="NVarChar(50)")>  _
	Public Property Moment_Fa() As String
		Get
			Return Me._Moment_Fa
		End Get
		Set
			If (String.Equals(Me._Moment_Fa, value) = false) Then
				Me.OnMoment_FaChanging(value)
				Me.SendPropertyChanging
				Me._Moment_Fa = value
				Me.SendPropertyChanged("Moment_Fa")
				Me.OnMoment_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year_En", DbType:="Int")>  _
	Public Property Year_En() As System.Nullable(Of Integer)
		Get
			Return Me._Year_En
		End Get
		Set
			If (Me._Year_En.Equals(value) = false) Then
				Me.OnYear_EnChanging(value)
				Me.SendPropertyChanging
				Me._Year_En = value
				Me.SendPropertyChanged("Year_En")
				Me.OnYear_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Month_En", DbType:="Int")>  _
	Public Property Month_En() As System.Nullable(Of Integer)
		Get
			Return Me._Month_En
		End Get
		Set
			If (Me._Month_En.Equals(value) = false) Then
				Me.OnMonth_EnChanging(value)
				Me.SendPropertyChanging
				Me._Month_En = value
				Me.SendPropertyChanged("Month_En")
				Me.OnMonth_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Day_En", DbType:="Int")>  _
	Public Property Day_En() As System.Nullable(Of Integer)
		Get
			Return Me._Day_En
		End Get
		Set
			If (Me._Day_En.Equals(value) = false) Then
				Me.OnDay_EnChanging(value)
				Me.SendPropertyChanging
				Me._Day_En = value
				Me.SendPropertyChanged("Day_En")
				Me.OnDay_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsLatin", DbType:="Bit")>  _
	Public Property IsLatin() As System.Nullable(Of Boolean)
		Get
			Return Me._IsLatin
		End Get
		Set
			If (Me._IsLatin.Equals(value) = false) Then
				Me.OnIsLatinChanging(value)
				Me.SendPropertyChanging
				Me._IsLatin = value
				Me.SendPropertyChanged("IsLatin")
				Me.OnIsLatinChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[Order]")>  _
Partial Public Class [Order]
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDO As Integer
	
	Private _NameAndFamily As String
	
	Private _Email As String
	
	Private _Tel As String
	
	Private _Mobile As String
	
	Private _Job As String
	
	Private _Address As String
	
	Private _NewDesign As System.Nullable(Of Boolean)
	
	Private _SiteNameFA As String
	
	Private _SiteNameEn As String
	
	Private _SiteSubject As String
	
	Private _Customers As String
	
	Private _Competition As String
	
	Private _Service As String
	
	Private _DeadLine As String
	
	Private _SuggestedCosts As String
	
	Private _SampleSite As String
	
	Private _Requirements As String
	
	Private _PurposeExistingSite As String
	
	Private _Possibilities As String
	
	Private _Style As String
	
	Private _Thesis As String
	
	Private _Advice As System.Nullable(Of Boolean)
	
	Private _Description As String
	
	Private _ActiveForClient As System.Nullable(Of Boolean)
	
	Private _SPL As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDOChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDOChanged()
    End Sub
    Partial Private Sub OnNameAndFamilyChanging(value As String)
    End Sub
    Partial Private Sub OnNameAndFamilyChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnTelChanging(value As String)
    End Sub
    Partial Private Sub OnTelChanged()
    End Sub
    Partial Private Sub OnMobileChanging(value As String)
    End Sub
    Partial Private Sub OnMobileChanged()
    End Sub
    Partial Private Sub OnJobChanging(value As String)
    End Sub
    Partial Private Sub OnJobChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnNewDesignChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnNewDesignChanged()
    End Sub
    Partial Private Sub OnSiteNameFAChanging(value As String)
    End Sub
    Partial Private Sub OnSiteNameFAChanged()
    End Sub
    Partial Private Sub OnSiteNameEnChanging(value As String)
    End Sub
    Partial Private Sub OnSiteNameEnChanged()
    End Sub
    Partial Private Sub OnSiteSubjectChanging(value As String)
    End Sub
    Partial Private Sub OnSiteSubjectChanged()
    End Sub
    Partial Private Sub OnCustomersChanging(value As String)
    End Sub
    Partial Private Sub OnCustomersChanged()
    End Sub
    Partial Private Sub OnCompetitionChanging(value As String)
    End Sub
    Partial Private Sub OnCompetitionChanged()
    End Sub
    Partial Private Sub OnServiceChanging(value As String)
    End Sub
    Partial Private Sub OnServiceChanged()
    End Sub
    Partial Private Sub OnDeadLineChanging(value As String)
    End Sub
    Partial Private Sub OnDeadLineChanged()
    End Sub
    Partial Private Sub OnSuggestedCostsChanging(value As String)
    End Sub
    Partial Private Sub OnSuggestedCostsChanged()
    End Sub
    Partial Private Sub OnSampleSiteChanging(value As String)
    End Sub
    Partial Private Sub OnSampleSiteChanged()
    End Sub
    Partial Private Sub OnRequirementsChanging(value As String)
    End Sub
    Partial Private Sub OnRequirementsChanged()
    End Sub
    Partial Private Sub OnPurposeExistingSiteChanging(value As String)
    End Sub
    Partial Private Sub OnPurposeExistingSiteChanged()
    End Sub
    Partial Private Sub OnPossibilitiesChanging(value As String)
    End Sub
    Partial Private Sub OnPossibilitiesChanged()
    End Sub
    Partial Private Sub OnStyleChanging(value As String)
    End Sub
    Partial Private Sub OnStyleChanged()
    End Sub
    Partial Private Sub OnThesisChanging(value As String)
    End Sub
    Partial Private Sub OnThesisChanged()
    End Sub
    Partial Private Sub OnAdviceChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAdviceChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnActiveForClientChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActiveForClientChanged()
    End Sub
    Partial Private Sub OnSPLChanging(value As String)
    End Sub
    Partial Private Sub OnSPLChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDO", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDO() As Integer
		Get
			Return Me._IDO
		End Get
		Set
			If ((Me._IDO = value)  _
						= false) Then
				Me.OnIDOChanging(value)
				Me.SendPropertyChanging
				Me._IDO = value
				Me.SendPropertyChanged("IDO")
				Me.OnIDOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameAndFamily", DbType:="NVarChar(500)")>  _
	Public Property NameAndFamily() As String
		Get
			Return Me._NameAndFamily
		End Get
		Set
			If (String.Equals(Me._NameAndFamily, value) = false) Then
				Me.OnNameAndFamilyChanging(value)
				Me.SendPropertyChanging
				Me._NameAndFamily = value
				Me.SendPropertyChanged("NameAndFamily")
				Me.OnNameAndFamilyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(200)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tel", DbType:="NChar(11)")>  _
	Public Property Tel() As String
		Get
			Return Me._Tel
		End Get
		Set
			If (String.Equals(Me._Tel, value) = false) Then
				Me.OnTelChanging(value)
				Me.SendPropertyChanging
				Me._Tel = value
				Me.SendPropertyChanged("Tel")
				Me.OnTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mobile", DbType:="NChar(11)")>  _
	Public Property Mobile() As String
		Get
			Return Me._Mobile
		End Get
		Set
			If (String.Equals(Me._Mobile, value) = false) Then
				Me.OnMobileChanging(value)
				Me.SendPropertyChanging
				Me._Mobile = value
				Me.SendPropertyChanged("Mobile")
				Me.OnMobileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Job", DbType:="NVarChar(500)")>  _
	Public Property Job() As String
		Get
			Return Me._Job
		End Get
		Set
			If (String.Equals(Me._Job, value) = false) Then
				Me.OnJobChanging(value)
				Me.SendPropertyChanging
				Me._Job = value
				Me.SendPropertyChanged("Job")
				Me.OnJobChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(1000)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NewDesign", DbType:="Bit")>  _
	Public Property NewDesign() As System.Nullable(Of Boolean)
		Get
			Return Me._NewDesign
		End Get
		Set
			If (Me._NewDesign.Equals(value) = false) Then
				Me.OnNewDesignChanging(value)
				Me.SendPropertyChanging
				Me._NewDesign = value
				Me.SendPropertyChanged("NewDesign")
				Me.OnNewDesignChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SiteNameFA", DbType:="NVarChar(100)")>  _
	Public Property SiteNameFA() As String
		Get
			Return Me._SiteNameFA
		End Get
		Set
			If (String.Equals(Me._SiteNameFA, value) = false) Then
				Me.OnSiteNameFAChanging(value)
				Me.SendPropertyChanging
				Me._SiteNameFA = value
				Me.SendPropertyChanged("SiteNameFA")
				Me.OnSiteNameFAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SiteNameEn", DbType:="NVarChar(100)")>  _
	Public Property SiteNameEn() As String
		Get
			Return Me._SiteNameEn
		End Get
		Set
			If (String.Equals(Me._SiteNameEn, value) = false) Then
				Me.OnSiteNameEnChanging(value)
				Me.SendPropertyChanging
				Me._SiteNameEn = value
				Me.SendPropertyChanged("SiteNameEn")
				Me.OnSiteNameEnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SiteSubject", DbType:="NVarChar(100)")>  _
	Public Property SiteSubject() As String
		Get
			Return Me._SiteSubject
		End Get
		Set
			If (String.Equals(Me._SiteSubject, value) = false) Then
				Me.OnSiteSubjectChanging(value)
				Me.SendPropertyChanging
				Me._SiteSubject = value
				Me.SendPropertyChanged("SiteSubject")
				Me.OnSiteSubjectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Customers", DbType:="NVarChar(1000)")>  _
	Public Property Customers() As String
		Get
			Return Me._Customers
		End Get
		Set
			If (String.Equals(Me._Customers, value) = false) Then
				Me.OnCustomersChanging(value)
				Me.SendPropertyChanging
				Me._Customers = value
				Me.SendPropertyChanged("Customers")
				Me.OnCustomersChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Competition", DbType:="NVarChar(2000)")>  _
	Public Property Competition() As String
		Get
			Return Me._Competition
		End Get
		Set
			If (String.Equals(Me._Competition, value) = false) Then
				Me.OnCompetitionChanging(value)
				Me.SendPropertyChanging
				Me._Competition = value
				Me.SendPropertyChanged("Competition")
				Me.OnCompetitionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Service", DbType:="NVarChar(4000)")>  _
	Public Property Service() As String
		Get
			Return Me._Service
		End Get
		Set
			If (String.Equals(Me._Service, value) = false) Then
				Me.OnServiceChanging(value)
				Me.SendPropertyChanging
				Me._Service = value
				Me.SendPropertyChanged("Service")
				Me.OnServiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeadLine", DbType:="NVarChar(50)")>  _
	Public Property DeadLine() As String
		Get
			Return Me._DeadLine
		End Get
		Set
			If (String.Equals(Me._DeadLine, value) = false) Then
				Me.OnDeadLineChanging(value)
				Me.SendPropertyChanging
				Me._DeadLine = value
				Me.SendPropertyChanged("DeadLine")
				Me.OnDeadLineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SuggestedCosts", DbType:="NVarChar(100)")>  _
	Public Property SuggestedCosts() As String
		Get
			Return Me._SuggestedCosts
		End Get
		Set
			If (String.Equals(Me._SuggestedCosts, value) = false) Then
				Me.OnSuggestedCostsChanging(value)
				Me.SendPropertyChanging
				Me._SuggestedCosts = value
				Me.SendPropertyChanged("SuggestedCosts")
				Me.OnSuggestedCostsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SampleSite", DbType:="NVarChar(3000)")>  _
	Public Property SampleSite() As String
		Get
			Return Me._SampleSite
		End Get
		Set
			If (String.Equals(Me._SampleSite, value) = false) Then
				Me.OnSampleSiteChanging(value)
				Me.SendPropertyChanging
				Me._SampleSite = value
				Me.SendPropertyChanged("SampleSite")
				Me.OnSampleSiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Requirements", DbType:="NVarChar(3000)")>  _
	Public Property Requirements() As String
		Get
			Return Me._Requirements
		End Get
		Set
			If (String.Equals(Me._Requirements, value) = false) Then
				Me.OnRequirementsChanging(value)
				Me.SendPropertyChanging
				Me._Requirements = value
				Me.SendPropertyChanged("Requirements")
				Me.OnRequirementsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PurposeExistingSite", DbType:="NVarChar(3000)")>  _
	Public Property PurposeExistingSite() As String
		Get
			Return Me._PurposeExistingSite
		End Get
		Set
			If (String.Equals(Me._PurposeExistingSite, value) = false) Then
				Me.OnPurposeExistingSiteChanging(value)
				Me.SendPropertyChanging
				Me._PurposeExistingSite = value
				Me.SendPropertyChanged("PurposeExistingSite")
				Me.OnPurposeExistingSiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Possibilities", DbType:="NVarChar(4000)")>  _
	Public Property Possibilities() As String
		Get
			Return Me._Possibilities
		End Get
		Set
			If (String.Equals(Me._Possibilities, value) = false) Then
				Me.OnPossibilitiesChanging(value)
				Me.SendPropertyChanging
				Me._Possibilities = value
				Me.SendPropertyChanged("Possibilities")
				Me.OnPossibilitiesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Style", DbType:="NVarChar(3000)")>  _
	Public Property Style() As String
		Get
			Return Me._Style
		End Get
		Set
			If (String.Equals(Me._Style, value) = false) Then
				Me.OnStyleChanging(value)
				Me.SendPropertyChanging
				Me._Style = value
				Me.SendPropertyChanged("Style")
				Me.OnStyleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Thesis", DbType:="NVarChar(1000)")>  _
	Public Property Thesis() As String
		Get
			Return Me._Thesis
		End Get
		Set
			If (String.Equals(Me._Thesis, value) = false) Then
				Me.OnThesisChanging(value)
				Me.SendPropertyChanging
				Me._Thesis = value
				Me.SendPropertyChanged("Thesis")
				Me.OnThesisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Advice", DbType:="Bit")>  _
	Public Property Advice() As System.Nullable(Of Boolean)
		Get
			Return Me._Advice
		End Get
		Set
			If (Me._Advice.Equals(value) = false) Then
				Me.OnAdviceChanging(value)
				Me.SendPropertyChanging
				Me._Advice = value
				Me.SendPropertyChanged("Advice")
				Me.OnAdviceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(1000)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ActiveForClient", DbType:="Bit")>  _
	Public Property ActiveForClient() As System.Nullable(Of Boolean)
		Get
			Return Me._ActiveForClient
		End Get
		Set
			If (Me._ActiveForClient.Equals(value) = false) Then
				Me.OnActiveForClientChanging(value)
				Me.SendPropertyChanging
				Me._ActiveForClient = value
				Me.SendPropertyChanged("ActiveForClient")
				Me.OnActiveForClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SPL", DbType:="NVarChar(MAX)")>  _
	Public Property SPL() As String
		Get
			Return Me._SPL
		End Get
		Set
			If (String.Equals(Me._SPL, value) = false) Then
				Me.OnSPLChanging(value)
				Me.SendPropertyChanging
				Me._SPL = value
				Me.SendPropertyChanged("SPL")
				Me.OnSPLChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Page")>  _
Partial Public Class Page
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _PageTitle_Fa As String
	
	Private _PageTitle_En As String
	
	Private _Body_Fa As String
	
	Private _Body_En As String
	
	Private _Address As String
	
	Private _Keyword_Fa As String
	
	Private _Keyword_En As String
	
	Private _Moment_Fa As String
	
	Private _Moment_En As String
	
	Private _WrittenBy_Fa As String
	
	Private _WrittenBy_En As String
	
	Private _CommentCount As System.Nullable(Of Integer)
	
	Private _MetaDescription_Fa As String
	
	Private _MetaDescription_En As String
	
	Private _Image As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnPageTitle_FaChanging(value As String)
    End Sub
    Partial Private Sub OnPageTitle_FaChanged()
    End Sub
    Partial Private Sub OnPageTitle_EnChanging(value As String)
    End Sub
    Partial Private Sub OnPageTitle_EnChanged()
    End Sub
    Partial Private Sub OnBody_FaChanging(value As String)
    End Sub
    Partial Private Sub OnBody_FaChanged()
    End Sub
    Partial Private Sub OnBody_EnChanging(value As String)
    End Sub
    Partial Private Sub OnBody_EnChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnKeyword_FaChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_FaChanged()
    End Sub
    Partial Private Sub OnKeyword_EnChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_EnChanged()
    End Sub
    Partial Private Sub OnMoment_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_FaChanged()
    End Sub
    Partial Private Sub OnMoment_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_EnChanged()
    End Sub
    Partial Private Sub OnWrittenBy_FaChanging(value As String)
    End Sub
    Partial Private Sub OnWrittenBy_FaChanged()
    End Sub
    Partial Private Sub OnWrittenBy_EnChanging(value As String)
    End Sub
    Partial Private Sub OnWrittenBy_EnChanged()
    End Sub
    Partial Private Sub OnCommentCountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCommentCountChanged()
    End Sub
    Partial Private Sub OnMetaDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMetaDescription_FaChanged()
    End Sub
    Partial Private Sub OnMetaDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMetaDescription_EnChanged()
    End Sub
    Partial Private Sub OnImageChanging(value As String)
    End Sub
    Partial Private Sub OnImageChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PageTitle_Fa", DbType:="NVarChar(200)")>  _
	Public Property PageTitle_Fa() As String
		Get
			Return Me._PageTitle_Fa
		End Get
		Set
			If (String.Equals(Me._PageTitle_Fa, value) = false) Then
				Me.OnPageTitle_FaChanging(value)
				Me.SendPropertyChanging
				Me._PageTitle_Fa = value
				Me.SendPropertyChanged("PageTitle_Fa")
				Me.OnPageTitle_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PageTitle_En", DbType:="NVarChar(200)")>  _
	Public Property PageTitle_En() As String
		Get
			Return Me._PageTitle_En
		End Get
		Set
			If (String.Equals(Me._PageTitle_En, value) = false) Then
				Me.OnPageTitle_EnChanging(value)
				Me.SendPropertyChanging
				Me._PageTitle_En = value
				Me.SendPropertyChanged("PageTitle_En")
				Me.OnPageTitle_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Body_Fa", DbType:="NVarChar(MAX)")>  _
	Public Property Body_Fa() As String
		Get
			Return Me._Body_Fa
		End Get
		Set
			If (String.Equals(Me._Body_Fa, value) = false) Then
				Me.OnBody_FaChanging(value)
				Me.SendPropertyChanging
				Me._Body_Fa = value
				Me.SendPropertyChanged("Body_Fa")
				Me.OnBody_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Body_En", DbType:="NVarChar(MAX)")>  _
	Public Property Body_En() As String
		Get
			Return Me._Body_En
		End Get
		Set
			If (String.Equals(Me._Body_En, value) = false) Then
				Me.OnBody_EnChanging(value)
				Me.SendPropertyChanging
				Me._Body_En = value
				Me.SendPropertyChanged("Body_En")
				Me.OnBody_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(4000)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_Fa", DbType:="NVarChar(500)")>  _
	Public Property Keyword_Fa() As String
		Get
			Return Me._Keyword_Fa
		End Get
		Set
			If (String.Equals(Me._Keyword_Fa, value) = false) Then
				Me.OnKeyword_FaChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_Fa = value
				Me.SendPropertyChanged("Keyword_Fa")
				Me.OnKeyword_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_En", DbType:="NVarChar(500)")>  _
	Public Property Keyword_En() As String
		Get
			Return Me._Keyword_En
		End Get
		Set
			If (String.Equals(Me._Keyword_En, value) = false) Then
				Me.OnKeyword_EnChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_En = value
				Me.SendPropertyChanged("Keyword_En")
				Me.OnKeyword_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_Fa", DbType:="NVarChar(50)")>  _
	Public Property Moment_Fa() As String
		Get
			Return Me._Moment_Fa
		End Get
		Set
			If (String.Equals(Me._Moment_Fa, value) = false) Then
				Me.OnMoment_FaChanging(value)
				Me.SendPropertyChanging
				Me._Moment_Fa = value
				Me.SendPropertyChanged("Moment_Fa")
				Me.OnMoment_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_En", DbType:="NVarChar(50)")>  _
	Public Property Moment_En() As String
		Get
			Return Me._Moment_En
		End Get
		Set
			If (String.Equals(Me._Moment_En, value) = false) Then
				Me.OnMoment_EnChanging(value)
				Me.SendPropertyChanging
				Me._Moment_En = value
				Me.SendPropertyChanged("Moment_En")
				Me.OnMoment_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WrittenBy_Fa", DbType:="NVarChar(1000)")>  _
	Public Property WrittenBy_Fa() As String
		Get
			Return Me._WrittenBy_Fa
		End Get
		Set
			If (String.Equals(Me._WrittenBy_Fa, value) = false) Then
				Me.OnWrittenBy_FaChanging(value)
				Me.SendPropertyChanging
				Me._WrittenBy_Fa = value
				Me.SendPropertyChanged("WrittenBy_Fa")
				Me.OnWrittenBy_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WrittenBy_En", DbType:="NVarChar(1000)")>  _
	Public Property WrittenBy_En() As String
		Get
			Return Me._WrittenBy_En
		End Get
		Set
			If (String.Equals(Me._WrittenBy_En, value) = false) Then
				Me.OnWrittenBy_EnChanging(value)
				Me.SendPropertyChanging
				Me._WrittenBy_En = value
				Me.SendPropertyChanged("WrittenBy_En")
				Me.OnWrittenBy_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CommentCount", DbType:="Int")>  _
	Public Property CommentCount() As System.Nullable(Of Integer)
		Get
			Return Me._CommentCount
		End Get
		Set
			If (Me._CommentCount.Equals(value) = false) Then
				Me.OnCommentCountChanging(value)
				Me.SendPropertyChanging
				Me._CommentCount = value
				Me.SendPropertyChanged("CommentCount")
				Me.OnCommentCountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MetaDescription_Fa", DbType:="NVarChar(200)")>  _
	Public Property MetaDescription_Fa() As String
		Get
			Return Me._MetaDescription_Fa
		End Get
		Set
			If (String.Equals(Me._MetaDescription_Fa, value) = false) Then
				Me.OnMetaDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._MetaDescription_Fa = value
				Me.SendPropertyChanged("MetaDescription_Fa")
				Me.OnMetaDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MetaDescription_En", DbType:="NVarChar(200)")>  _
	Public Property MetaDescription_En() As String
		Get
			Return Me._MetaDescription_En
		End Get
		Set
			If (String.Equals(Me._MetaDescription_En, value) = false) Then
				Me.OnMetaDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._MetaDescription_En = value
				Me.SendPropertyChanged("MetaDescription_En")
				Me.OnMetaDescription_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Image", DbType:="NVarChar(2000)")>  _
	Public Property Image() As String
		Get
			Return Me._Image
		End Get
		Set
			If (String.Equals(Me._Image, value) = false) Then
				Me.OnImageChanging(value)
				Me.SendPropertyChanging
				Me._Image = value
				Me.SendPropertyChanged("Image")
				Me.OnImageChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Portfolio")>  _
Partial Public Class Portfolio
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDP As Integer
	
	Private _Title_Fa As String
	
	Private _Title_En As String
	
	Private _Description_Fa As String
	
	Private _Description_En As String
	
	Private _Image As String
	
	Private _Href As String
	
	Private _MetaDescription_Fa As String
	
	Private _MetaDescription_En As String
	
	Private _Priority As System.Nullable(Of Integer)
	
	Private _CatName_Fa As String
	
	Private _CatName_En As String
	
	Private _Moment_Fa As String
	
	Private _Moment_En As String
	
	Private _Year_En As System.Nullable(Of Integer)
	
	Private _Month_En As System.Nullable(Of Integer)
	
	Private _Day_En As System.Nullable(Of Integer)
	
	Private _Keyword_Fa As String
	
	Private _Keyword_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDPChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPChanged()
    End Sub
    Partial Private Sub OnTitle_FaChanging(value As String)
    End Sub
    Partial Private Sub OnTitle_FaChanged()
    End Sub
    Partial Private Sub OnTitle_EnChanging(value As String)
    End Sub
    Partial Private Sub OnTitle_EnChanged()
    End Sub
    Partial Private Sub OnDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_FaChanged()
    End Sub
    Partial Private Sub OnDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_EnChanged()
    End Sub
    Partial Private Sub OnImageChanging(value As String)
    End Sub
    Partial Private Sub OnImageChanged()
    End Sub
    Partial Private Sub OnHrefChanging(value As String)
    End Sub
    Partial Private Sub OnHrefChanged()
    End Sub
    Partial Private Sub OnMetaDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMetaDescription_FaChanged()
    End Sub
    Partial Private Sub OnMetaDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMetaDescription_EnChanged()
    End Sub
    Partial Private Sub OnPriorityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPriorityChanged()
    End Sub
    Partial Private Sub OnCatName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnCatName_FaChanged()
    End Sub
    Partial Private Sub OnCatName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnCatName_EnChanged()
    End Sub
    Partial Private Sub OnMoment_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_FaChanged()
    End Sub
    Partial Private Sub OnMoment_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_EnChanged()
    End Sub
    Partial Private Sub OnYear_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYear_EnChanged()
    End Sub
    Partial Private Sub OnMonth_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMonth_EnChanged()
    End Sub
    Partial Private Sub OnDay_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDay_EnChanged()
    End Sub
    Partial Private Sub OnKeyword_FaChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_FaChanged()
    End Sub
    Partial Private Sub OnKeyword_EnChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDP", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDP() As Integer
		Get
			Return Me._IDP
		End Get
		Set
			If ((Me._IDP = value)  _
						= false) Then
				Me.OnIDPChanging(value)
				Me.SendPropertyChanging
				Me._IDP = value
				Me.SendPropertyChanged("IDP")
				Me.OnIDPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_Fa", DbType:="NVarChar(500)")>  _
	Public Property Title_Fa() As String
		Get
			Return Me._Title_Fa
		End Get
		Set
			If (String.Equals(Me._Title_Fa, value) = false) Then
				Me.OnTitle_FaChanging(value)
				Me.SendPropertyChanging
				Me._Title_Fa = value
				Me.SendPropertyChanged("Title_Fa")
				Me.OnTitle_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title_En", DbType:="NVarChar(500)")>  _
	Public Property Title_En() As String
		Get
			Return Me._Title_En
		End Get
		Set
			If (String.Equals(Me._Title_En, value) = false) Then
				Me.OnTitle_EnChanging(value)
				Me.SendPropertyChanging
				Me._Title_En = value
				Me.SendPropertyChanged("Title_En")
				Me.OnTitle_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Description_Fa() As String
		Get
			Return Me._Description_Fa
		End Get
		Set
			If (String.Equals(Me._Description_Fa, value) = false) Then
				Me.OnDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._Description_Fa = value
				Me.SendPropertyChanged("Description_Fa")
				Me.OnDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_En", DbType:="NVarChar(4000)")>  _
	Public Property Description_En() As String
		Get
			Return Me._Description_En
		End Get
		Set
			If (String.Equals(Me._Description_En, value) = false) Then
				Me.OnDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._Description_En = value
				Me.SendPropertyChanged("Description_En")
				Me.OnDescription_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Image", DbType:="NVarChar(2000)")>  _
	Public Property Image() As String
		Get
			Return Me._Image
		End Get
		Set
			If (String.Equals(Me._Image, value) = false) Then
				Me.OnImageChanging(value)
				Me.SendPropertyChanging
				Me._Image = value
				Me.SendPropertyChanged("Image")
				Me.OnImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Href", DbType:="NVarChar(2000)")>  _
	Public Property Href() As String
		Get
			Return Me._Href
		End Get
		Set
			If (String.Equals(Me._Href, value) = false) Then
				Me.OnHrefChanging(value)
				Me.SendPropertyChanging
				Me._Href = value
				Me.SendPropertyChanged("Href")
				Me.OnHrefChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MetaDescription_Fa", DbType:="NVarChar(1000)")>  _
	Public Property MetaDescription_Fa() As String
		Get
			Return Me._MetaDescription_Fa
		End Get
		Set
			If (String.Equals(Me._MetaDescription_Fa, value) = false) Then
				Me.OnMetaDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._MetaDescription_Fa = value
				Me.SendPropertyChanged("MetaDescription_Fa")
				Me.OnMetaDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MetaDescription_En", DbType:="NVarChar(1000)")>  _
	Public Property MetaDescription_En() As String
		Get
			Return Me._MetaDescription_En
		End Get
		Set
			If (String.Equals(Me._MetaDescription_En, value) = false) Then
				Me.OnMetaDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._MetaDescription_En = value
				Me.SendPropertyChanged("MetaDescription_En")
				Me.OnMetaDescription_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="Int")>  _
	Public Property Priority() As System.Nullable(Of Integer)
		Get
			Return Me._Priority
		End Get
		Set
			If (Me._Priority.Equals(value) = false) Then
				Me.OnPriorityChanging(value)
				Me.SendPropertyChanging
				Me._Priority = value
				Me.SendPropertyChanged("Priority")
				Me.OnPriorityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatName_Fa", DbType:="NVarChar(100)")>  _
	Public Property CatName_Fa() As String
		Get
			Return Me._CatName_Fa
		End Get
		Set
			If (String.Equals(Me._CatName_Fa, value) = false) Then
				Me.OnCatName_FaChanging(value)
				Me.SendPropertyChanging
				Me._CatName_Fa = value
				Me.SendPropertyChanged("CatName_Fa")
				Me.OnCatName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatName_En", DbType:="NVarChar(100)")>  _
	Public Property CatName_En() As String
		Get
			Return Me._CatName_En
		End Get
		Set
			If (String.Equals(Me._CatName_En, value) = false) Then
				Me.OnCatName_EnChanging(value)
				Me.SendPropertyChanging
				Me._CatName_En = value
				Me.SendPropertyChanged("CatName_En")
				Me.OnCatName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_Fa", DbType:="NVarChar(50)")>  _
	Public Property Moment_Fa() As String
		Get
			Return Me._Moment_Fa
		End Get
		Set
			If (String.Equals(Me._Moment_Fa, value) = false) Then
				Me.OnMoment_FaChanging(value)
				Me.SendPropertyChanging
				Me._Moment_Fa = value
				Me.SendPropertyChanged("Moment_Fa")
				Me.OnMoment_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_En", DbType:="NVarChar(50)")>  _
	Public Property Moment_En() As String
		Get
			Return Me._Moment_En
		End Get
		Set
			If (String.Equals(Me._Moment_En, value) = false) Then
				Me.OnMoment_EnChanging(value)
				Me.SendPropertyChanging
				Me._Moment_En = value
				Me.SendPropertyChanged("Moment_En")
				Me.OnMoment_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year_En", DbType:="Int")>  _
	Public Property Year_En() As System.Nullable(Of Integer)
		Get
			Return Me._Year_En
		End Get
		Set
			If (Me._Year_En.Equals(value) = false) Then
				Me.OnYear_EnChanging(value)
				Me.SendPropertyChanging
				Me._Year_En = value
				Me.SendPropertyChanged("Year_En")
				Me.OnYear_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Month_En", DbType:="Int")>  _
	Public Property Month_En() As System.Nullable(Of Integer)
		Get
			Return Me._Month_En
		End Get
		Set
			If (Me._Month_En.Equals(value) = false) Then
				Me.OnMonth_EnChanging(value)
				Me.SendPropertyChanging
				Me._Month_En = value
				Me.SendPropertyChanged("Month_En")
				Me.OnMonth_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Day_En", DbType:="Int")>  _
	Public Property Day_En() As System.Nullable(Of Integer)
		Get
			Return Me._Day_En
		End Get
		Set
			If (Me._Day_En.Equals(value) = false) Then
				Me.OnDay_EnChanging(value)
				Me.SendPropertyChanging
				Me._Day_En = value
				Me.SendPropertyChanged("Day_En")
				Me.OnDay_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Keyword_Fa() As String
		Get
			Return Me._Keyword_Fa
		End Get
		Set
			If (String.Equals(Me._Keyword_Fa, value) = false) Then
				Me.OnKeyword_FaChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_Fa = value
				Me.SendPropertyChanged("Keyword_Fa")
				Me.OnKeyword_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_En", DbType:="NVarChar(4000)")>  _
	Public Property Keyword_En() As String
		Get
			Return Me._Keyword_En
		End Get
		Set
			If (String.Equals(Me._Keyword_En, value) = false) Then
				Me.OnKeyword_EnChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_En = value
				Me.SendPropertyChanged("Keyword_En")
				Me.OnKeyword_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PortfolioCat")>  _
Partial Public Class PortfolioCat
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDPC As Integer
	
	Private _CatName As String
	
	Private _DataFilter As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDPCChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPCChanged()
    End Sub
    Partial Private Sub OnCatNameChanging(value As String)
    End Sub
    Partial Private Sub OnCatNameChanged()
    End Sub
    Partial Private Sub OnDataFilterChanging(value As String)
    End Sub
    Partial Private Sub OnDataFilterChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDPC", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDPC() As Integer
		Get
			Return Me._IDPC
		End Get
		Set
			If ((Me._IDPC = value)  _
						= false) Then
				Me.OnIDPCChanging(value)
				Me.SendPropertyChanging
				Me._IDPC = value
				Me.SendPropertyChanged("IDPC")
				Me.OnIDPCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatName", DbType:="NVarChar(50)")>  _
	Public Property CatName() As String
		Get
			Return Me._CatName
		End Get
		Set
			If (String.Equals(Me._CatName, value) = false) Then
				Me.OnCatNameChanging(value)
				Me.SendPropertyChanging
				Me._CatName = value
				Me.SendPropertyChanged("CatName")
				Me.OnCatNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataFilter", DbType:="NVarChar(50)")>  _
	Public Property DataFilter() As String
		Get
			Return Me._DataFilter
		End Get
		Set
			If (String.Equals(Me._DataFilter, value) = false) Then
				Me.OnDataFilterChanging(value)
				Me.SendPropertyChanging
				Me._DataFilter = value
				Me.SendPropertyChanged("DataFilter")
				Me.OnDataFilterChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PortfolioGallery")>  _
Partial Public Class PortfolioGallery
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDPG As Integer
	
	Private _IDP As System.Nullable(Of Integer)
	
	Private _Name_Fa As String
	
	Private _Name_En As String
	
	Private _SRC As String
	
	Private _Description_Fa As String
	
	Private _Description_En As String
	
	Private _Moment_Fa As String
	
	Private _Moment_En As String
	
	Private _Alt_Fa As String
	
	Private _Alt_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDPGChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDPGChanged()
    End Sub
    Partial Private Sub OnIDPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIDPChanged()
    End Sub
    Partial Private Sub OnName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnName_FaChanged()
    End Sub
    Partial Private Sub OnName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnName_EnChanged()
    End Sub
    Partial Private Sub OnSRCChanging(value As String)
    End Sub
    Partial Private Sub OnSRCChanged()
    End Sub
    Partial Private Sub OnDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_FaChanged()
    End Sub
    Partial Private Sub OnDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_EnChanged()
    End Sub
    Partial Private Sub OnMoment_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_FaChanged()
    End Sub
    Partial Private Sub OnMoment_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_EnChanged()
    End Sub
    Partial Private Sub OnAlt_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAlt_FaChanged()
    End Sub
    Partial Private Sub OnAlt_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAlt_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDPG", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDPG() As Integer
		Get
			Return Me._IDPG
		End Get
		Set
			If ((Me._IDPG = value)  _
						= false) Then
				Me.OnIDPGChanging(value)
				Me.SendPropertyChanging
				Me._IDPG = value
				Me.SendPropertyChanged("IDPG")
				Me.OnIDPGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDP", DbType:="Int")>  _
	Public Property IDP() As System.Nullable(Of Integer)
		Get
			Return Me._IDP
		End Get
		Set
			If (Me._IDP.Equals(value) = false) Then
				Me.OnIDPChanging(value)
				Me.SendPropertyChanging
				Me._IDP = value
				Me.SendPropertyChanged("IDP")
				Me.OnIDPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_Fa", DbType:="NVarChar(100)")>  _
	Public Property Name_Fa() As String
		Get
			Return Me._Name_Fa
		End Get
		Set
			If (String.Equals(Me._Name_Fa, value) = false) Then
				Me.OnName_FaChanging(value)
				Me.SendPropertyChanging
				Me._Name_Fa = value
				Me.SendPropertyChanged("Name_Fa")
				Me.OnName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_En", DbType:="NVarChar(100)")>  _
	Public Property Name_En() As String
		Get
			Return Me._Name_En
		End Get
		Set
			If (String.Equals(Me._Name_En, value) = false) Then
				Me.OnName_EnChanging(value)
				Me.SendPropertyChanging
				Me._Name_En = value
				Me.SendPropertyChanged("Name_En")
				Me.OnName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SRC", DbType:="NVarChar(1100)")>  _
	Public Property SRC() As String
		Get
			Return Me._SRC
		End Get
		Set
			If (String.Equals(Me._SRC, value) = false) Then
				Me.OnSRCChanging(value)
				Me.SendPropertyChanging
				Me._SRC = value
				Me.SendPropertyChanged("SRC")
				Me.OnSRCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_Fa", DbType:="NVarChar(1000)")>  _
	Public Property Description_Fa() As String
		Get
			Return Me._Description_Fa
		End Get
		Set
			If (String.Equals(Me._Description_Fa, value) = false) Then
				Me.OnDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._Description_Fa = value
				Me.SendPropertyChanged("Description_Fa")
				Me.OnDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_En", DbType:="NVarChar(1000)")>  _
	Public Property Description_En() As String
		Get
			Return Me._Description_En
		End Get
		Set
			If (String.Equals(Me._Description_En, value) = false) Then
				Me.OnDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._Description_En = value
				Me.SendPropertyChanged("Description_En")
				Me.OnDescription_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_Fa", DbType:="NVarChar(50)")>  _
	Public Property Moment_Fa() As String
		Get
			Return Me._Moment_Fa
		End Get
		Set
			If (String.Equals(Me._Moment_Fa, value) = false) Then
				Me.OnMoment_FaChanging(value)
				Me.SendPropertyChanging
				Me._Moment_Fa = value
				Me.SendPropertyChanged("Moment_Fa")
				Me.OnMoment_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_En", DbType:="NVarChar(50)")>  _
	Public Property Moment_En() As String
		Get
			Return Me._Moment_En
		End Get
		Set
			If (String.Equals(Me._Moment_En, value) = false) Then
				Me.OnMoment_EnChanging(value)
				Me.SendPropertyChanging
				Me._Moment_En = value
				Me.SendPropertyChanged("Moment_En")
				Me.OnMoment_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Alt_Fa", DbType:="NVarChar(500)")>  _
	Public Property Alt_Fa() As String
		Get
			Return Me._Alt_Fa
		End Get
		Set
			If (String.Equals(Me._Alt_Fa, value) = false) Then
				Me.OnAlt_FaChanging(value)
				Me.SendPropertyChanging
				Me._Alt_Fa = value
				Me.SendPropertyChanged("Alt_Fa")
				Me.OnAlt_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Alt_En", DbType:="NVarChar(500)")>  _
	Public Property Alt_En() As String
		Get
			Return Me._Alt_En
		End Get
		Set
			If (String.Equals(Me._Alt_En, value) = false) Then
				Me.OnAlt_EnChanging(value)
				Me.SendPropertyChanging
				Me._Alt_En = value
				Me.SendPropertyChanged("Alt_En")
				Me.OnAlt_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Product")>  _
Partial Public Class Product
	
	Private _IDP As Integer
	
	Private _CatName As String
	
	Private _Name As String
	
	Private _Brand As String
	
	Private _Model As String
	
	Private _Price As String
	
	Private _Rank As Integer
	
	Private _Description As String
	
	Private _IDCat As Integer
	
	Private _KeyWord As String
	
	Private _Pic As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDP", DbType:="Int NOT NULL")>  _
	Public Property IDP() As Integer
		Get
			Return Me._IDP
		End Get
		Set
			If ((Me._IDP = value)  _
						= false) Then
				Me._IDP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatName", DbType:="NVarChar(150)")>  _
	Public Property CatName() As String
		Get
			Return Me._CatName
		End Get
		Set
			If (String.Equals(Me._CatName, value) = false) Then
				Me._CatName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me._Name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Brand", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property Brand() As String
		Get
			Return Me._Brand
		End Get
		Set
			If (String.Equals(Me._Brand, value) = false) Then
				Me._Brand = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Model", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property Model() As String
		Get
			Return Me._Model
		End Get
		Set
			If (String.Equals(Me._Model, value) = false) Then
				Me._Model = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Price", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Price() As String
		Get
			Return Me._Price
		End Get
		Set
			If (String.Equals(Me._Price, value) = false) Then
				Me._Price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rank", DbType:="Int NOT NULL")>  _
	Public Property Rank() As Integer
		Get
			Return Me._Rank
		End Get
		Set
			If ((Me._Rank = value)  _
						= false) Then
				Me._Rank = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(1000) NOT NULL", CanBeNull:=false)>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me._Description = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDCat", DbType:="Int NOT NULL")>  _
	Public Property IDCat() As Integer
		Get
			Return Me._IDCat
		End Get
		Set
			If ((Me._IDCat = value)  _
						= false) Then
				Me._IDCat = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KeyWord", DbType:="NVarChar(800)")>  _
	Public Property KeyWord() As String
		Get
			Return Me._KeyWord
		End Get
		Set
			If (String.Equals(Me._KeyWord, value) = false) Then
				Me._KeyWord = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pic", DbType:="NVarChar(1100)")>  _
	Public Property Pic() As String
		Get
			Return Me._Pic
		End Get
		Set
			If (String.Equals(Me._Pic, value) = false) Then
				Me._Pic = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Sales")>  _
Partial Public Class Sale
	
	Private _IDS As Integer
	
	Private _Username As String
	
	Private _DateAndTime As String
	
	Private _Phone As String
	
	Private _Email As String
	
	Private _Address As String
	
	Private _Map As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDS", DbType:="Int NOT NULL")>  _
	Public Property IDS() As Integer
		Get
			Return Me._IDS
		End Get
		Set
			If ((Me._IDS = value)  _
						= false) Then
				Me._IDS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="NVarChar(150)")>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me._Username = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateAndTime", DbType:="NVarChar(50)")>  _
	Public Property DateAndTime() As String
		Get
			Return Me._DateAndTime
		End Get
		Set
			If (String.Equals(Me._DateAndTime, value) = false) Then
				Me._DateAndTime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="NChar(11)")>  _
	Public Property Phone() As String
		Get
			Return Me._Phone
		End Get
		Set
			If (String.Equals(Me._Phone, value) = false) Then
				Me._Phone = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(500)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address", DbType:="NVarChar(2000)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me._Address = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Map", DbType:="NVarChar(10)")>  _
	Public Property Map() As String
		Get
			Return Me._Map
		End Get
		Set
			If (String.Equals(Me._Map, value) = false) Then
				Me._Map = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Servises")>  _
Partial Public Class Servise
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDS As Integer
	
	Private _Username As String
	
	Private _Authority As String
	
	Private _Name_Fa As String
	
	Private _Type_Fa As String
	
	Private _Location_Fa As String
	
	Private _DBase_Fa As String
	
	Private _Deployment_Fa As String
	
	Private _NameServer1 As String
	
	Private _NameServer2 As String
	
	Private _IPtoBank As String
	
	Private _Trafic As String
	
	Private _OneYearPrice_Fa As String
	
	Private _TwoYearPercent As String
	
	Private _ThreeYearPercent As String
	
	Private _Status_Fa As String
	
	Private _MomentBuy_Fa As String
	
	Private _MomentExp_Fa As String
	
	Private _MomentBrn_Fa As String
	
	Private _Description_Fa As String
	
	Private _Instructions_Fa As String
	
	Private _Name_En As String
	
	Private _Type_En As String
	
	Private _Location_En As String
	
	Private _DBase_En As String
	
	Private _Deployment_En As String
	
	Private _OneYearPrice_En As String
	
	Private _Status_En As String
	
	Private _MomentBuy_En As String
	
	Private _MomentExp_En As String
	
	Private _MomentBrn_En As String
	
	Private _Description_En As String
	
	Private _Instructions_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDSChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSChanged()
    End Sub
    Partial Private Sub OnUsernameChanging(value As String)
    End Sub
    Partial Private Sub OnUsernameChanged()
    End Sub
    Partial Private Sub OnAuthorityChanging(value As String)
    End Sub
    Partial Private Sub OnAuthorityChanged()
    End Sub
    Partial Private Sub OnName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnName_FaChanged()
    End Sub
    Partial Private Sub OnType_FaChanging(value As String)
    End Sub
    Partial Private Sub OnType_FaChanged()
    End Sub
    Partial Private Sub OnLocation_FaChanging(value As String)
    End Sub
    Partial Private Sub OnLocation_FaChanged()
    End Sub
    Partial Private Sub OnDBase_FaChanging(value As String)
    End Sub
    Partial Private Sub OnDBase_FaChanged()
    End Sub
    Partial Private Sub OnDeployment_FaChanging(value As String)
    End Sub
    Partial Private Sub OnDeployment_FaChanged()
    End Sub
    Partial Private Sub OnNameServer1Changing(value As String)
    End Sub
    Partial Private Sub OnNameServer1Changed()
    End Sub
    Partial Private Sub OnNameServer2Changing(value As String)
    End Sub
    Partial Private Sub OnNameServer2Changed()
    End Sub
    Partial Private Sub OnIPtoBankChanging(value As String)
    End Sub
    Partial Private Sub OnIPtoBankChanged()
    End Sub
    Partial Private Sub OnTraficChanging(value As String)
    End Sub
    Partial Private Sub OnTraficChanged()
    End Sub
    Partial Private Sub OnOneYearPrice_FaChanging(value As String)
    End Sub
    Partial Private Sub OnOneYearPrice_FaChanged()
    End Sub
    Partial Private Sub OnTwoYearPercentChanging(value As String)
    End Sub
    Partial Private Sub OnTwoYearPercentChanged()
    End Sub
    Partial Private Sub OnThreeYearPercentChanging(value As String)
    End Sub
    Partial Private Sub OnThreeYearPercentChanged()
    End Sub
    Partial Private Sub OnStatus_FaChanging(value As String)
    End Sub
    Partial Private Sub OnStatus_FaChanged()
    End Sub
    Partial Private Sub OnMomentBuy_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMomentBuy_FaChanged()
    End Sub
    Partial Private Sub OnMomentExp_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMomentExp_FaChanged()
    End Sub
    Partial Private Sub OnMomentBrn_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMomentBrn_FaChanged()
    End Sub
    Partial Private Sub OnDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_FaChanged()
    End Sub
    Partial Private Sub OnInstructions_FaChanging(value As String)
    End Sub
    Partial Private Sub OnInstructions_FaChanged()
    End Sub
    Partial Private Sub OnName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnName_EnChanged()
    End Sub
    Partial Private Sub OnType_EnChanging(value As String)
    End Sub
    Partial Private Sub OnType_EnChanged()
    End Sub
    Partial Private Sub OnLocation_EnChanging(value As String)
    End Sub
    Partial Private Sub OnLocation_EnChanged()
    End Sub
    Partial Private Sub OnDBase_EnChanging(value As String)
    End Sub
    Partial Private Sub OnDBase_EnChanged()
    End Sub
    Partial Private Sub OnDeployment_EnChanging(value As String)
    End Sub
    Partial Private Sub OnDeployment_EnChanged()
    End Sub
    Partial Private Sub OnOneYearPrice_EnChanging(value As String)
    End Sub
    Partial Private Sub OnOneYearPrice_EnChanged()
    End Sub
    Partial Private Sub OnStatus_EnChanging(value As String)
    End Sub
    Partial Private Sub OnStatus_EnChanged()
    End Sub
    Partial Private Sub OnMomentBuy_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMomentBuy_EnChanged()
    End Sub
    Partial Private Sub OnMomentExp_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMomentExp_EnChanged()
    End Sub
    Partial Private Sub OnMomentBrn_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMomentBrn_EnChanged()
    End Sub
    Partial Private Sub OnDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_EnChanged()
    End Sub
    Partial Private Sub OnInstructions_EnChanging(value As String)
    End Sub
    Partial Private Sub OnInstructions_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDS", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDS() As Integer
		Get
			Return Me._IDS
		End Get
		Set
			If ((Me._IDS = value)  _
						= false) Then
				Me.OnIDSChanging(value)
				Me.SendPropertyChanging
				Me._IDS = value
				Me.SendPropertyChanged("IDS")
				Me.OnIDSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="NVarChar(500)")>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me.OnUsernameChanging(value)
				Me.SendPropertyChanging
				Me._Username = value
				Me.SendPropertyChanged("Username")
				Me.OnUsernameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Authority", DbType:="NVarChar(50)")>  _
	Public Property Authority() As String
		Get
			Return Me._Authority
		End Get
		Set
			If (String.Equals(Me._Authority, value) = false) Then
				Me.OnAuthorityChanging(value)
				Me.SendPropertyChanging
				Me._Authority = value
				Me.SendPropertyChanged("Authority")
				Me.OnAuthorityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_Fa", DbType:="NVarChar(200)")>  _
	Public Property Name_Fa() As String
		Get
			Return Me._Name_Fa
		End Get
		Set
			If (String.Equals(Me._Name_Fa, value) = false) Then
				Me.OnName_FaChanging(value)
				Me.SendPropertyChanging
				Me._Name_Fa = value
				Me.SendPropertyChanged("Name_Fa")
				Me.OnName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type_Fa", DbType:="NVarChar(200)")>  _
	Public Property Type_Fa() As String
		Get
			Return Me._Type_Fa
		End Get
		Set
			If (String.Equals(Me._Type_Fa, value) = false) Then
				Me.OnType_FaChanging(value)
				Me.SendPropertyChanging
				Me._Type_Fa = value
				Me.SendPropertyChanged("Type_Fa")
				Me.OnType_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location_Fa", DbType:="NVarChar(100)")>  _
	Public Property Location_Fa() As String
		Get
			Return Me._Location_Fa
		End Get
		Set
			If (String.Equals(Me._Location_Fa, value) = false) Then
				Me.OnLocation_FaChanging(value)
				Me.SendPropertyChanging
				Me._Location_Fa = value
				Me.SendPropertyChanged("Location_Fa")
				Me.OnLocation_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DBase_Fa", DbType:="NVarChar(100)")>  _
	Public Property DBase_Fa() As String
		Get
			Return Me._DBase_Fa
		End Get
		Set
			If (String.Equals(Me._DBase_Fa, value) = false) Then
				Me.OnDBase_FaChanging(value)
				Me.SendPropertyChanging
				Me._DBase_Fa = value
				Me.SendPropertyChanged("DBase_Fa")
				Me.OnDBase_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deployment_Fa", DbType:="NVarChar(100)")>  _
	Public Property Deployment_Fa() As String
		Get
			Return Me._Deployment_Fa
		End Get
		Set
			If (String.Equals(Me._Deployment_Fa, value) = false) Then
				Me.OnDeployment_FaChanging(value)
				Me.SendPropertyChanging
				Me._Deployment_Fa = value
				Me.SendPropertyChanged("Deployment_Fa")
				Me.OnDeployment_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameServer1", DbType:="NVarChar(100)")>  _
	Public Property NameServer1() As String
		Get
			Return Me._NameServer1
		End Get
		Set
			If (String.Equals(Me._NameServer1, value) = false) Then
				Me.OnNameServer1Changing(value)
				Me.SendPropertyChanging
				Me._NameServer1 = value
				Me.SendPropertyChanged("NameServer1")
				Me.OnNameServer1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameServer2", DbType:="NVarChar(100)")>  _
	Public Property NameServer2() As String
		Get
			Return Me._NameServer2
		End Get
		Set
			If (String.Equals(Me._NameServer2, value) = false) Then
				Me.OnNameServer2Changing(value)
				Me.SendPropertyChanging
				Me._NameServer2 = value
				Me.SendPropertyChanged("NameServer2")
				Me.OnNameServer2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IPtoBank", DbType:="NVarChar(50)")>  _
	Public Property IPtoBank() As String
		Get
			Return Me._IPtoBank
		End Get
		Set
			If (String.Equals(Me._IPtoBank, value) = false) Then
				Me.OnIPtoBankChanging(value)
				Me.SendPropertyChanging
				Me._IPtoBank = value
				Me.SendPropertyChanged("IPtoBank")
				Me.OnIPtoBankChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Trafic", DbType:="NVarChar(50)")>  _
	Public Property Trafic() As String
		Get
			Return Me._Trafic
		End Get
		Set
			If (String.Equals(Me._Trafic, value) = false) Then
				Me.OnTraficChanging(value)
				Me.SendPropertyChanging
				Me._Trafic = value
				Me.SendPropertyChanged("Trafic")
				Me.OnTraficChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OneYearPrice_Fa", DbType:="NVarChar(50)")>  _
	Public Property OneYearPrice_Fa() As String
		Get
			Return Me._OneYearPrice_Fa
		End Get
		Set
			If (String.Equals(Me._OneYearPrice_Fa, value) = false) Then
				Me.OnOneYearPrice_FaChanging(value)
				Me.SendPropertyChanging
				Me._OneYearPrice_Fa = value
				Me.SendPropertyChanged("OneYearPrice_Fa")
				Me.OnOneYearPrice_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TwoYearPercent", DbType:="NVarChar(50)")>  _
	Public Property TwoYearPercent() As String
		Get
			Return Me._TwoYearPercent
		End Get
		Set
			If (String.Equals(Me._TwoYearPercent, value) = false) Then
				Me.OnTwoYearPercentChanging(value)
				Me.SendPropertyChanging
				Me._TwoYearPercent = value
				Me.SendPropertyChanged("TwoYearPercent")
				Me.OnTwoYearPercentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ThreeYearPercent", DbType:="NVarChar(50)")>  _
	Public Property ThreeYearPercent() As String
		Get
			Return Me._ThreeYearPercent
		End Get
		Set
			If (String.Equals(Me._ThreeYearPercent, value) = false) Then
				Me.OnThreeYearPercentChanging(value)
				Me.SendPropertyChanging
				Me._ThreeYearPercent = value
				Me.SendPropertyChanged("ThreeYearPercent")
				Me.OnThreeYearPercentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status_Fa", DbType:="NVarChar(50)")>  _
	Public Property Status_Fa() As String
		Get
			Return Me._Status_Fa
		End Get
		Set
			If (String.Equals(Me._Status_Fa, value) = false) Then
				Me.OnStatus_FaChanging(value)
				Me.SendPropertyChanging
				Me._Status_Fa = value
				Me.SendPropertyChanged("Status_Fa")
				Me.OnStatus_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MomentBuy_Fa", DbType:="NVarChar(50)")>  _
	Public Property MomentBuy_Fa() As String
		Get
			Return Me._MomentBuy_Fa
		End Get
		Set
			If (String.Equals(Me._MomentBuy_Fa, value) = false) Then
				Me.OnMomentBuy_FaChanging(value)
				Me.SendPropertyChanging
				Me._MomentBuy_Fa = value
				Me.SendPropertyChanged("MomentBuy_Fa")
				Me.OnMomentBuy_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MomentExp_Fa", DbType:="NVarChar(50)")>  _
	Public Property MomentExp_Fa() As String
		Get
			Return Me._MomentExp_Fa
		End Get
		Set
			If (String.Equals(Me._MomentExp_Fa, value) = false) Then
				Me.OnMomentExp_FaChanging(value)
				Me.SendPropertyChanging
				Me._MomentExp_Fa = value
				Me.SendPropertyChanged("MomentExp_Fa")
				Me.OnMomentExp_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MomentBrn_Fa", DbType:="NVarChar(50)")>  _
	Public Property MomentBrn_Fa() As String
		Get
			Return Me._MomentBrn_Fa
		End Get
		Set
			If (String.Equals(Me._MomentBrn_Fa, value) = false) Then
				Me.OnMomentBrn_FaChanging(value)
				Me.SendPropertyChanging
				Me._MomentBrn_Fa = value
				Me.SendPropertyChanged("MomentBrn_Fa")
				Me.OnMomentBrn_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Description_Fa() As String
		Get
			Return Me._Description_Fa
		End Get
		Set
			If (String.Equals(Me._Description_Fa, value) = false) Then
				Me.OnDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._Description_Fa = value
				Me.SendPropertyChanged("Description_Fa")
				Me.OnDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Instructions_Fa", DbType:="NVarChar(MAX)")>  _
	Public Property Instructions_Fa() As String
		Get
			Return Me._Instructions_Fa
		End Get
		Set
			If (String.Equals(Me._Instructions_Fa, value) = false) Then
				Me.OnInstructions_FaChanging(value)
				Me.SendPropertyChanging
				Me._Instructions_Fa = value
				Me.SendPropertyChanged("Instructions_Fa")
				Me.OnInstructions_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_En", DbType:="NVarChar(200)")>  _
	Public Property Name_En() As String
		Get
			Return Me._Name_En
		End Get
		Set
			If (String.Equals(Me._Name_En, value) = false) Then
				Me.OnName_EnChanging(value)
				Me.SendPropertyChanging
				Me._Name_En = value
				Me.SendPropertyChanged("Name_En")
				Me.OnName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type_En", DbType:="NVarChar(200)")>  _
	Public Property Type_En() As String
		Get
			Return Me._Type_En
		End Get
		Set
			If (String.Equals(Me._Type_En, value) = false) Then
				Me.OnType_EnChanging(value)
				Me.SendPropertyChanging
				Me._Type_En = value
				Me.SendPropertyChanged("Type_En")
				Me.OnType_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Location_En", DbType:="NVarChar(100)")>  _
	Public Property Location_En() As String
		Get
			Return Me._Location_En
		End Get
		Set
			If (String.Equals(Me._Location_En, value) = false) Then
				Me.OnLocation_EnChanging(value)
				Me.SendPropertyChanging
				Me._Location_En = value
				Me.SendPropertyChanged("Location_En")
				Me.OnLocation_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DBase_En", DbType:="NVarChar(100)")>  _
	Public Property DBase_En() As String
		Get
			Return Me._DBase_En
		End Get
		Set
			If (String.Equals(Me._DBase_En, value) = false) Then
				Me.OnDBase_EnChanging(value)
				Me.SendPropertyChanging
				Me._DBase_En = value
				Me.SendPropertyChanged("DBase_En")
				Me.OnDBase_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Deployment_En", DbType:="NVarChar(100)")>  _
	Public Property Deployment_En() As String
		Get
			Return Me._Deployment_En
		End Get
		Set
			If (String.Equals(Me._Deployment_En, value) = false) Then
				Me.OnDeployment_EnChanging(value)
				Me.SendPropertyChanging
				Me._Deployment_En = value
				Me.SendPropertyChanged("Deployment_En")
				Me.OnDeployment_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OneYearPrice_En", DbType:="NVarChar(50)")>  _
	Public Property OneYearPrice_En() As String
		Get
			Return Me._OneYearPrice_En
		End Get
		Set
			If (String.Equals(Me._OneYearPrice_En, value) = false) Then
				Me.OnOneYearPrice_EnChanging(value)
				Me.SendPropertyChanging
				Me._OneYearPrice_En = value
				Me.SendPropertyChanged("OneYearPrice_En")
				Me.OnOneYearPrice_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status_En", DbType:="NVarChar(50)")>  _
	Public Property Status_En() As String
		Get
			Return Me._Status_En
		End Get
		Set
			If (String.Equals(Me._Status_En, value) = false) Then
				Me.OnStatus_EnChanging(value)
				Me.SendPropertyChanging
				Me._Status_En = value
				Me.SendPropertyChanged("Status_En")
				Me.OnStatus_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MomentBuy_En", DbType:="NVarChar(50)")>  _
	Public Property MomentBuy_En() As String
		Get
			Return Me._MomentBuy_En
		End Get
		Set
			If (String.Equals(Me._MomentBuy_En, value) = false) Then
				Me.OnMomentBuy_EnChanging(value)
				Me.SendPropertyChanging
				Me._MomentBuy_En = value
				Me.SendPropertyChanged("MomentBuy_En")
				Me.OnMomentBuy_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MomentExp_En", DbType:="NVarChar(50)")>  _
	Public Property MomentExp_En() As String
		Get
			Return Me._MomentExp_En
		End Get
		Set
			If (String.Equals(Me._MomentExp_En, value) = false) Then
				Me.OnMomentExp_EnChanging(value)
				Me.SendPropertyChanging
				Me._MomentExp_En = value
				Me.SendPropertyChanged("MomentExp_En")
				Me.OnMomentExp_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MomentBrn_En", DbType:="NVarChar(50)")>  _
	Public Property MomentBrn_En() As String
		Get
			Return Me._MomentBrn_En
		End Get
		Set
			If (String.Equals(Me._MomentBrn_En, value) = false) Then
				Me.OnMomentBrn_EnChanging(value)
				Me.SendPropertyChanging
				Me._MomentBrn_En = value
				Me.SendPropertyChanged("MomentBrn_En")
				Me.OnMomentBrn_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_En", DbType:="NVarChar(4000)")>  _
	Public Property Description_En() As String
		Get
			Return Me._Description_En
		End Get
		Set
			If (String.Equals(Me._Description_En, value) = false) Then
				Me.OnDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._Description_En = value
				Me.SendPropertyChanged("Description_En")
				Me.OnDescription_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Instructions_En", DbType:="NVarChar(MAX)")>  _
	Public Property Instructions_En() As String
		Get
			Return Me._Instructions_En
		End Get
		Set
			If (String.Equals(Me._Instructions_En, value) = false) Then
				Me.OnInstructions_EnChanging(value)
				Me.SendPropertyChanging
				Me._Instructions_En = value
				Me.SendPropertyChanged("Instructions_En")
				Me.OnInstructions_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Setting")>  _
Partial Public Class Setting
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDS As Integer
	
	Private _NameSettings As String
	
	Private _NameBrand_Fa As String
	
	Private _NameBrand_En As String
	
	Private _NameCorporation_Fa As String
	
	Private _NameCorporation_En As String
	
	Private _NameSite_Fa As String
	
	Private _NameSite_En As String
	
	Private _TitleSite_Fa As String
	
	Private _TitleSite_En As String
	
	Private _Address1_Fa As String
	
	Private _Address2_Fa As String
	
	Private _Address1_En As String
	
	Private _Address2_En As String
	
	Private _TEL1 As String
	
	Private _TEL2 As String
	
	Private _Subject_Fa As String
	
	Private _Subject_En As String
	
	Private _Keywords_Fa As String
	
	Private _Keywords_En As String
	
	Private _Memo_Fa As String
	
	Private _Memo_En As String
	
	Private _Telegram As String
	
	Private _WhatsApp As String
	
	Private _Instagram As String
	
	Private _Facebook As String
	
	Private _Twitter As String
	
	Private _Googleplus As String
	
	Private _Linkedin As String
	
	Private _Description_Fa As String
	
	Private _Description_En As String
	
	Private _CreateYear_En As System.Nullable(Of Integer)
	
	Private _CreateYear_Fa As System.Nullable(Of Integer)
	
	Private _CreateMonth_Fa As System.Nullable(Of Integer)
	
	Private _CreateMonth_En As System.Nullable(Of Integer)
	
	Private _CreateDay_Fa As System.Nullable(Of Integer)
	
	Private _CreateDay_En As System.Nullable(Of Integer)
	
	Private _CopyWrite_En As String
	
	Private _CopyWrite_Fa As String
	
	Private _LogoImageMini As String
	
	Private _LogoImageMax As String
	
	Private _AvatarImage As String
	
	Private _SpecialOffers_Fa As String
	
	Private _SpecialOffers_En As String
	
	Private _EmailCo As String
	
	Private _EmailSupport As String
	
	Private _Website As String
	
	Private _About_Fa As String
	
	Private _About_En As String
	
	Private _Slogan_Fa As String
	
	Private _Slogan_En As String
	
	Private _WorkingHours_Fa As String
	
	Private _WorkingHours_En As String
	
	Private _Terms_Fa As String
	
	Private _Terms_En As String
	
	Private _PrivacyPolicy_Fa As String
	
	Private _PrivacyPolicy_En As String
	
	Private _SafePay_Fa As String
	
	Private _SafePay_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDSChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSChanged()
    End Sub
    Partial Private Sub OnNameSettingsChanging(value As String)
    End Sub
    Partial Private Sub OnNameSettingsChanged()
    End Sub
    Partial Private Sub OnNameBrand_FaChanging(value As String)
    End Sub
    Partial Private Sub OnNameBrand_FaChanged()
    End Sub
    Partial Private Sub OnNameBrand_EnChanging(value As String)
    End Sub
    Partial Private Sub OnNameBrand_EnChanged()
    End Sub
    Partial Private Sub OnNameCorporation_FaChanging(value As String)
    End Sub
    Partial Private Sub OnNameCorporation_FaChanged()
    End Sub
    Partial Private Sub OnNameCorporation_EnChanging(value As String)
    End Sub
    Partial Private Sub OnNameCorporation_EnChanged()
    End Sub
    Partial Private Sub OnNameSite_FaChanging(value As String)
    End Sub
    Partial Private Sub OnNameSite_FaChanged()
    End Sub
    Partial Private Sub OnNameSite_EnChanging(value As String)
    End Sub
    Partial Private Sub OnNameSite_EnChanged()
    End Sub
    Partial Private Sub OnTitleSite_FaChanging(value As String)
    End Sub
    Partial Private Sub OnTitleSite_FaChanged()
    End Sub
    Partial Private Sub OnTitleSite_EnChanging(value As String)
    End Sub
    Partial Private Sub OnTitleSite_EnChanged()
    End Sub
    Partial Private Sub OnAddress1_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAddress1_FaChanged()
    End Sub
    Partial Private Sub OnAddress2_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAddress2_FaChanged()
    End Sub
    Partial Private Sub OnAddress1_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAddress1_EnChanged()
    End Sub
    Partial Private Sub OnAddress2_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAddress2_EnChanged()
    End Sub
    Partial Private Sub OnTEL1Changing(value As String)
    End Sub
    Partial Private Sub OnTEL1Changed()
    End Sub
    Partial Private Sub OnTEL2Changing(value As String)
    End Sub
    Partial Private Sub OnTEL2Changed()
    End Sub
    Partial Private Sub OnSubject_FaChanging(value As String)
    End Sub
    Partial Private Sub OnSubject_FaChanged()
    End Sub
    Partial Private Sub OnSubject_EnChanging(value As String)
    End Sub
    Partial Private Sub OnSubject_EnChanged()
    End Sub
    Partial Private Sub OnKeywords_FaChanging(value As String)
    End Sub
    Partial Private Sub OnKeywords_FaChanged()
    End Sub
    Partial Private Sub OnKeywords_EnChanging(value As String)
    End Sub
    Partial Private Sub OnKeywords_EnChanged()
    End Sub
    Partial Private Sub OnMemo_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMemo_FaChanged()
    End Sub
    Partial Private Sub OnMemo_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMemo_EnChanged()
    End Sub
    Partial Private Sub OnTelegramChanging(value As String)
    End Sub
    Partial Private Sub OnTelegramChanged()
    End Sub
    Partial Private Sub OnWhatsAppChanging(value As String)
    End Sub
    Partial Private Sub OnWhatsAppChanged()
    End Sub
    Partial Private Sub OnInstagramChanging(value As String)
    End Sub
    Partial Private Sub OnInstagramChanged()
    End Sub
    Partial Private Sub OnFacebookChanging(value As String)
    End Sub
    Partial Private Sub OnFacebookChanged()
    End Sub
    Partial Private Sub OnTwitterChanging(value As String)
    End Sub
    Partial Private Sub OnTwitterChanged()
    End Sub
    Partial Private Sub OnGoogleplusChanging(value As String)
    End Sub
    Partial Private Sub OnGoogleplusChanged()
    End Sub
    Partial Private Sub OnLinkedinChanging(value As String)
    End Sub
    Partial Private Sub OnLinkedinChanged()
    End Sub
    Partial Private Sub OnDescription_FaChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_FaChanged()
    End Sub
    Partial Private Sub OnDescription_EnChanging(value As String)
    End Sub
    Partial Private Sub OnDescription_EnChanged()
    End Sub
    Partial Private Sub OnCreateYear_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreateYear_EnChanged()
    End Sub
    Partial Private Sub OnCreateYear_FaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreateYear_FaChanged()
    End Sub
    Partial Private Sub OnCreateMonth_FaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreateMonth_FaChanged()
    End Sub
    Partial Private Sub OnCreateMonth_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreateMonth_EnChanged()
    End Sub
    Partial Private Sub OnCreateDay_FaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreateDay_FaChanged()
    End Sub
    Partial Private Sub OnCreateDay_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreateDay_EnChanged()
    End Sub
    Partial Private Sub OnCopyWrite_EnChanging(value As String)
    End Sub
    Partial Private Sub OnCopyWrite_EnChanged()
    End Sub
    Partial Private Sub OnCopyWrite_FaChanging(value As String)
    End Sub
    Partial Private Sub OnCopyWrite_FaChanged()
    End Sub
    Partial Private Sub OnLogoImageMiniChanging(value As String)
    End Sub
    Partial Private Sub OnLogoImageMiniChanged()
    End Sub
    Partial Private Sub OnLogoImageMaxChanging(value As String)
    End Sub
    Partial Private Sub OnLogoImageMaxChanged()
    End Sub
    Partial Private Sub OnAvatarImageChanging(value As String)
    End Sub
    Partial Private Sub OnAvatarImageChanged()
    End Sub
    Partial Private Sub OnSpecialOffers_FaChanging(value As String)
    End Sub
    Partial Private Sub OnSpecialOffers_FaChanged()
    End Sub
    Partial Private Sub OnSpecialOffers_EnChanging(value As String)
    End Sub
    Partial Private Sub OnSpecialOffers_EnChanged()
    End Sub
    Partial Private Sub OnEmailCoChanging(value As String)
    End Sub
    Partial Private Sub OnEmailCoChanged()
    End Sub
    Partial Private Sub OnEmailSupportChanging(value As String)
    End Sub
    Partial Private Sub OnEmailSupportChanged()
    End Sub
    Partial Private Sub OnWebsiteChanging(value As String)
    End Sub
    Partial Private Sub OnWebsiteChanged()
    End Sub
    Partial Private Sub OnAbout_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAbout_FaChanged()
    End Sub
    Partial Private Sub OnAbout_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAbout_EnChanged()
    End Sub
    Partial Private Sub OnSlogan_FaChanging(value As String)
    End Sub
    Partial Private Sub OnSlogan_FaChanged()
    End Sub
    Partial Private Sub OnSlogan_EnChanging(value As String)
    End Sub
    Partial Private Sub OnSlogan_EnChanged()
    End Sub
    Partial Private Sub OnWorkingHours_FaChanging(value As String)
    End Sub
    Partial Private Sub OnWorkingHours_FaChanged()
    End Sub
    Partial Private Sub OnWorkingHours_EnChanging(value As String)
    End Sub
    Partial Private Sub OnWorkingHours_EnChanged()
    End Sub
    Partial Private Sub OnTerms_FaChanging(value As String)
    End Sub
    Partial Private Sub OnTerms_FaChanged()
    End Sub
    Partial Private Sub OnTerms_EnChanging(value As String)
    End Sub
    Partial Private Sub OnTerms_EnChanged()
    End Sub
    Partial Private Sub OnPrivacyPolicy_FaChanging(value As String)
    End Sub
    Partial Private Sub OnPrivacyPolicy_FaChanged()
    End Sub
    Partial Private Sub OnPrivacyPolicy_EnChanging(value As String)
    End Sub
    Partial Private Sub OnPrivacyPolicy_EnChanged()
    End Sub
    Partial Private Sub OnSafePay_FaChanging(value As String)
    End Sub
    Partial Private Sub OnSafePay_FaChanged()
    End Sub
    Partial Private Sub OnSafePay_EnChanging(value As String)
    End Sub
    Partial Private Sub OnSafePay_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDS", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDS() As Integer
		Get
			Return Me._IDS
		End Get
		Set
			If ((Me._IDS = value)  _
						= false) Then
				Me.OnIDSChanging(value)
				Me.SendPropertyChanging
				Me._IDS = value
				Me.SendPropertyChanged("IDS")
				Me.OnIDSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameSettings", DbType:="NVarChar(300)")>  _
	Public Property NameSettings() As String
		Get
			Return Me._NameSettings
		End Get
		Set
			If (String.Equals(Me._NameSettings, value) = false) Then
				Me.OnNameSettingsChanging(value)
				Me.SendPropertyChanging
				Me._NameSettings = value
				Me.SendPropertyChanged("NameSettings")
				Me.OnNameSettingsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameBrand_Fa", DbType:="NVarChar(500)")>  _
	Public Property NameBrand_Fa() As String
		Get
			Return Me._NameBrand_Fa
		End Get
		Set
			If (String.Equals(Me._NameBrand_Fa, value) = false) Then
				Me.OnNameBrand_FaChanging(value)
				Me.SendPropertyChanging
				Me._NameBrand_Fa = value
				Me.SendPropertyChanged("NameBrand_Fa")
				Me.OnNameBrand_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameBrand_En", DbType:="NVarChar(500)")>  _
	Public Property NameBrand_En() As String
		Get
			Return Me._NameBrand_En
		End Get
		Set
			If (String.Equals(Me._NameBrand_En, value) = false) Then
				Me.OnNameBrand_EnChanging(value)
				Me.SendPropertyChanging
				Me._NameBrand_En = value
				Me.SendPropertyChanged("NameBrand_En")
				Me.OnNameBrand_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameCorporation_Fa", DbType:="NVarChar(500)")>  _
	Public Property NameCorporation_Fa() As String
		Get
			Return Me._NameCorporation_Fa
		End Get
		Set
			If (String.Equals(Me._NameCorporation_Fa, value) = false) Then
				Me.OnNameCorporation_FaChanging(value)
				Me.SendPropertyChanging
				Me._NameCorporation_Fa = value
				Me.SendPropertyChanged("NameCorporation_Fa")
				Me.OnNameCorporation_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameCorporation_En", DbType:="NVarChar(500)")>  _
	Public Property NameCorporation_En() As String
		Get
			Return Me._NameCorporation_En
		End Get
		Set
			If (String.Equals(Me._NameCorporation_En, value) = false) Then
				Me.OnNameCorporation_EnChanging(value)
				Me.SendPropertyChanging
				Me._NameCorporation_En = value
				Me.SendPropertyChanged("NameCorporation_En")
				Me.OnNameCorporation_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameSite_Fa", DbType:="NVarChar(500)")>  _
	Public Property NameSite_Fa() As String
		Get
			Return Me._NameSite_Fa
		End Get
		Set
			If (String.Equals(Me._NameSite_Fa, value) = false) Then
				Me.OnNameSite_FaChanging(value)
				Me.SendPropertyChanging
				Me._NameSite_Fa = value
				Me.SendPropertyChanged("NameSite_Fa")
				Me.OnNameSite_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameSite_En", DbType:="NVarChar(500)")>  _
	Public Property NameSite_En() As String
		Get
			Return Me._NameSite_En
		End Get
		Set
			If (String.Equals(Me._NameSite_En, value) = false) Then
				Me.OnNameSite_EnChanging(value)
				Me.SendPropertyChanging
				Me._NameSite_En = value
				Me.SendPropertyChanged("NameSite_En")
				Me.OnNameSite_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TitleSite_Fa", DbType:="NVarChar(500)")>  _
	Public Property TitleSite_Fa() As String
		Get
			Return Me._TitleSite_Fa
		End Get
		Set
			If (String.Equals(Me._TitleSite_Fa, value) = false) Then
				Me.OnTitleSite_FaChanging(value)
				Me.SendPropertyChanging
				Me._TitleSite_Fa = value
				Me.SendPropertyChanged("TitleSite_Fa")
				Me.OnTitleSite_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TitleSite_En", DbType:="NVarChar(500)")>  _
	Public Property TitleSite_En() As String
		Get
			Return Me._TitleSite_En
		End Get
		Set
			If (String.Equals(Me._TitleSite_En, value) = false) Then
				Me.OnTitleSite_EnChanging(value)
				Me.SendPropertyChanging
				Me._TitleSite_En = value
				Me.SendPropertyChanged("TitleSite_En")
				Me.OnTitleSite_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1_Fa", DbType:="NVarChar(500)")>  _
	Public Property Address1_Fa() As String
		Get
			Return Me._Address1_Fa
		End Get
		Set
			If (String.Equals(Me._Address1_Fa, value) = false) Then
				Me.OnAddress1_FaChanging(value)
				Me.SendPropertyChanging
				Me._Address1_Fa = value
				Me.SendPropertyChanged("Address1_Fa")
				Me.OnAddress1_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2_Fa", DbType:="NVarChar(500)")>  _
	Public Property Address2_Fa() As String
		Get
			Return Me._Address2_Fa
		End Get
		Set
			If (String.Equals(Me._Address2_Fa, value) = false) Then
				Me.OnAddress2_FaChanging(value)
				Me.SendPropertyChanging
				Me._Address2_Fa = value
				Me.SendPropertyChanged("Address2_Fa")
				Me.OnAddress2_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1_En", DbType:="NVarChar(500)")>  _
	Public Property Address1_En() As String
		Get
			Return Me._Address1_En
		End Get
		Set
			If (String.Equals(Me._Address1_En, value) = false) Then
				Me.OnAddress1_EnChanging(value)
				Me.SendPropertyChanging
				Me._Address1_En = value
				Me.SendPropertyChanged("Address1_En")
				Me.OnAddress1_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2_En", DbType:="NVarChar(500)")>  _
	Public Property Address2_En() As String
		Get
			Return Me._Address2_En
		End Get
		Set
			If (String.Equals(Me._Address2_En, value) = false) Then
				Me.OnAddress2_EnChanging(value)
				Me.SendPropertyChanging
				Me._Address2_En = value
				Me.SendPropertyChanged("Address2_En")
				Me.OnAddress2_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL1", DbType:="NVarChar(50)")>  _
	Public Property TEL1() As String
		Get
			Return Me._TEL1
		End Get
		Set
			If (String.Equals(Me._TEL1, value) = false) Then
				Me.OnTEL1Changing(value)
				Me.SendPropertyChanging
				Me._TEL1 = value
				Me.SendPropertyChanged("TEL1")
				Me.OnTEL1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL2", DbType:="NVarChar(50)")>  _
	Public Property TEL2() As String
		Get
			Return Me._TEL2
		End Get
		Set
			If (String.Equals(Me._TEL2, value) = false) Then
				Me.OnTEL2Changing(value)
				Me.SendPropertyChanging
				Me._TEL2 = value
				Me.SendPropertyChanged("TEL2")
				Me.OnTEL2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subject_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Subject_Fa() As String
		Get
			Return Me._Subject_Fa
		End Get
		Set
			If (String.Equals(Me._Subject_Fa, value) = false) Then
				Me.OnSubject_FaChanging(value)
				Me.SendPropertyChanging
				Me._Subject_Fa = value
				Me.SendPropertyChanged("Subject_Fa")
				Me.OnSubject_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subject_En", DbType:="NVarChar(4000)")>  _
	Public Property Subject_En() As String
		Get
			Return Me._Subject_En
		End Get
		Set
			If (String.Equals(Me._Subject_En, value) = false) Then
				Me.OnSubject_EnChanging(value)
				Me.SendPropertyChanging
				Me._Subject_En = value
				Me.SendPropertyChanged("Subject_En")
				Me.OnSubject_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keywords_Fa", DbType:="NVarChar(500)")>  _
	Public Property Keywords_Fa() As String
		Get
			Return Me._Keywords_Fa
		End Get
		Set
			If (String.Equals(Me._Keywords_Fa, value) = false) Then
				Me.OnKeywords_FaChanging(value)
				Me.SendPropertyChanging
				Me._Keywords_Fa = value
				Me.SendPropertyChanged("Keywords_Fa")
				Me.OnKeywords_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keywords_En", DbType:="NVarChar(500)")>  _
	Public Property Keywords_En() As String
		Get
			Return Me._Keywords_En
		End Get
		Set
			If (String.Equals(Me._Keywords_En, value) = false) Then
				Me.OnKeywords_EnChanging(value)
				Me.SendPropertyChanging
				Me._Keywords_En = value
				Me.SendPropertyChanged("Keywords_En")
				Me.OnKeywords_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo_Fa", DbType:="NVarChar(2000)")>  _
	Public Property Memo_Fa() As String
		Get
			Return Me._Memo_Fa
		End Get
		Set
			If (String.Equals(Me._Memo_Fa, value) = false) Then
				Me.OnMemo_FaChanging(value)
				Me.SendPropertyChanging
				Me._Memo_Fa = value
				Me.SendPropertyChanged("Memo_Fa")
				Me.OnMemo_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo_En", DbType:="NVarChar(2000)")>  _
	Public Property Memo_En() As String
		Get
			Return Me._Memo_En
		End Get
		Set
			If (String.Equals(Me._Memo_En, value) = false) Then
				Me.OnMemo_EnChanging(value)
				Me.SendPropertyChanging
				Me._Memo_En = value
				Me.SendPropertyChanged("Memo_En")
				Me.OnMemo_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telegram", DbType:="NVarChar(100)")>  _
	Public Property Telegram() As String
		Get
			Return Me._Telegram
		End Get
		Set
			If (String.Equals(Me._Telegram, value) = false) Then
				Me.OnTelegramChanging(value)
				Me.SendPropertyChanging
				Me._Telegram = value
				Me.SendPropertyChanged("Telegram")
				Me.OnTelegramChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WhatsApp", DbType:="NVarChar(100)")>  _
	Public Property WhatsApp() As String
		Get
			Return Me._WhatsApp
		End Get
		Set
			If (String.Equals(Me._WhatsApp, value) = false) Then
				Me.OnWhatsAppChanging(value)
				Me.SendPropertyChanging
				Me._WhatsApp = value
				Me.SendPropertyChanged("WhatsApp")
				Me.OnWhatsAppChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Instagram", DbType:="NVarChar(100)")>  _
	Public Property Instagram() As String
		Get
			Return Me._Instagram
		End Get
		Set
			If (String.Equals(Me._Instagram, value) = false) Then
				Me.OnInstagramChanging(value)
				Me.SendPropertyChanging
				Me._Instagram = value
				Me.SendPropertyChanged("Instagram")
				Me.OnInstagramChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facebook", DbType:="NVarChar(100)")>  _
	Public Property Facebook() As String
		Get
			Return Me._Facebook
		End Get
		Set
			If (String.Equals(Me._Facebook, value) = false) Then
				Me.OnFacebookChanging(value)
				Me.SendPropertyChanging
				Me._Facebook = value
				Me.SendPropertyChanged("Facebook")
				Me.OnFacebookChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Twitter", DbType:="NVarChar(100)")>  _
	Public Property Twitter() As String
		Get
			Return Me._Twitter
		End Get
		Set
			If (String.Equals(Me._Twitter, value) = false) Then
				Me.OnTwitterChanging(value)
				Me.SendPropertyChanging
				Me._Twitter = value
				Me.SendPropertyChanged("Twitter")
				Me.OnTwitterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Googleplus", DbType:="NVarChar(100)")>  _
	Public Property Googleplus() As String
		Get
			Return Me._Googleplus
		End Get
		Set
			If (String.Equals(Me._Googleplus, value) = false) Then
				Me.OnGoogleplusChanging(value)
				Me.SendPropertyChanging
				Me._Googleplus = value
				Me.SendPropertyChanged("Googleplus")
				Me.OnGoogleplusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Linkedin", DbType:="NVarChar(100)")>  _
	Public Property Linkedin() As String
		Get
			Return Me._Linkedin
		End Get
		Set
			If (String.Equals(Me._Linkedin, value) = false) Then
				Me.OnLinkedinChanging(value)
				Me.SendPropertyChanging
				Me._Linkedin = value
				Me.SendPropertyChanged("Linkedin")
				Me.OnLinkedinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_Fa", DbType:="NVarChar(2000)")>  _
	Public Property Description_Fa() As String
		Get
			Return Me._Description_Fa
		End Get
		Set
			If (String.Equals(Me._Description_Fa, value) = false) Then
				Me.OnDescription_FaChanging(value)
				Me.SendPropertyChanging
				Me._Description_Fa = value
				Me.SendPropertyChanged("Description_Fa")
				Me.OnDescription_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description_En", DbType:="NVarChar(2000)")>  _
	Public Property Description_En() As String
		Get
			Return Me._Description_En
		End Get
		Set
			If (String.Equals(Me._Description_En, value) = false) Then
				Me.OnDescription_EnChanging(value)
				Me.SendPropertyChanging
				Me._Description_En = value
				Me.SendPropertyChanged("Description_En")
				Me.OnDescription_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateYear_En", DbType:="Int")>  _
	Public Property CreateYear_En() As System.Nullable(Of Integer)
		Get
			Return Me._CreateYear_En
		End Get
		Set
			If (Me._CreateYear_En.Equals(value) = false) Then
				Me.OnCreateYear_EnChanging(value)
				Me.SendPropertyChanging
				Me._CreateYear_En = value
				Me.SendPropertyChanged("CreateYear_En")
				Me.OnCreateYear_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateYear_Fa", DbType:="Int")>  _
	Public Property CreateYear_Fa() As System.Nullable(Of Integer)
		Get
			Return Me._CreateYear_Fa
		End Get
		Set
			If (Me._CreateYear_Fa.Equals(value) = false) Then
				Me.OnCreateYear_FaChanging(value)
				Me.SendPropertyChanging
				Me._CreateYear_Fa = value
				Me.SendPropertyChanged("CreateYear_Fa")
				Me.OnCreateYear_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateMonth_Fa", DbType:="Int")>  _
	Public Property CreateMonth_Fa() As System.Nullable(Of Integer)
		Get
			Return Me._CreateMonth_Fa
		End Get
		Set
			If (Me._CreateMonth_Fa.Equals(value) = false) Then
				Me.OnCreateMonth_FaChanging(value)
				Me.SendPropertyChanging
				Me._CreateMonth_Fa = value
				Me.SendPropertyChanged("CreateMonth_Fa")
				Me.OnCreateMonth_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateMonth_En", DbType:="Int")>  _
	Public Property CreateMonth_En() As System.Nullable(Of Integer)
		Get
			Return Me._CreateMonth_En
		End Get
		Set
			If (Me._CreateMonth_En.Equals(value) = false) Then
				Me.OnCreateMonth_EnChanging(value)
				Me.SendPropertyChanging
				Me._CreateMonth_En = value
				Me.SendPropertyChanged("CreateMonth_En")
				Me.OnCreateMonth_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDay_Fa", DbType:="Int")>  _
	Public Property CreateDay_Fa() As System.Nullable(Of Integer)
		Get
			Return Me._CreateDay_Fa
		End Get
		Set
			If (Me._CreateDay_Fa.Equals(value) = false) Then
				Me.OnCreateDay_FaChanging(value)
				Me.SendPropertyChanging
				Me._CreateDay_Fa = value
				Me.SendPropertyChanged("CreateDay_Fa")
				Me.OnCreateDay_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreateDay_En", DbType:="Int")>  _
	Public Property CreateDay_En() As System.Nullable(Of Integer)
		Get
			Return Me._CreateDay_En
		End Get
		Set
			If (Me._CreateDay_En.Equals(value) = false) Then
				Me.OnCreateDay_EnChanging(value)
				Me.SendPropertyChanging
				Me._CreateDay_En = value
				Me.SendPropertyChanged("CreateDay_En")
				Me.OnCreateDay_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CopyWrite_En", DbType:="NVarChar(1000)")>  _
	Public Property CopyWrite_En() As String
		Get
			Return Me._CopyWrite_En
		End Get
		Set
			If (String.Equals(Me._CopyWrite_En, value) = false) Then
				Me.OnCopyWrite_EnChanging(value)
				Me.SendPropertyChanging
				Me._CopyWrite_En = value
				Me.SendPropertyChanged("CopyWrite_En")
				Me.OnCopyWrite_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CopyWrite_Fa", DbType:="NVarChar(1000)")>  _
	Public Property CopyWrite_Fa() As String
		Get
			Return Me._CopyWrite_Fa
		End Get
		Set
			If (String.Equals(Me._CopyWrite_Fa, value) = false) Then
				Me.OnCopyWrite_FaChanging(value)
				Me.SendPropertyChanging
				Me._CopyWrite_Fa = value
				Me.SendPropertyChanged("CopyWrite_Fa")
				Me.OnCopyWrite_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LogoImageMini", DbType:="NVarChar(2000)")>  _
	Public Property LogoImageMini() As String
		Get
			Return Me._LogoImageMini
		End Get
		Set
			If (String.Equals(Me._LogoImageMini, value) = false) Then
				Me.OnLogoImageMiniChanging(value)
				Me.SendPropertyChanging
				Me._LogoImageMini = value
				Me.SendPropertyChanged("LogoImageMini")
				Me.OnLogoImageMiniChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LogoImageMax", DbType:="NVarChar(2000)")>  _
	Public Property LogoImageMax() As String
		Get
			Return Me._LogoImageMax
		End Get
		Set
			If (String.Equals(Me._LogoImageMax, value) = false) Then
				Me.OnLogoImageMaxChanging(value)
				Me.SendPropertyChanging
				Me._LogoImageMax = value
				Me.SendPropertyChanged("LogoImageMax")
				Me.OnLogoImageMaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AvatarImage", DbType:="NVarChar(2000)")>  _
	Public Property AvatarImage() As String
		Get
			Return Me._AvatarImage
		End Get
		Set
			If (String.Equals(Me._AvatarImage, value) = false) Then
				Me.OnAvatarImageChanging(value)
				Me.SendPropertyChanging
				Me._AvatarImage = value
				Me.SendPropertyChanged("AvatarImage")
				Me.OnAvatarImageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialOffers_Fa", DbType:="NVarChar(4000)")>  _
	Public Property SpecialOffers_Fa() As String
		Get
			Return Me._SpecialOffers_Fa
		End Get
		Set
			If (String.Equals(Me._SpecialOffers_Fa, value) = false) Then
				Me.OnSpecialOffers_FaChanging(value)
				Me.SendPropertyChanging
				Me._SpecialOffers_Fa = value
				Me.SendPropertyChanged("SpecialOffers_Fa")
				Me.OnSpecialOffers_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialOffers_En", DbType:="NVarChar(4000)")>  _
	Public Property SpecialOffers_En() As String
		Get
			Return Me._SpecialOffers_En
		End Get
		Set
			If (String.Equals(Me._SpecialOffers_En, value) = false) Then
				Me.OnSpecialOffers_EnChanging(value)
				Me.SendPropertyChanging
				Me._SpecialOffers_En = value
				Me.SendPropertyChanged("SpecialOffers_En")
				Me.OnSpecialOffers_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmailCo", DbType:="NVarChar(500)")>  _
	Public Property EmailCo() As String
		Get
			Return Me._EmailCo
		End Get
		Set
			If (String.Equals(Me._EmailCo, value) = false) Then
				Me.OnEmailCoChanging(value)
				Me.SendPropertyChanging
				Me._EmailCo = value
				Me.SendPropertyChanged("EmailCo")
				Me.OnEmailCoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmailSupport", DbType:="NVarChar(500)")>  _
	Public Property EmailSupport() As String
		Get
			Return Me._EmailSupport
		End Get
		Set
			If (String.Equals(Me._EmailSupport, value) = false) Then
				Me.OnEmailSupportChanging(value)
				Me.SendPropertyChanging
				Me._EmailSupport = value
				Me.SendPropertyChanged("EmailSupport")
				Me.OnEmailSupportChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Website", DbType:="NVarChar(500)")>  _
	Public Property Website() As String
		Get
			Return Me._Website
		End Get
		Set
			If (String.Equals(Me._Website, value) = false) Then
				Me.OnWebsiteChanging(value)
				Me.SendPropertyChanging
				Me._Website = value
				Me.SendPropertyChanged("Website")
				Me.OnWebsiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_About_Fa", DbType:="NVarChar(4000)")>  _
	Public Property About_Fa() As String
		Get
			Return Me._About_Fa
		End Get
		Set
			If (String.Equals(Me._About_Fa, value) = false) Then
				Me.OnAbout_FaChanging(value)
				Me.SendPropertyChanging
				Me._About_Fa = value
				Me.SendPropertyChanged("About_Fa")
				Me.OnAbout_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_About_En", DbType:="NVarChar(4000)")>  _
	Public Property About_En() As String
		Get
			Return Me._About_En
		End Get
		Set
			If (String.Equals(Me._About_En, value) = false) Then
				Me.OnAbout_EnChanging(value)
				Me.SendPropertyChanging
				Me._About_En = value
				Me.SendPropertyChanged("About_En")
				Me.OnAbout_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Slogan_Fa", DbType:="NVarChar(1000)")>  _
	Public Property Slogan_Fa() As String
		Get
			Return Me._Slogan_Fa
		End Get
		Set
			If (String.Equals(Me._Slogan_Fa, value) = false) Then
				Me.OnSlogan_FaChanging(value)
				Me.SendPropertyChanging
				Me._Slogan_Fa = value
				Me.SendPropertyChanged("Slogan_Fa")
				Me.OnSlogan_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Slogan_En", DbType:="NVarChar(1000)")>  _
	Public Property Slogan_En() As String
		Get
			Return Me._Slogan_En
		End Get
		Set
			If (String.Equals(Me._Slogan_En, value) = false) Then
				Me.OnSlogan_EnChanging(value)
				Me.SendPropertyChanging
				Me._Slogan_En = value
				Me.SendPropertyChanged("Slogan_En")
				Me.OnSlogan_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WorkingHours_Fa", DbType:="NVarChar(1000)")>  _
	Public Property WorkingHours_Fa() As String
		Get
			Return Me._WorkingHours_Fa
		End Get
		Set
			If (String.Equals(Me._WorkingHours_Fa, value) = false) Then
				Me.OnWorkingHours_FaChanging(value)
				Me.SendPropertyChanging
				Me._WorkingHours_Fa = value
				Me.SendPropertyChanged("WorkingHours_Fa")
				Me.OnWorkingHours_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WorkingHours_En", DbType:="NVarChar(1000)")>  _
	Public Property WorkingHours_En() As String
		Get
			Return Me._WorkingHours_En
		End Get
		Set
			If (String.Equals(Me._WorkingHours_En, value) = false) Then
				Me.OnWorkingHours_EnChanging(value)
				Me.SendPropertyChanging
				Me._WorkingHours_En = value
				Me.SendPropertyChanged("WorkingHours_En")
				Me.OnWorkingHours_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Terms_Fa", DbType:="NVarChar(MAX)")>  _
	Public Property Terms_Fa() As String
		Get
			Return Me._Terms_Fa
		End Get
		Set
			If (String.Equals(Me._Terms_Fa, value) = false) Then
				Me.OnTerms_FaChanging(value)
				Me.SendPropertyChanging
				Me._Terms_Fa = value
				Me.SendPropertyChanged("Terms_Fa")
				Me.OnTerms_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Terms_En", DbType:="NVarChar(MAX)")>  _
	Public Property Terms_En() As String
		Get
			Return Me._Terms_En
		End Get
		Set
			If (String.Equals(Me._Terms_En, value) = false) Then
				Me.OnTerms_EnChanging(value)
				Me.SendPropertyChanging
				Me._Terms_En = value
				Me.SendPropertyChanged("Terms_En")
				Me.OnTerms_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrivacyPolicy_Fa", DbType:="NVarChar(MAX)")>  _
	Public Property PrivacyPolicy_Fa() As String
		Get
			Return Me._PrivacyPolicy_Fa
		End Get
		Set
			If (String.Equals(Me._PrivacyPolicy_Fa, value) = false) Then
				Me.OnPrivacyPolicy_FaChanging(value)
				Me.SendPropertyChanging
				Me._PrivacyPolicy_Fa = value
				Me.SendPropertyChanged("PrivacyPolicy_Fa")
				Me.OnPrivacyPolicy_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrivacyPolicy_En", DbType:="NVarChar(MAX)")>  _
	Public Property PrivacyPolicy_En() As String
		Get
			Return Me._PrivacyPolicy_En
		End Get
		Set
			If (String.Equals(Me._PrivacyPolicy_En, value) = false) Then
				Me.OnPrivacyPolicy_EnChanging(value)
				Me.SendPropertyChanging
				Me._PrivacyPolicy_En = value
				Me.SendPropertyChanged("PrivacyPolicy_En")
				Me.OnPrivacyPolicy_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SafePay_Fa", DbType:="NVarChar(4000)")>  _
	Public Property SafePay_Fa() As String
		Get
			Return Me._SafePay_Fa
		End Get
		Set
			If (String.Equals(Me._SafePay_Fa, value) = false) Then
				Me.OnSafePay_FaChanging(value)
				Me.SendPropertyChanging
				Me._SafePay_Fa = value
				Me.SendPropertyChanged("SafePay_Fa")
				Me.OnSafePay_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SafePay_En", DbType:="NVarChar(4000)")>  _
	Public Property SafePay_En() As String
		Get
			Return Me._SafePay_En
		End Get
		Set
			If (String.Equals(Me._SafePay_En, value) = false) Then
				Me.OnSafePay_EnChanging(value)
				Me.SendPropertyChanging
				Me._SafePay_En = value
				Me.SendPropertyChanged("SafePay_En")
				Me.OnSafePay_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SoldProducts")>  _
Partial Public Class SoldProduct
	
	Private _IDSP As Integer
	
	Private _IDS As System.Nullable(Of Integer)
	
	Private _IDP As System.Nullable(Of Integer)
	
	Private _Quantity As System.Nullable(Of Integer)
	
	Private _TotalPrice As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSP", DbType:="Int NOT NULL")>  _
	Public Property IDSP() As Integer
		Get
			Return Me._IDSP
		End Get
		Set
			If ((Me._IDSP = value)  _
						= false) Then
				Me._IDSP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDS", DbType:="Int")>  _
	Public Property IDS() As System.Nullable(Of Integer)
		Get
			Return Me._IDS
		End Get
		Set
			If (Me._IDS.Equals(value) = false) Then
				Me._IDS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDP", DbType:="Int")>  _
	Public Property IDP() As System.Nullable(Of Integer)
		Get
			Return Me._IDP
		End Get
		Set
			If (Me._IDP.Equals(value) = false) Then
				Me._IDP = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Quantity", DbType:="Int")>  _
	Public Property Quantity() As System.Nullable(Of Integer)
		Get
			Return Me._Quantity
		End Get
		Set
			If (Me._Quantity.Equals(value) = false) Then
				Me._Quantity = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TotalPrice", DbType:="NVarChar(50)")>  _
	Public Property TotalPrice() As String
		Get
			Return Me._TotalPrice
		End Get
		Set
			If (String.Equals(Me._TotalPrice, value) = false) Then
				Me._TotalPrice = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Task")>  _
Partial Public Class Task
	
	Private _IDT As Integer
	
	Private _TaskName As String
	
	Private _Priority As Integer
	
	Private _Status As String
	
	Private _StartDate As String
	
	Private _EndDate As String
	
	Private _AmountReceived As String
	
	Private _Benefit As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDT", DbType:="Int NOT NULL")>  _
	Public Property IDT() As Integer
		Get
			Return Me._IDT
		End Get
		Set
			If ((Me._IDT = value)  _
						= false) Then
				Me._IDT = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TaskName", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property TaskName() As String
		Get
			Return Me._TaskName
		End Get
		Set
			If (String.Equals(Me._TaskName, value) = false) Then
				Me._TaskName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priority", DbType:="Int NOT NULL")>  _
	Public Property Priority() As Integer
		Get
			Return Me._Priority
		End Get
		Set
			If ((Me._Priority = value)  _
						= false) Then
				Me._Priority = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me._Status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property StartDate() As String
		Get
			Return Me._StartDate
		End Get
		Set
			If (String.Equals(Me._StartDate, value) = false) Then
				Me._StartDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property EndDate() As String
		Get
			Return Me._EndDate
		End Get
		Set
			If (String.Equals(Me._EndDate, value) = false) Then
				Me._EndDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AmountReceived", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property AmountReceived() As String
		Get
			Return Me._AmountReceived
		End Get
		Set
			If (String.Equals(Me._AmountReceived, value) = false) Then
				Me._AmountReceived = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Benefit", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Benefit() As String
		Get
			Return Me._Benefit
		End Get
		Set
			If (String.Equals(Me._Benefit, value) = false) Then
				Me._Benefit = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[User]")>  _
Partial Public Class User
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDU As Integer
	
	Private _Username As String
	
	Private _Password As String
	
	Private _IsSupervisor As System.Nullable(Of Boolean)
	
	Private _IsMan As System.Nullable(Of Boolean)
	
	Private _Authoritys As String
	
	Private _Name_Fa As String
	
	Private _Name_En As String
	
	Private _Family_Fa As String
	
	Private _Family_En As String
	
	Private _BirthYear_Fa As System.Nullable(Of Integer)
	
	Private _BirthMonth_Fa As System.Nullable(Of Integer)
	
	Private _BirthDay_Fa As System.Nullable(Of Integer)
	
	Private _BirthYear_En As System.Nullable(Of Integer)
	
	Private _BirthMonth_En As System.Nullable(Of Integer)
	
	Private _BirthDay_En As System.Nullable(Of Integer)
	
	Private _BirthdayLocation_Fa As String
	
	Private _BirthdayLocation_En As String
	
	Private _LiveLocation_Fa As String
	
	Private _LiveLocation_En As String
	
	Private _Phone1 As String
	
	Private _Phone2 As String
	
	Private _Mobile1 As String
	
	Private _Mobile2 As String
	
	Private _Address1_Fa As String
	
	Private _Address2_Fa As String
	
	Private _Address1_En As String
	
	Private _Address2_En As String
	
	Private _Email As String
	
	Private _Website As String
	
	Private _Instagram As String
	
	Private _Telegram As String
	
	Private _WhatsApp As String
	
	Private _Linkedin As String
	
	Private _Googleplus As String
	
	Private _Twitter As String
	
	Private _Facebook As String
	
	Private _PhotoMin As String
	
	Private _PhotoMax As String
	
	Private _Biography_Fa As String
	
	Private _Biography_En As String
	
	Private _ResumeFile As String
	
	Private _About_Fa As String
	
	Private _About_En As String
	
	Private _Job_Fa As String
	
	Private _Job_En As String
	
	Private _BioEdu_Fa As String
	
	Private _BioEdu_En As String
	
	Private _Evidence_Fa As String
	
	Private _Evidence_En As String
	
	Private _GraduationLocation_Fa As String
	
	Private _GraduationLocation_En As String
	
	Private _GraduationDate_Fa As String
	
	Private _GraduationDate_En As String
	
	Private _Intrests_Fa As String
	
	Private _Intrests_En As String
	
	Private _State_Fa As String
	
	Private _State_En As String
	
	Private _BioJob_Fa As String
	
	Private _BioJob_En As String
	
	Private _Memo_Fa As String
	
	Private _Memo_En As String
	
	Private _Keyword_Fa As String
	
	Private _Keyword_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDUChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDUChanged()
    End Sub
    Partial Private Sub OnUsernameChanging(value As String)
    End Sub
    Partial Private Sub OnUsernameChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    Partial Private Sub OnIsSupervisorChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsSupervisorChanged()
    End Sub
    Partial Private Sub OnIsManChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsManChanged()
    End Sub
    Partial Private Sub OnAuthoritysChanging(value As String)
    End Sub
    Partial Private Sub OnAuthoritysChanged()
    End Sub
    Partial Private Sub OnName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnName_FaChanged()
    End Sub
    Partial Private Sub OnName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnName_EnChanged()
    End Sub
    Partial Private Sub OnFamily_FaChanging(value As String)
    End Sub
    Partial Private Sub OnFamily_FaChanged()
    End Sub
    Partial Private Sub OnFamily_EnChanging(value As String)
    End Sub
    Partial Private Sub OnFamily_EnChanged()
    End Sub
    Partial Private Sub OnBirthYear_FaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBirthYear_FaChanged()
    End Sub
    Partial Private Sub OnBirthMonth_FaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBirthMonth_FaChanged()
    End Sub
    Partial Private Sub OnBirthDay_FaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBirthDay_FaChanged()
    End Sub
    Partial Private Sub OnBirthYear_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBirthYear_EnChanged()
    End Sub
    Partial Private Sub OnBirthMonth_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBirthMonth_EnChanged()
    End Sub
    Partial Private Sub OnBirthDay_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBirthDay_EnChanged()
    End Sub
    Partial Private Sub OnBirthdayLocation_FaChanging(value As String)
    End Sub
    Partial Private Sub OnBirthdayLocation_FaChanged()
    End Sub
    Partial Private Sub OnBirthdayLocation_EnChanging(value As String)
    End Sub
    Partial Private Sub OnBirthdayLocation_EnChanged()
    End Sub
    Partial Private Sub OnLiveLocation_FaChanging(value As String)
    End Sub
    Partial Private Sub OnLiveLocation_FaChanged()
    End Sub
    Partial Private Sub OnLiveLocation_EnChanging(value As String)
    End Sub
    Partial Private Sub OnLiveLocation_EnChanged()
    End Sub
    Partial Private Sub OnPhone1Changing(value As String)
    End Sub
    Partial Private Sub OnPhone1Changed()
    End Sub
    Partial Private Sub OnPhone2Changing(value As String)
    End Sub
    Partial Private Sub OnPhone2Changed()
    End Sub
    Partial Private Sub OnMobile1Changing(value As String)
    End Sub
    Partial Private Sub OnMobile1Changed()
    End Sub
    Partial Private Sub OnMobile2Changing(value As String)
    End Sub
    Partial Private Sub OnMobile2Changed()
    End Sub
    Partial Private Sub OnAddress1_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAddress1_FaChanged()
    End Sub
    Partial Private Sub OnAddress2_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAddress2_FaChanged()
    End Sub
    Partial Private Sub OnAddress1_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAddress1_EnChanged()
    End Sub
    Partial Private Sub OnAddress2_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAddress2_EnChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnWebsiteChanging(value As String)
    End Sub
    Partial Private Sub OnWebsiteChanged()
    End Sub
    Partial Private Sub OnInstagramChanging(value As String)
    End Sub
    Partial Private Sub OnInstagramChanged()
    End Sub
    Partial Private Sub OnTelegramChanging(value As String)
    End Sub
    Partial Private Sub OnTelegramChanged()
    End Sub
    Partial Private Sub OnWhatsAppChanging(value As String)
    End Sub
    Partial Private Sub OnWhatsAppChanged()
    End Sub
    Partial Private Sub OnLinkedinChanging(value As String)
    End Sub
    Partial Private Sub OnLinkedinChanged()
    End Sub
    Partial Private Sub OnGoogleplusChanging(value As String)
    End Sub
    Partial Private Sub OnGoogleplusChanged()
    End Sub
    Partial Private Sub OnTwitterChanging(value As String)
    End Sub
    Partial Private Sub OnTwitterChanged()
    End Sub
    Partial Private Sub OnFacebookChanging(value As String)
    End Sub
    Partial Private Sub OnFacebookChanged()
    End Sub
    Partial Private Sub OnPhotoMinChanging(value As String)
    End Sub
    Partial Private Sub OnPhotoMinChanged()
    End Sub
    Partial Private Sub OnPhotoMaxChanging(value As String)
    End Sub
    Partial Private Sub OnPhotoMaxChanged()
    End Sub
    Partial Private Sub OnBiography_FaChanging(value As String)
    End Sub
    Partial Private Sub OnBiography_FaChanged()
    End Sub
    Partial Private Sub OnBiography_EnChanging(value As String)
    End Sub
    Partial Private Sub OnBiography_EnChanged()
    End Sub
    Partial Private Sub OnResumeFileChanging(value As String)
    End Sub
    Partial Private Sub OnResumeFileChanged()
    End Sub
    Partial Private Sub OnAbout_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAbout_FaChanged()
    End Sub
    Partial Private Sub OnAbout_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAbout_EnChanged()
    End Sub
    Partial Private Sub OnJob_FaChanging(value As String)
    End Sub
    Partial Private Sub OnJob_FaChanged()
    End Sub
    Partial Private Sub OnJob_EnChanging(value As String)
    End Sub
    Partial Private Sub OnJob_EnChanged()
    End Sub
    Partial Private Sub OnBioEdu_FaChanging(value As String)
    End Sub
    Partial Private Sub OnBioEdu_FaChanged()
    End Sub
    Partial Private Sub OnBioEdu_EnChanging(value As String)
    End Sub
    Partial Private Sub OnBioEdu_EnChanged()
    End Sub
    Partial Private Sub OnEvidence_FaChanging(value As String)
    End Sub
    Partial Private Sub OnEvidence_FaChanged()
    End Sub
    Partial Private Sub OnEvidence_EnChanging(value As String)
    End Sub
    Partial Private Sub OnEvidence_EnChanged()
    End Sub
    Partial Private Sub OnGraduationLocation_FaChanging(value As String)
    End Sub
    Partial Private Sub OnGraduationLocation_FaChanged()
    End Sub
    Partial Private Sub OnGraduationLocation_EnChanging(value As String)
    End Sub
    Partial Private Sub OnGraduationLocation_EnChanged()
    End Sub
    Partial Private Sub OnGraduationDate_FaChanging(value As String)
    End Sub
    Partial Private Sub OnGraduationDate_FaChanged()
    End Sub
    Partial Private Sub OnGraduationDate_EnChanging(value As String)
    End Sub
    Partial Private Sub OnGraduationDate_EnChanged()
    End Sub
    Partial Private Sub OnIntrests_FaChanging(value As String)
    End Sub
    Partial Private Sub OnIntrests_FaChanged()
    End Sub
    Partial Private Sub OnIntrests_EnChanging(value As String)
    End Sub
    Partial Private Sub OnIntrests_EnChanged()
    End Sub
    Partial Private Sub OnState_FaChanging(value As String)
    End Sub
    Partial Private Sub OnState_FaChanged()
    End Sub
    Partial Private Sub OnState_EnChanging(value As String)
    End Sub
    Partial Private Sub OnState_EnChanged()
    End Sub
    Partial Private Sub OnBioJob_FaChanging(value As String)
    End Sub
    Partial Private Sub OnBioJob_FaChanged()
    End Sub
    Partial Private Sub OnBioJob_EnChanging(value As String)
    End Sub
    Partial Private Sub OnBioJob_EnChanged()
    End Sub
    Partial Private Sub OnMemo_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMemo_FaChanged()
    End Sub
    Partial Private Sub OnMemo_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMemo_EnChanged()
    End Sub
    Partial Private Sub OnKeyword_FaChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_FaChanged()
    End Sub
    Partial Private Sub OnKeyword_EnChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDU", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDU() As Integer
		Get
			Return Me._IDU
		End Get
		Set
			If ((Me._IDU = value)  _
						= false) Then
				Me.OnIDUChanging(value)
				Me.SendPropertyChanging
				Me._IDU = value
				Me.SendPropertyChanged("IDU")
				Me.OnIDUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="NVarChar(500)")>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me.OnUsernameChanging(value)
				Me.SendPropertyChanging
				Me._Username = value
				Me.SendPropertyChanged("Username")
				Me.OnUsernameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="NVarChar(500)")>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me.OnPasswordChanging(value)
				Me.SendPropertyChanging
				Me._Password = value
				Me.SendPropertyChanged("Password")
				Me.OnPasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSupervisor", DbType:="Bit")>  _
	Public Property IsSupervisor() As System.Nullable(Of Boolean)
		Get
			Return Me._IsSupervisor
		End Get
		Set
			If (Me._IsSupervisor.Equals(value) = false) Then
				Me.OnIsSupervisorChanging(value)
				Me.SendPropertyChanging
				Me._IsSupervisor = value
				Me.SendPropertyChanged("IsSupervisor")
				Me.OnIsSupervisorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsMan", DbType:="Bit")>  _
	Public Property IsMan() As System.Nullable(Of Boolean)
		Get
			Return Me._IsMan
		End Get
		Set
			If (Me._IsMan.Equals(value) = false) Then
				Me.OnIsManChanging(value)
				Me.SendPropertyChanging
				Me._IsMan = value
				Me.SendPropertyChanged("IsMan")
				Me.OnIsManChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Authoritys", DbType:="NVarChar(1000)")>  _
	Public Property Authoritys() As String
		Get
			Return Me._Authoritys
		End Get
		Set
			If (String.Equals(Me._Authoritys, value) = false) Then
				Me.OnAuthoritysChanging(value)
				Me.SendPropertyChanging
				Me._Authoritys = value
				Me.SendPropertyChanged("Authoritys")
				Me.OnAuthoritysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_Fa", DbType:="NVarChar(500)")>  _
	Public Property Name_Fa() As String
		Get
			Return Me._Name_Fa
		End Get
		Set
			If (String.Equals(Me._Name_Fa, value) = false) Then
				Me.OnName_FaChanging(value)
				Me.SendPropertyChanging
				Me._Name_Fa = value
				Me.SendPropertyChanged("Name_Fa")
				Me.OnName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_En", DbType:="NVarChar(500)")>  _
	Public Property Name_En() As String
		Get
			Return Me._Name_En
		End Get
		Set
			If (String.Equals(Me._Name_En, value) = false) Then
				Me.OnName_EnChanging(value)
				Me.SendPropertyChanging
				Me._Name_En = value
				Me.SendPropertyChanged("Name_En")
				Me.OnName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Family_Fa", DbType:="NVarChar(500)")>  _
	Public Property Family_Fa() As String
		Get
			Return Me._Family_Fa
		End Get
		Set
			If (String.Equals(Me._Family_Fa, value) = false) Then
				Me.OnFamily_FaChanging(value)
				Me.SendPropertyChanging
				Me._Family_Fa = value
				Me.SendPropertyChanged("Family_Fa")
				Me.OnFamily_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Family_En", DbType:="NVarChar(500)")>  _
	Public Property Family_En() As String
		Get
			Return Me._Family_En
		End Get
		Set
			If (String.Equals(Me._Family_En, value) = false) Then
				Me.OnFamily_EnChanging(value)
				Me.SendPropertyChanging
				Me._Family_En = value
				Me.SendPropertyChanged("Family_En")
				Me.OnFamily_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthYear_Fa", DbType:="Int")>  _
	Public Property BirthYear_Fa() As System.Nullable(Of Integer)
		Get
			Return Me._BirthYear_Fa
		End Get
		Set
			If (Me._BirthYear_Fa.Equals(value) = false) Then
				Me.OnBirthYear_FaChanging(value)
				Me.SendPropertyChanging
				Me._BirthYear_Fa = value
				Me.SendPropertyChanged("BirthYear_Fa")
				Me.OnBirthYear_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthMonth_Fa", DbType:="Int")>  _
	Public Property BirthMonth_Fa() As System.Nullable(Of Integer)
		Get
			Return Me._BirthMonth_Fa
		End Get
		Set
			If (Me._BirthMonth_Fa.Equals(value) = false) Then
				Me.OnBirthMonth_FaChanging(value)
				Me.SendPropertyChanging
				Me._BirthMonth_Fa = value
				Me.SendPropertyChanged("BirthMonth_Fa")
				Me.OnBirthMonth_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthDay_Fa", DbType:="Int")>  _
	Public Property BirthDay_Fa() As System.Nullable(Of Integer)
		Get
			Return Me._BirthDay_Fa
		End Get
		Set
			If (Me._BirthDay_Fa.Equals(value) = false) Then
				Me.OnBirthDay_FaChanging(value)
				Me.SendPropertyChanging
				Me._BirthDay_Fa = value
				Me.SendPropertyChanged("BirthDay_Fa")
				Me.OnBirthDay_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthYear_En", DbType:="Int")>  _
	Public Property BirthYear_En() As System.Nullable(Of Integer)
		Get
			Return Me._BirthYear_En
		End Get
		Set
			If (Me._BirthYear_En.Equals(value) = false) Then
				Me.OnBirthYear_EnChanging(value)
				Me.SendPropertyChanging
				Me._BirthYear_En = value
				Me.SendPropertyChanged("BirthYear_En")
				Me.OnBirthYear_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthMonth_En", DbType:="Int")>  _
	Public Property BirthMonth_En() As System.Nullable(Of Integer)
		Get
			Return Me._BirthMonth_En
		End Get
		Set
			If (Me._BirthMonth_En.Equals(value) = false) Then
				Me.OnBirthMonth_EnChanging(value)
				Me.SendPropertyChanging
				Me._BirthMonth_En = value
				Me.SendPropertyChanged("BirthMonth_En")
				Me.OnBirthMonth_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthDay_En", DbType:="Int")>  _
	Public Property BirthDay_En() As System.Nullable(Of Integer)
		Get
			Return Me._BirthDay_En
		End Get
		Set
			If (Me._BirthDay_En.Equals(value) = false) Then
				Me.OnBirthDay_EnChanging(value)
				Me.SendPropertyChanging
				Me._BirthDay_En = value
				Me.SendPropertyChanged("BirthDay_En")
				Me.OnBirthDay_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthdayLocation_Fa", DbType:="NVarChar(500)")>  _
	Public Property BirthdayLocation_Fa() As String
		Get
			Return Me._BirthdayLocation_Fa
		End Get
		Set
			If (String.Equals(Me._BirthdayLocation_Fa, value) = false) Then
				Me.OnBirthdayLocation_FaChanging(value)
				Me.SendPropertyChanging
				Me._BirthdayLocation_Fa = value
				Me.SendPropertyChanged("BirthdayLocation_Fa")
				Me.OnBirthdayLocation_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthdayLocation_En", DbType:="NVarChar(500)")>  _
	Public Property BirthdayLocation_En() As String
		Get
			Return Me._BirthdayLocation_En
		End Get
		Set
			If (String.Equals(Me._BirthdayLocation_En, value) = false) Then
				Me.OnBirthdayLocation_EnChanging(value)
				Me.SendPropertyChanging
				Me._BirthdayLocation_En = value
				Me.SendPropertyChanged("BirthdayLocation_En")
				Me.OnBirthdayLocation_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LiveLocation_Fa", DbType:="NVarChar(500)")>  _
	Public Property LiveLocation_Fa() As String
		Get
			Return Me._LiveLocation_Fa
		End Get
		Set
			If (String.Equals(Me._LiveLocation_Fa, value) = false) Then
				Me.OnLiveLocation_FaChanging(value)
				Me.SendPropertyChanging
				Me._LiveLocation_Fa = value
				Me.SendPropertyChanged("LiveLocation_Fa")
				Me.OnLiveLocation_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LiveLocation_En", DbType:="NVarChar(500)")>  _
	Public Property LiveLocation_En() As String
		Get
			Return Me._LiveLocation_En
		End Get
		Set
			If (String.Equals(Me._LiveLocation_En, value) = false) Then
				Me.OnLiveLocation_EnChanging(value)
				Me.SendPropertyChanging
				Me._LiveLocation_En = value
				Me.SendPropertyChanged("LiveLocation_En")
				Me.OnLiveLocation_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone1", DbType:="NChar(11)")>  _
	Public Property Phone1() As String
		Get
			Return Me._Phone1
		End Get
		Set
			If (String.Equals(Me._Phone1, value) = false) Then
				Me.OnPhone1Changing(value)
				Me.SendPropertyChanging
				Me._Phone1 = value
				Me.SendPropertyChanged("Phone1")
				Me.OnPhone1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone2", DbType:="NChar(11)")>  _
	Public Property Phone2() As String
		Get
			Return Me._Phone2
		End Get
		Set
			If (String.Equals(Me._Phone2, value) = false) Then
				Me.OnPhone2Changing(value)
				Me.SendPropertyChanging
				Me._Phone2 = value
				Me.SendPropertyChanged("Phone2")
				Me.OnPhone2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mobile1", DbType:="NChar(11)")>  _
	Public Property Mobile1() As String
		Get
			Return Me._Mobile1
		End Get
		Set
			If (String.Equals(Me._Mobile1, value) = false) Then
				Me.OnMobile1Changing(value)
				Me.SendPropertyChanging
				Me._Mobile1 = value
				Me.SendPropertyChanged("Mobile1")
				Me.OnMobile1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mobile2", DbType:="NChar(11)")>  _
	Public Property Mobile2() As String
		Get
			Return Me._Mobile2
		End Get
		Set
			If (String.Equals(Me._Mobile2, value) = false) Then
				Me.OnMobile2Changing(value)
				Me.SendPropertyChanging
				Me._Mobile2 = value
				Me.SendPropertyChanged("Mobile2")
				Me.OnMobile2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Address1_Fa() As String
		Get
			Return Me._Address1_Fa
		End Get
		Set
			If (String.Equals(Me._Address1_Fa, value) = false) Then
				Me.OnAddress1_FaChanging(value)
				Me.SendPropertyChanging
				Me._Address1_Fa = value
				Me.SendPropertyChanged("Address1_Fa")
				Me.OnAddress1_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Address2_Fa() As String
		Get
			Return Me._Address2_Fa
		End Get
		Set
			If (String.Equals(Me._Address2_Fa, value) = false) Then
				Me.OnAddress2_FaChanging(value)
				Me.SendPropertyChanging
				Me._Address2_Fa = value
				Me.SendPropertyChanged("Address2_Fa")
				Me.OnAddress2_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1_En", DbType:="NVarChar(4000)")>  _
	Public Property Address1_En() As String
		Get
			Return Me._Address1_En
		End Get
		Set
			If (String.Equals(Me._Address1_En, value) = false) Then
				Me.OnAddress1_EnChanging(value)
				Me.SendPropertyChanging
				Me._Address1_En = value
				Me.SendPropertyChanged("Address1_En")
				Me.OnAddress1_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2_En", DbType:="NVarChar(4000)")>  _
	Public Property Address2_En() As String
		Get
			Return Me._Address2_En
		End Get
		Set
			If (String.Equals(Me._Address2_En, value) = false) Then
				Me.OnAddress2_EnChanging(value)
				Me.SendPropertyChanging
				Me._Address2_En = value
				Me.SendPropertyChanged("Address2_En")
				Me.OnAddress2_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(200)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Website", DbType:="NVarChar(500)")>  _
	Public Property Website() As String
		Get
			Return Me._Website
		End Get
		Set
			If (String.Equals(Me._Website, value) = false) Then
				Me.OnWebsiteChanging(value)
				Me.SendPropertyChanging
				Me._Website = value
				Me.SendPropertyChanged("Website")
				Me.OnWebsiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Instagram", DbType:="NVarChar(100)")>  _
	Public Property Instagram() As String
		Get
			Return Me._Instagram
		End Get
		Set
			If (String.Equals(Me._Instagram, value) = false) Then
				Me.OnInstagramChanging(value)
				Me.SendPropertyChanging
				Me._Instagram = value
				Me.SendPropertyChanged("Instagram")
				Me.OnInstagramChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telegram", DbType:="NVarChar(100)")>  _
	Public Property Telegram() As String
		Get
			Return Me._Telegram
		End Get
		Set
			If (String.Equals(Me._Telegram, value) = false) Then
				Me.OnTelegramChanging(value)
				Me.SendPropertyChanging
				Me._Telegram = value
				Me.SendPropertyChanged("Telegram")
				Me.OnTelegramChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WhatsApp", DbType:="NVarChar(100)")>  _
	Public Property WhatsApp() As String
		Get
			Return Me._WhatsApp
		End Get
		Set
			If (String.Equals(Me._WhatsApp, value) = false) Then
				Me.OnWhatsAppChanging(value)
				Me.SendPropertyChanging
				Me._WhatsApp = value
				Me.SendPropertyChanged("WhatsApp")
				Me.OnWhatsAppChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Linkedin", DbType:="NVarChar(100)")>  _
	Public Property Linkedin() As String
		Get
			Return Me._Linkedin
		End Get
		Set
			If (String.Equals(Me._Linkedin, value) = false) Then
				Me.OnLinkedinChanging(value)
				Me.SendPropertyChanging
				Me._Linkedin = value
				Me.SendPropertyChanged("Linkedin")
				Me.OnLinkedinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Googleplus", DbType:="NVarChar(100)")>  _
	Public Property Googleplus() As String
		Get
			Return Me._Googleplus
		End Get
		Set
			If (String.Equals(Me._Googleplus, value) = false) Then
				Me.OnGoogleplusChanging(value)
				Me.SendPropertyChanging
				Me._Googleplus = value
				Me.SendPropertyChanged("Googleplus")
				Me.OnGoogleplusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Twitter", DbType:="NVarChar(100)")>  _
	Public Property Twitter() As String
		Get
			Return Me._Twitter
		End Get
		Set
			If (String.Equals(Me._Twitter, value) = false) Then
				Me.OnTwitterChanging(value)
				Me.SendPropertyChanging
				Me._Twitter = value
				Me.SendPropertyChanged("Twitter")
				Me.OnTwitterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facebook", DbType:="NVarChar(500)")>  _
	Public Property Facebook() As String
		Get
			Return Me._Facebook
		End Get
		Set
			If (String.Equals(Me._Facebook, value) = false) Then
				Me.OnFacebookChanging(value)
				Me.SendPropertyChanging
				Me._Facebook = value
				Me.SendPropertyChanged("Facebook")
				Me.OnFacebookChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoMin", DbType:="NVarChar(4000)")>  _
	Public Property PhotoMin() As String
		Get
			Return Me._PhotoMin
		End Get
		Set
			If (String.Equals(Me._PhotoMin, value) = false) Then
				Me.OnPhotoMinChanging(value)
				Me.SendPropertyChanging
				Me._PhotoMin = value
				Me.SendPropertyChanged("PhotoMin")
				Me.OnPhotoMinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoMax", DbType:="NVarChar(4000)")>  _
	Public Property PhotoMax() As String
		Get
			Return Me._PhotoMax
		End Get
		Set
			If (String.Equals(Me._PhotoMax, value) = false) Then
				Me.OnPhotoMaxChanging(value)
				Me.SendPropertyChanging
				Me._PhotoMax = value
				Me.SendPropertyChanged("PhotoMax")
				Me.OnPhotoMaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Biography_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Biography_Fa() As String
		Get
			Return Me._Biography_Fa
		End Get
		Set
			If (String.Equals(Me._Biography_Fa, value) = false) Then
				Me.OnBiography_FaChanging(value)
				Me.SendPropertyChanging
				Me._Biography_Fa = value
				Me.SendPropertyChanged("Biography_Fa")
				Me.OnBiography_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Biography_En", DbType:="NVarChar(4000)")>  _
	Public Property Biography_En() As String
		Get
			Return Me._Biography_En
		End Get
		Set
			If (String.Equals(Me._Biography_En, value) = false) Then
				Me.OnBiography_EnChanging(value)
				Me.SendPropertyChanging
				Me._Biography_En = value
				Me.SendPropertyChanged("Biography_En")
				Me.OnBiography_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResumeFile", DbType:="NVarChar(4000)")>  _
	Public Property ResumeFile() As String
		Get
			Return Me._ResumeFile
		End Get
		Set
			If (String.Equals(Me._ResumeFile, value) = false) Then
				Me.OnResumeFileChanging(value)
				Me.SendPropertyChanging
				Me._ResumeFile = value
				Me.SendPropertyChanged("ResumeFile")
				Me.OnResumeFileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_About_Fa", DbType:="NVarChar(4000)")>  _
	Public Property About_Fa() As String
		Get
			Return Me._About_Fa
		End Get
		Set
			If (String.Equals(Me._About_Fa, value) = false) Then
				Me.OnAbout_FaChanging(value)
				Me.SendPropertyChanging
				Me._About_Fa = value
				Me.SendPropertyChanged("About_Fa")
				Me.OnAbout_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_About_En", DbType:="NVarChar(4000)")>  _
	Public Property About_En() As String
		Get
			Return Me._About_En
		End Get
		Set
			If (String.Equals(Me._About_En, value) = false) Then
				Me.OnAbout_EnChanging(value)
				Me.SendPropertyChanging
				Me._About_En = value
				Me.SendPropertyChanged("About_En")
				Me.OnAbout_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Job_Fa", DbType:="NVarChar(1000)")>  _
	Public Property Job_Fa() As String
		Get
			Return Me._Job_Fa
		End Get
		Set
			If (String.Equals(Me._Job_Fa, value) = false) Then
				Me.OnJob_FaChanging(value)
				Me.SendPropertyChanging
				Me._Job_Fa = value
				Me.SendPropertyChanged("Job_Fa")
				Me.OnJob_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Job_En", DbType:="NVarChar(1000)")>  _
	Public Property Job_En() As String
		Get
			Return Me._Job_En
		End Get
		Set
			If (String.Equals(Me._Job_En, value) = false) Then
				Me.OnJob_EnChanging(value)
				Me.SendPropertyChanging
				Me._Job_En = value
				Me.SendPropertyChanged("Job_En")
				Me.OnJob_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BioEdu_Fa", DbType:="NVarChar(4000)")>  _
	Public Property BioEdu_Fa() As String
		Get
			Return Me._BioEdu_Fa
		End Get
		Set
			If (String.Equals(Me._BioEdu_Fa, value) = false) Then
				Me.OnBioEdu_FaChanging(value)
				Me.SendPropertyChanging
				Me._BioEdu_Fa = value
				Me.SendPropertyChanged("BioEdu_Fa")
				Me.OnBioEdu_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BioEdu_En", DbType:="NVarChar(4000)")>  _
	Public Property BioEdu_En() As String
		Get
			Return Me._BioEdu_En
		End Get
		Set
			If (String.Equals(Me._BioEdu_En, value) = false) Then
				Me.OnBioEdu_EnChanging(value)
				Me.SendPropertyChanging
				Me._BioEdu_En = value
				Me.SendPropertyChanged("BioEdu_En")
				Me.OnBioEdu_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Evidence_Fa", DbType:="NVarChar(2000)")>  _
	Public Property Evidence_Fa() As String
		Get
			Return Me._Evidence_Fa
		End Get
		Set
			If (String.Equals(Me._Evidence_Fa, value) = false) Then
				Me.OnEvidence_FaChanging(value)
				Me.SendPropertyChanging
				Me._Evidence_Fa = value
				Me.SendPropertyChanged("Evidence_Fa")
				Me.OnEvidence_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Evidence_En", DbType:="NVarChar(2000)")>  _
	Public Property Evidence_En() As String
		Get
			Return Me._Evidence_En
		End Get
		Set
			If (String.Equals(Me._Evidence_En, value) = false) Then
				Me.OnEvidence_EnChanging(value)
				Me.SendPropertyChanging
				Me._Evidence_En = value
				Me.SendPropertyChanged("Evidence_En")
				Me.OnEvidence_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GraduationLocation_Fa", DbType:="NVarChar(500)")>  _
	Public Property GraduationLocation_Fa() As String
		Get
			Return Me._GraduationLocation_Fa
		End Get
		Set
			If (String.Equals(Me._GraduationLocation_Fa, value) = false) Then
				Me.OnGraduationLocation_FaChanging(value)
				Me.SendPropertyChanging
				Me._GraduationLocation_Fa = value
				Me.SendPropertyChanged("GraduationLocation_Fa")
				Me.OnGraduationLocation_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GraduationLocation_En", DbType:="NVarChar(500)")>  _
	Public Property GraduationLocation_En() As String
		Get
			Return Me._GraduationLocation_En
		End Get
		Set
			If (String.Equals(Me._GraduationLocation_En, value) = false) Then
				Me.OnGraduationLocation_EnChanging(value)
				Me.SendPropertyChanging
				Me._GraduationLocation_En = value
				Me.SendPropertyChanged("GraduationLocation_En")
				Me.OnGraduationLocation_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GraduationDate_Fa", DbType:="NVarChar(50)")>  _
	Public Property GraduationDate_Fa() As String
		Get
			Return Me._GraduationDate_Fa
		End Get
		Set
			If (String.Equals(Me._GraduationDate_Fa, value) = false) Then
				Me.OnGraduationDate_FaChanging(value)
				Me.SendPropertyChanging
				Me._GraduationDate_Fa = value
				Me.SendPropertyChanged("GraduationDate_Fa")
				Me.OnGraduationDate_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GraduationDate_En", DbType:="NVarChar(50)")>  _
	Public Property GraduationDate_En() As String
		Get
			Return Me._GraduationDate_En
		End Get
		Set
			If (String.Equals(Me._GraduationDate_En, value) = false) Then
				Me.OnGraduationDate_EnChanging(value)
				Me.SendPropertyChanging
				Me._GraduationDate_En = value
				Me.SendPropertyChanged("GraduationDate_En")
				Me.OnGraduationDate_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Intrests_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Intrests_Fa() As String
		Get
			Return Me._Intrests_Fa
		End Get
		Set
			If (String.Equals(Me._Intrests_Fa, value) = false) Then
				Me.OnIntrests_FaChanging(value)
				Me.SendPropertyChanging
				Me._Intrests_Fa = value
				Me.SendPropertyChanged("Intrests_Fa")
				Me.OnIntrests_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Intrests_En", DbType:="NVarChar(4000)")>  _
	Public Property Intrests_En() As String
		Get
			Return Me._Intrests_En
		End Get
		Set
			If (String.Equals(Me._Intrests_En, value) = false) Then
				Me.OnIntrests_EnChanging(value)
				Me.SendPropertyChanging
				Me._Intrests_En = value
				Me.SendPropertyChanged("Intrests_En")
				Me.OnIntrests_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_State_Fa", DbType:="NVarChar(500)")>  _
	Public Property State_Fa() As String
		Get
			Return Me._State_Fa
		End Get
		Set
			If (String.Equals(Me._State_Fa, value) = false) Then
				Me.OnState_FaChanging(value)
				Me.SendPropertyChanging
				Me._State_Fa = value
				Me.SendPropertyChanged("State_Fa")
				Me.OnState_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_State_En", DbType:="NVarChar(500)")>  _
	Public Property State_En() As String
		Get
			Return Me._State_En
		End Get
		Set
			If (String.Equals(Me._State_En, value) = false) Then
				Me.OnState_EnChanging(value)
				Me.SendPropertyChanging
				Me._State_En = value
				Me.SendPropertyChanged("State_En")
				Me.OnState_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BioJob_Fa", DbType:="NVarChar(4000)")>  _
	Public Property BioJob_Fa() As String
		Get
			Return Me._BioJob_Fa
		End Get
		Set
			If (String.Equals(Me._BioJob_Fa, value) = false) Then
				Me.OnBioJob_FaChanging(value)
				Me.SendPropertyChanging
				Me._BioJob_Fa = value
				Me.SendPropertyChanged("BioJob_Fa")
				Me.OnBioJob_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BioJob_En", DbType:="NVarChar(4000)")>  _
	Public Property BioJob_En() As String
		Get
			Return Me._BioJob_En
		End Get
		Set
			If (String.Equals(Me._BioJob_En, value) = false) Then
				Me.OnBioJob_EnChanging(value)
				Me.SendPropertyChanging
				Me._BioJob_En = value
				Me.SendPropertyChanged("BioJob_En")
				Me.OnBioJob_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo_Fa", DbType:="NVarChar(2000)")>  _
	Public Property Memo_Fa() As String
		Get
			Return Me._Memo_Fa
		End Get
		Set
			If (String.Equals(Me._Memo_Fa, value) = false) Then
				Me.OnMemo_FaChanging(value)
				Me.SendPropertyChanging
				Me._Memo_Fa = value
				Me.SendPropertyChanged("Memo_Fa")
				Me.OnMemo_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo_En", DbType:="NVarChar(2000)")>  _
	Public Property Memo_En() As String
		Get
			Return Me._Memo_En
		End Get
		Set
			If (String.Equals(Me._Memo_En, value) = false) Then
				Me.OnMemo_EnChanging(value)
				Me.SendPropertyChanging
				Me._Memo_En = value
				Me.SendPropertyChanged("Memo_En")
				Me.OnMemo_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_Fa", DbType:="NVarChar(3000)")>  _
	Public Property Keyword_Fa() As String
		Get
			Return Me._Keyword_Fa
		End Get
		Set
			If (String.Equals(Me._Keyword_Fa, value) = false) Then
				Me.OnKeyword_FaChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_Fa = value
				Me.SendPropertyChanged("Keyword_Fa")
				Me.OnKeyword_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_En", DbType:="NVarChar(3000)")>  _
	Public Property Keyword_En() As String
		Get
			Return Me._Keyword_En
		End Get
		Set
			If (String.Equals(Me._Keyword_En, value) = false) Then
				Me.OnKeyword_EnChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_En = value
				Me.SendPropertyChanged("Keyword_En")
				Me.OnKeyword_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.UsersOnlineDetails")>  _
Partial Public Class UsersOnlineDetail
	
	Private _IDOnline As Integer
	
	Private _MachinName As String
	
	Private _IPAddress As String
	
	Private _Browser As String
	
	Private _Platform As String
	
	Private _DateAndTime As String
	
	Private _Page As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDOnline", DbType:="Int NOT NULL")>  _
	Public Property IDOnline() As Integer
		Get
			Return Me._IDOnline
		End Get
		Set
			If ((Me._IDOnline = value)  _
						= false) Then
				Me._IDOnline = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MachinName", DbType:="NVarChar(90)")>  _
	Public Property MachinName() As String
		Get
			Return Me._MachinName
		End Get
		Set
			If (String.Equals(Me._MachinName, value) = false) Then
				Me._MachinName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IPAddress", DbType:="NVarChar(20)")>  _
	Public Property IPAddress() As String
		Get
			Return Me._IPAddress
		End Get
		Set
			If (String.Equals(Me._IPAddress, value) = false) Then
				Me._IPAddress = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Browser", DbType:="NVarChar(50)")>  _
	Public Property Browser() As String
		Get
			Return Me._Browser
		End Get
		Set
			If (String.Equals(Me._Browser, value) = false) Then
				Me._Browser = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Platform", DbType:="NVarChar(50)")>  _
	Public Property Platform() As String
		Get
			Return Me._Platform
		End Get
		Set
			If (String.Equals(Me._Platform, value) = false) Then
				Me._Platform = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateAndTime", DbType:="NVarChar(60)")>  _
	Public Property DateAndTime() As String
		Get
			Return Me._DateAndTime
		End Get
		Set
			If (String.Equals(Me._DateAndTime, value) = false) Then
				Me._DateAndTime = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Page", DbType:="NVarChar(600)")>  _
	Public Property Page() As String
		Get
			Return Me._Page
		End Get
		Set
			If (String.Equals(Me._Page, value) = false) Then
				Me._Page = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Visitor")>  _
Partial Public Class Visitor
	
	Private _IDV As Integer
	
	Private _AllVisitor As Integer
	
	Private _Today As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDV", DbType:="Int NOT NULL")>  _
	Public Property IDV() As Integer
		Get
			Return Me._IDV
		End Get
		Set
			If ((Me._IDV = value)  _
						= false) Then
				Me._IDV = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllVisitor", DbType:="Int NOT NULL")>  _
	Public Property AllVisitor() As Integer
		Get
			Return Me._AllVisitor
		End Get
		Set
			If ((Me._AllVisitor = value)  _
						= false) Then
				Me._AllVisitor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Today", DbType:="Int NOT NULL")>  _
	Public Property Today() As Integer
		Get
			Return Me._Today
		End Get
		Set
			If ((Me._Today = value)  _
						= false) Then
				Me._Today = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Client")>  _
Partial Public Class Client
	
	Private _IDClient As Integer
	
	Private _Username As String
	
	Private _Password As String
	
	Private _IDO As System.Nullable(Of Integer)
	
	Private _Photo As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDClient", DbType:="Int NOT NULL")>  _
	Public Property IDClient() As Integer
		Get
			Return Me._IDClient
		End Get
		Set
			If ((Me._IDClient = value)  _
						= false) Then
				Me._IDClient = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="NVarChar(500)")>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me._Username = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="NVarChar(500)")>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me._Password = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDO", DbType:="Int")>  _
	Public Property IDO() As System.Nullable(Of Integer)
		Get
			Return Me._IDO
		End Get
		Set
			If (Me._IDO.Equals(value) = false) Then
				Me._IDO = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Photo", DbType:="NVarChar(500)")>  _
	Public Property Photo() As String
		Get
			Return Me._Photo
		End Get
		Set
			If (String.Equals(Me._Photo, value) = false) Then
				Me._Photo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Student")>  _
Partial Public Class Student
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDS As Integer
	
	Private _IDNo As String
	
	Private _Password As String
	
	Private _IsSupervisor As System.Nullable(Of Boolean)
	
	Private _IsMan As System.Nullable(Of Boolean)
	
	Private _Authoritys As String
	
	Private _Name_Fa As String
	
	Private _Name_En As String
	
	Private _Family_Fa As String
	
	Private _Family_En As String
	
	Private _BirthYear_Fa As System.Nullable(Of Integer)
	
	Private _BirthMonth_Fa As System.Nullable(Of Integer)
	
	Private _BirthDay_Fa As System.Nullable(Of Integer)
	
	Private _BirthYear_En As System.Nullable(Of Integer)
	
	Private _BirthMonth_En As System.Nullable(Of Integer)
	
	Private _BirthDay_En As System.Nullable(Of Integer)
	
	Private _BirthdayLocation_Fa As String
	
	Private _BirthdayLocation_En As String
	
	Private _LiveLocation_Fa As String
	
	Private _LiveLocation_En As String
	
	Private _Phone1 As String
	
	Private _Phone2 As String
	
	Private _Mobile1 As String
	
	Private _Mobile2 As String
	
	Private _Address1_Fa As String
	
	Private _Address2_Fa As String
	
	Private _Address1_En As String
	
	Private _Address2_En As String
	
	Private _Email As String
	
	Private _Website As String
	
	Private _Instagram As String
	
	Private _Telegram As String
	
	Private _WhatsApp As String
	
	Private _Linkedin As String
	
	Private _Googleplus As String
	
	Private _Twitter As String
	
	Private _Facebook As String
	
	Private _PhotoMin As String
	
	Private _PhotoMax As String
	
	Private _Biography_Fa As String
	
	Private _Biography_En As String
	
	Private _ResumeFile As String
	
	Private _About_Fa As String
	
	Private _About_En As String
	
	Private _Job_Fa As String
	
	Private _Job_En As String
	
	Private _BioEdu_Fa As String
	
	Private _BioEdu_En As String
	
	Private _Evidence_Fa As String
	
	Private _Evidence_En As String
	
	Private _GraduationLocation_Fa As String
	
	Private _GraduationLocation_En As String
	
	Private _GraduationDate_Fa As String
	
	Private _GraduationDate_En As String
	
	Private _Intrests_Fa As String
	
	Private _Intrests_En As String
	
	Private _State_Fa As String
	
	Private _State_En As String
	
	Private _BioJob_Fa As String
	
	Private _BioJob_En As String
	
	Private _Memo_Fa As String
	
	Private _Memo_En As String
	
	Private _Keyword_Fa As String
	
	Private _Keyword_En As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDSChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDSChanged()
    End Sub
    Partial Private Sub OnIDNoChanging(value As String)
    End Sub
    Partial Private Sub OnIDNoChanged()
    End Sub
    Partial Private Sub OnPasswordChanging(value As String)
    End Sub
    Partial Private Sub OnPasswordChanged()
    End Sub
    Partial Private Sub OnIsSupervisorChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsSupervisorChanged()
    End Sub
    Partial Private Sub OnIsManChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsManChanged()
    End Sub
    Partial Private Sub OnAuthoritysChanging(value As String)
    End Sub
    Partial Private Sub OnAuthoritysChanged()
    End Sub
    Partial Private Sub OnName_FaChanging(value As String)
    End Sub
    Partial Private Sub OnName_FaChanged()
    End Sub
    Partial Private Sub OnName_EnChanging(value As String)
    End Sub
    Partial Private Sub OnName_EnChanged()
    End Sub
    Partial Private Sub OnFamily_FaChanging(value As String)
    End Sub
    Partial Private Sub OnFamily_FaChanged()
    End Sub
    Partial Private Sub OnFamily_EnChanging(value As String)
    End Sub
    Partial Private Sub OnFamily_EnChanged()
    End Sub
    Partial Private Sub OnBirthYear_FaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBirthYear_FaChanged()
    End Sub
    Partial Private Sub OnBirthMonth_FaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBirthMonth_FaChanged()
    End Sub
    Partial Private Sub OnBirthDay_FaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBirthDay_FaChanged()
    End Sub
    Partial Private Sub OnBirthYear_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBirthYear_EnChanged()
    End Sub
    Partial Private Sub OnBirthMonth_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBirthMonth_EnChanged()
    End Sub
    Partial Private Sub OnBirthDay_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBirthDay_EnChanged()
    End Sub
    Partial Private Sub OnBirthdayLocation_FaChanging(value As String)
    End Sub
    Partial Private Sub OnBirthdayLocation_FaChanged()
    End Sub
    Partial Private Sub OnBirthdayLocation_EnChanging(value As String)
    End Sub
    Partial Private Sub OnBirthdayLocation_EnChanged()
    End Sub
    Partial Private Sub OnLiveLocation_FaChanging(value As String)
    End Sub
    Partial Private Sub OnLiveLocation_FaChanged()
    End Sub
    Partial Private Sub OnLiveLocation_EnChanging(value As String)
    End Sub
    Partial Private Sub OnLiveLocation_EnChanged()
    End Sub
    Partial Private Sub OnPhone1Changing(value As String)
    End Sub
    Partial Private Sub OnPhone1Changed()
    End Sub
    Partial Private Sub OnPhone2Changing(value As String)
    End Sub
    Partial Private Sub OnPhone2Changed()
    End Sub
    Partial Private Sub OnMobile1Changing(value As String)
    End Sub
    Partial Private Sub OnMobile1Changed()
    End Sub
    Partial Private Sub OnMobile2Changing(value As String)
    End Sub
    Partial Private Sub OnMobile2Changed()
    End Sub
    Partial Private Sub OnAddress1_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAddress1_FaChanged()
    End Sub
    Partial Private Sub OnAddress2_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAddress2_FaChanged()
    End Sub
    Partial Private Sub OnAddress1_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAddress1_EnChanged()
    End Sub
    Partial Private Sub OnAddress2_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAddress2_EnChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnWebsiteChanging(value As String)
    End Sub
    Partial Private Sub OnWebsiteChanged()
    End Sub
    Partial Private Sub OnInstagramChanging(value As String)
    End Sub
    Partial Private Sub OnInstagramChanged()
    End Sub
    Partial Private Sub OnTelegramChanging(value As String)
    End Sub
    Partial Private Sub OnTelegramChanged()
    End Sub
    Partial Private Sub OnWhatsAppChanging(value As String)
    End Sub
    Partial Private Sub OnWhatsAppChanged()
    End Sub
    Partial Private Sub OnLinkedinChanging(value As String)
    End Sub
    Partial Private Sub OnLinkedinChanged()
    End Sub
    Partial Private Sub OnGoogleplusChanging(value As String)
    End Sub
    Partial Private Sub OnGoogleplusChanged()
    End Sub
    Partial Private Sub OnTwitterChanging(value As String)
    End Sub
    Partial Private Sub OnTwitterChanged()
    End Sub
    Partial Private Sub OnFacebookChanging(value As String)
    End Sub
    Partial Private Sub OnFacebookChanged()
    End Sub
    Partial Private Sub OnPhotoMinChanging(value As String)
    End Sub
    Partial Private Sub OnPhotoMinChanged()
    End Sub
    Partial Private Sub OnPhotoMaxChanging(value As String)
    End Sub
    Partial Private Sub OnPhotoMaxChanged()
    End Sub
    Partial Private Sub OnBiography_FaChanging(value As String)
    End Sub
    Partial Private Sub OnBiography_FaChanged()
    End Sub
    Partial Private Sub OnBiography_EnChanging(value As String)
    End Sub
    Partial Private Sub OnBiography_EnChanged()
    End Sub
    Partial Private Sub OnResumeFileChanging(value As String)
    End Sub
    Partial Private Sub OnResumeFileChanged()
    End Sub
    Partial Private Sub OnAbout_FaChanging(value As String)
    End Sub
    Partial Private Sub OnAbout_FaChanged()
    End Sub
    Partial Private Sub OnAbout_EnChanging(value As String)
    End Sub
    Partial Private Sub OnAbout_EnChanged()
    End Sub
    Partial Private Sub OnJob_FaChanging(value As String)
    End Sub
    Partial Private Sub OnJob_FaChanged()
    End Sub
    Partial Private Sub OnJob_EnChanging(value As String)
    End Sub
    Partial Private Sub OnJob_EnChanged()
    End Sub
    Partial Private Sub OnBioEdu_FaChanging(value As String)
    End Sub
    Partial Private Sub OnBioEdu_FaChanged()
    End Sub
    Partial Private Sub OnBioEdu_EnChanging(value As String)
    End Sub
    Partial Private Sub OnBioEdu_EnChanged()
    End Sub
    Partial Private Sub OnEvidence_FaChanging(value As String)
    End Sub
    Partial Private Sub OnEvidence_FaChanged()
    End Sub
    Partial Private Sub OnEvidence_EnChanging(value As String)
    End Sub
    Partial Private Sub OnEvidence_EnChanged()
    End Sub
    Partial Private Sub OnGraduationLocation_FaChanging(value As String)
    End Sub
    Partial Private Sub OnGraduationLocation_FaChanged()
    End Sub
    Partial Private Sub OnGraduationLocation_EnChanging(value As String)
    End Sub
    Partial Private Sub OnGraduationLocation_EnChanged()
    End Sub
    Partial Private Sub OnGraduationDate_FaChanging(value As String)
    End Sub
    Partial Private Sub OnGraduationDate_FaChanged()
    End Sub
    Partial Private Sub OnGraduationDate_EnChanging(value As String)
    End Sub
    Partial Private Sub OnGraduationDate_EnChanged()
    End Sub
    Partial Private Sub OnIntrests_FaChanging(value As String)
    End Sub
    Partial Private Sub OnIntrests_FaChanged()
    End Sub
    Partial Private Sub OnIntrests_EnChanging(value As String)
    End Sub
    Partial Private Sub OnIntrests_EnChanged()
    End Sub
    Partial Private Sub OnState_FaChanging(value As String)
    End Sub
    Partial Private Sub OnState_FaChanged()
    End Sub
    Partial Private Sub OnState_EnChanging(value As String)
    End Sub
    Partial Private Sub OnState_EnChanged()
    End Sub
    Partial Private Sub OnBioJob_FaChanging(value As String)
    End Sub
    Partial Private Sub OnBioJob_FaChanged()
    End Sub
    Partial Private Sub OnBioJob_EnChanging(value As String)
    End Sub
    Partial Private Sub OnBioJob_EnChanged()
    End Sub
    Partial Private Sub OnMemo_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMemo_FaChanged()
    End Sub
    Partial Private Sub OnMemo_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMemo_EnChanged()
    End Sub
    Partial Private Sub OnKeyword_FaChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_FaChanged()
    End Sub
    Partial Private Sub OnKeyword_EnChanging(value As String)
    End Sub
    Partial Private Sub OnKeyword_EnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDS", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IDS() As Integer
		Get
			Return Me._IDS
		End Get
		Set
			If ((Me._IDS = value)  _
						= false) Then
				Me.OnIDSChanging(value)
				Me.SendPropertyChanging
				Me._IDS = value
				Me.SendPropertyChanged("IDS")
				Me.OnIDSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDNo", DbType:="NVarChar(20)")>  _
	Public Property IDNo() As String
		Get
			Return Me._IDNo
		End Get
		Set
			If (String.Equals(Me._IDNo, value) = false) Then
				Me.OnIDNoChanging(value)
				Me.SendPropertyChanging
				Me._IDNo = value
				Me.SendPropertyChanged("IDNo")
				Me.OnIDNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Password", DbType:="NVarChar(500)")>  _
	Public Property Password() As String
		Get
			Return Me._Password
		End Get
		Set
			If (String.Equals(Me._Password, value) = false) Then
				Me.OnPasswordChanging(value)
				Me.SendPropertyChanging
				Me._Password = value
				Me.SendPropertyChanged("Password")
				Me.OnPasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSupervisor", DbType:="Bit")>  _
	Public Property IsSupervisor() As System.Nullable(Of Boolean)
		Get
			Return Me._IsSupervisor
		End Get
		Set
			If (Me._IsSupervisor.Equals(value) = false) Then
				Me.OnIsSupervisorChanging(value)
				Me.SendPropertyChanging
				Me._IsSupervisor = value
				Me.SendPropertyChanged("IsSupervisor")
				Me.OnIsSupervisorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsMan", DbType:="Bit")>  _
	Public Property IsMan() As System.Nullable(Of Boolean)
		Get
			Return Me._IsMan
		End Get
		Set
			If (Me._IsMan.Equals(value) = false) Then
				Me.OnIsManChanging(value)
				Me.SendPropertyChanging
				Me._IsMan = value
				Me.SendPropertyChanged("IsMan")
				Me.OnIsManChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Authoritys", DbType:="NVarChar(1000)")>  _
	Public Property Authoritys() As String
		Get
			Return Me._Authoritys
		End Get
		Set
			If (String.Equals(Me._Authoritys, value) = false) Then
				Me.OnAuthoritysChanging(value)
				Me.SendPropertyChanging
				Me._Authoritys = value
				Me.SendPropertyChanged("Authoritys")
				Me.OnAuthoritysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_Fa", DbType:="NVarChar(500)")>  _
	Public Property Name_Fa() As String
		Get
			Return Me._Name_Fa
		End Get
		Set
			If (String.Equals(Me._Name_Fa, value) = false) Then
				Me.OnName_FaChanging(value)
				Me.SendPropertyChanging
				Me._Name_Fa = value
				Me.SendPropertyChanged("Name_Fa")
				Me.OnName_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name_En", DbType:="NVarChar(500)")>  _
	Public Property Name_En() As String
		Get
			Return Me._Name_En
		End Get
		Set
			If (String.Equals(Me._Name_En, value) = false) Then
				Me.OnName_EnChanging(value)
				Me.SendPropertyChanging
				Me._Name_En = value
				Me.SendPropertyChanged("Name_En")
				Me.OnName_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Family_Fa", DbType:="NVarChar(500)")>  _
	Public Property Family_Fa() As String
		Get
			Return Me._Family_Fa
		End Get
		Set
			If (String.Equals(Me._Family_Fa, value) = false) Then
				Me.OnFamily_FaChanging(value)
				Me.SendPropertyChanging
				Me._Family_Fa = value
				Me.SendPropertyChanged("Family_Fa")
				Me.OnFamily_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Family_En", DbType:="NVarChar(500)")>  _
	Public Property Family_En() As String
		Get
			Return Me._Family_En
		End Get
		Set
			If (String.Equals(Me._Family_En, value) = false) Then
				Me.OnFamily_EnChanging(value)
				Me.SendPropertyChanging
				Me._Family_En = value
				Me.SendPropertyChanged("Family_En")
				Me.OnFamily_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthYear_Fa", DbType:="Int")>  _
	Public Property BirthYear_Fa() As System.Nullable(Of Integer)
		Get
			Return Me._BirthYear_Fa
		End Get
		Set
			If (Me._BirthYear_Fa.Equals(value) = false) Then
				Me.OnBirthYear_FaChanging(value)
				Me.SendPropertyChanging
				Me._BirthYear_Fa = value
				Me.SendPropertyChanged("BirthYear_Fa")
				Me.OnBirthYear_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthMonth_Fa", DbType:="Int")>  _
	Public Property BirthMonth_Fa() As System.Nullable(Of Integer)
		Get
			Return Me._BirthMonth_Fa
		End Get
		Set
			If (Me._BirthMonth_Fa.Equals(value) = false) Then
				Me.OnBirthMonth_FaChanging(value)
				Me.SendPropertyChanging
				Me._BirthMonth_Fa = value
				Me.SendPropertyChanged("BirthMonth_Fa")
				Me.OnBirthMonth_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthDay_Fa", DbType:="Int")>  _
	Public Property BirthDay_Fa() As System.Nullable(Of Integer)
		Get
			Return Me._BirthDay_Fa
		End Get
		Set
			If (Me._BirthDay_Fa.Equals(value) = false) Then
				Me.OnBirthDay_FaChanging(value)
				Me.SendPropertyChanging
				Me._BirthDay_Fa = value
				Me.SendPropertyChanged("BirthDay_Fa")
				Me.OnBirthDay_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthYear_En", DbType:="Int")>  _
	Public Property BirthYear_En() As System.Nullable(Of Integer)
		Get
			Return Me._BirthYear_En
		End Get
		Set
			If (Me._BirthYear_En.Equals(value) = false) Then
				Me.OnBirthYear_EnChanging(value)
				Me.SendPropertyChanging
				Me._BirthYear_En = value
				Me.SendPropertyChanged("BirthYear_En")
				Me.OnBirthYear_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthMonth_En", DbType:="Int")>  _
	Public Property BirthMonth_En() As System.Nullable(Of Integer)
		Get
			Return Me._BirthMonth_En
		End Get
		Set
			If (Me._BirthMonth_En.Equals(value) = false) Then
				Me.OnBirthMonth_EnChanging(value)
				Me.SendPropertyChanging
				Me._BirthMonth_En = value
				Me.SendPropertyChanged("BirthMonth_En")
				Me.OnBirthMonth_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthDay_En", DbType:="Int")>  _
	Public Property BirthDay_En() As System.Nullable(Of Integer)
		Get
			Return Me._BirthDay_En
		End Get
		Set
			If (Me._BirthDay_En.Equals(value) = false) Then
				Me.OnBirthDay_EnChanging(value)
				Me.SendPropertyChanging
				Me._BirthDay_En = value
				Me.SendPropertyChanged("BirthDay_En")
				Me.OnBirthDay_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthdayLocation_Fa", DbType:="NVarChar(500)")>  _
	Public Property BirthdayLocation_Fa() As String
		Get
			Return Me._BirthdayLocation_Fa
		End Get
		Set
			If (String.Equals(Me._BirthdayLocation_Fa, value) = false) Then
				Me.OnBirthdayLocation_FaChanging(value)
				Me.SendPropertyChanging
				Me._BirthdayLocation_Fa = value
				Me.SendPropertyChanged("BirthdayLocation_Fa")
				Me.OnBirthdayLocation_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BirthdayLocation_En", DbType:="NVarChar(500)")>  _
	Public Property BirthdayLocation_En() As String
		Get
			Return Me._BirthdayLocation_En
		End Get
		Set
			If (String.Equals(Me._BirthdayLocation_En, value) = false) Then
				Me.OnBirthdayLocation_EnChanging(value)
				Me.SendPropertyChanging
				Me._BirthdayLocation_En = value
				Me.SendPropertyChanged("BirthdayLocation_En")
				Me.OnBirthdayLocation_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LiveLocation_Fa", DbType:="NVarChar(500)")>  _
	Public Property LiveLocation_Fa() As String
		Get
			Return Me._LiveLocation_Fa
		End Get
		Set
			If (String.Equals(Me._LiveLocation_Fa, value) = false) Then
				Me.OnLiveLocation_FaChanging(value)
				Me.SendPropertyChanging
				Me._LiveLocation_Fa = value
				Me.SendPropertyChanged("LiveLocation_Fa")
				Me.OnLiveLocation_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LiveLocation_En", DbType:="NVarChar(500)")>  _
	Public Property LiveLocation_En() As String
		Get
			Return Me._LiveLocation_En
		End Get
		Set
			If (String.Equals(Me._LiveLocation_En, value) = false) Then
				Me.OnLiveLocation_EnChanging(value)
				Me.SendPropertyChanging
				Me._LiveLocation_En = value
				Me.SendPropertyChanged("LiveLocation_En")
				Me.OnLiveLocation_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone1", DbType:="NChar(11)")>  _
	Public Property Phone1() As String
		Get
			Return Me._Phone1
		End Get
		Set
			If (String.Equals(Me._Phone1, value) = false) Then
				Me.OnPhone1Changing(value)
				Me.SendPropertyChanging
				Me._Phone1 = value
				Me.SendPropertyChanged("Phone1")
				Me.OnPhone1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone2", DbType:="NChar(11)")>  _
	Public Property Phone2() As String
		Get
			Return Me._Phone2
		End Get
		Set
			If (String.Equals(Me._Phone2, value) = false) Then
				Me.OnPhone2Changing(value)
				Me.SendPropertyChanging
				Me._Phone2 = value
				Me.SendPropertyChanged("Phone2")
				Me.OnPhone2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mobile1", DbType:="NChar(11)")>  _
	Public Property Mobile1() As String
		Get
			Return Me._Mobile1
		End Get
		Set
			If (String.Equals(Me._Mobile1, value) = false) Then
				Me.OnMobile1Changing(value)
				Me.SendPropertyChanging
				Me._Mobile1 = value
				Me.SendPropertyChanged("Mobile1")
				Me.OnMobile1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mobile2", DbType:="NChar(11)")>  _
	Public Property Mobile2() As String
		Get
			Return Me._Mobile2
		End Get
		Set
			If (String.Equals(Me._Mobile2, value) = false) Then
				Me.OnMobile2Changing(value)
				Me.SendPropertyChanging
				Me._Mobile2 = value
				Me.SendPropertyChanged("Mobile2")
				Me.OnMobile2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Address1_Fa() As String
		Get
			Return Me._Address1_Fa
		End Get
		Set
			If (String.Equals(Me._Address1_Fa, value) = false) Then
				Me.OnAddress1_FaChanging(value)
				Me.SendPropertyChanging
				Me._Address1_Fa = value
				Me.SendPropertyChanged("Address1_Fa")
				Me.OnAddress1_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Address2_Fa() As String
		Get
			Return Me._Address2_Fa
		End Get
		Set
			If (String.Equals(Me._Address2_Fa, value) = false) Then
				Me.OnAddress2_FaChanging(value)
				Me.SendPropertyChanging
				Me._Address2_Fa = value
				Me.SendPropertyChanged("Address2_Fa")
				Me.OnAddress2_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1_En", DbType:="NVarChar(4000)")>  _
	Public Property Address1_En() As String
		Get
			Return Me._Address1_En
		End Get
		Set
			If (String.Equals(Me._Address1_En, value) = false) Then
				Me.OnAddress1_EnChanging(value)
				Me.SendPropertyChanging
				Me._Address1_En = value
				Me.SendPropertyChanged("Address1_En")
				Me.OnAddress1_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2_En", DbType:="NVarChar(4000)")>  _
	Public Property Address2_En() As String
		Get
			Return Me._Address2_En
		End Get
		Set
			If (String.Equals(Me._Address2_En, value) = false) Then
				Me.OnAddress2_EnChanging(value)
				Me.SendPropertyChanging
				Me._Address2_En = value
				Me.SendPropertyChanged("Address2_En")
				Me.OnAddress2_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(200)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Website", DbType:="NVarChar(500)")>  _
	Public Property Website() As String
		Get
			Return Me._Website
		End Get
		Set
			If (String.Equals(Me._Website, value) = false) Then
				Me.OnWebsiteChanging(value)
				Me.SendPropertyChanging
				Me._Website = value
				Me.SendPropertyChanged("Website")
				Me.OnWebsiteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Instagram", DbType:="NVarChar(100)")>  _
	Public Property Instagram() As String
		Get
			Return Me._Instagram
		End Get
		Set
			If (String.Equals(Me._Instagram, value) = false) Then
				Me.OnInstagramChanging(value)
				Me.SendPropertyChanging
				Me._Instagram = value
				Me.SendPropertyChanged("Instagram")
				Me.OnInstagramChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telegram", DbType:="NVarChar(100)")>  _
	Public Property Telegram() As String
		Get
			Return Me._Telegram
		End Get
		Set
			If (String.Equals(Me._Telegram, value) = false) Then
				Me.OnTelegramChanging(value)
				Me.SendPropertyChanging
				Me._Telegram = value
				Me.SendPropertyChanged("Telegram")
				Me.OnTelegramChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WhatsApp", DbType:="NVarChar(100)")>  _
	Public Property WhatsApp() As String
		Get
			Return Me._WhatsApp
		End Get
		Set
			If (String.Equals(Me._WhatsApp, value) = false) Then
				Me.OnWhatsAppChanging(value)
				Me.SendPropertyChanging
				Me._WhatsApp = value
				Me.SendPropertyChanged("WhatsApp")
				Me.OnWhatsAppChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Linkedin", DbType:="NVarChar(100)")>  _
	Public Property Linkedin() As String
		Get
			Return Me._Linkedin
		End Get
		Set
			If (String.Equals(Me._Linkedin, value) = false) Then
				Me.OnLinkedinChanging(value)
				Me.SendPropertyChanging
				Me._Linkedin = value
				Me.SendPropertyChanged("Linkedin")
				Me.OnLinkedinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Googleplus", DbType:="NVarChar(100)")>  _
	Public Property Googleplus() As String
		Get
			Return Me._Googleplus
		End Get
		Set
			If (String.Equals(Me._Googleplus, value) = false) Then
				Me.OnGoogleplusChanging(value)
				Me.SendPropertyChanging
				Me._Googleplus = value
				Me.SendPropertyChanged("Googleplus")
				Me.OnGoogleplusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Twitter", DbType:="NVarChar(100)")>  _
	Public Property Twitter() As String
		Get
			Return Me._Twitter
		End Get
		Set
			If (String.Equals(Me._Twitter, value) = false) Then
				Me.OnTwitterChanging(value)
				Me.SendPropertyChanging
				Me._Twitter = value
				Me.SendPropertyChanged("Twitter")
				Me.OnTwitterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Facebook", DbType:="NVarChar(500)")>  _
	Public Property Facebook() As String
		Get
			Return Me._Facebook
		End Get
		Set
			If (String.Equals(Me._Facebook, value) = false) Then
				Me.OnFacebookChanging(value)
				Me.SendPropertyChanging
				Me._Facebook = value
				Me.SendPropertyChanged("Facebook")
				Me.OnFacebookChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoMin", DbType:="NVarChar(4000)")>  _
	Public Property PhotoMin() As String
		Get
			Return Me._PhotoMin
		End Get
		Set
			If (String.Equals(Me._PhotoMin, value) = false) Then
				Me.OnPhotoMinChanging(value)
				Me.SendPropertyChanging
				Me._PhotoMin = value
				Me.SendPropertyChanged("PhotoMin")
				Me.OnPhotoMinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoMax", DbType:="NVarChar(4000)")>  _
	Public Property PhotoMax() As String
		Get
			Return Me._PhotoMax
		End Get
		Set
			If (String.Equals(Me._PhotoMax, value) = false) Then
				Me.OnPhotoMaxChanging(value)
				Me.SendPropertyChanging
				Me._PhotoMax = value
				Me.SendPropertyChanged("PhotoMax")
				Me.OnPhotoMaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Biography_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Biography_Fa() As String
		Get
			Return Me._Biography_Fa
		End Get
		Set
			If (String.Equals(Me._Biography_Fa, value) = false) Then
				Me.OnBiography_FaChanging(value)
				Me.SendPropertyChanging
				Me._Biography_Fa = value
				Me.SendPropertyChanged("Biography_Fa")
				Me.OnBiography_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Biography_En", DbType:="NVarChar(4000)")>  _
	Public Property Biography_En() As String
		Get
			Return Me._Biography_En
		End Get
		Set
			If (String.Equals(Me._Biography_En, value) = false) Then
				Me.OnBiography_EnChanging(value)
				Me.SendPropertyChanging
				Me._Biography_En = value
				Me.SendPropertyChanged("Biography_En")
				Me.OnBiography_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResumeFile", DbType:="NVarChar(4000)")>  _
	Public Property ResumeFile() As String
		Get
			Return Me._ResumeFile
		End Get
		Set
			If (String.Equals(Me._ResumeFile, value) = false) Then
				Me.OnResumeFileChanging(value)
				Me.SendPropertyChanging
				Me._ResumeFile = value
				Me.SendPropertyChanged("ResumeFile")
				Me.OnResumeFileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_About_Fa", DbType:="NVarChar(4000)")>  _
	Public Property About_Fa() As String
		Get
			Return Me._About_Fa
		End Get
		Set
			If (String.Equals(Me._About_Fa, value) = false) Then
				Me.OnAbout_FaChanging(value)
				Me.SendPropertyChanging
				Me._About_Fa = value
				Me.SendPropertyChanged("About_Fa")
				Me.OnAbout_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_About_En", DbType:="NVarChar(4000)")>  _
	Public Property About_En() As String
		Get
			Return Me._About_En
		End Get
		Set
			If (String.Equals(Me._About_En, value) = false) Then
				Me.OnAbout_EnChanging(value)
				Me.SendPropertyChanging
				Me._About_En = value
				Me.SendPropertyChanged("About_En")
				Me.OnAbout_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Job_Fa", DbType:="NVarChar(1000)")>  _
	Public Property Job_Fa() As String
		Get
			Return Me._Job_Fa
		End Get
		Set
			If (String.Equals(Me._Job_Fa, value) = false) Then
				Me.OnJob_FaChanging(value)
				Me.SendPropertyChanging
				Me._Job_Fa = value
				Me.SendPropertyChanged("Job_Fa")
				Me.OnJob_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Job_En", DbType:="NVarChar(1000)")>  _
	Public Property Job_En() As String
		Get
			Return Me._Job_En
		End Get
		Set
			If (String.Equals(Me._Job_En, value) = false) Then
				Me.OnJob_EnChanging(value)
				Me.SendPropertyChanging
				Me._Job_En = value
				Me.SendPropertyChanged("Job_En")
				Me.OnJob_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BioEdu_Fa", DbType:="NVarChar(4000)")>  _
	Public Property BioEdu_Fa() As String
		Get
			Return Me._BioEdu_Fa
		End Get
		Set
			If (String.Equals(Me._BioEdu_Fa, value) = false) Then
				Me.OnBioEdu_FaChanging(value)
				Me.SendPropertyChanging
				Me._BioEdu_Fa = value
				Me.SendPropertyChanged("BioEdu_Fa")
				Me.OnBioEdu_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BioEdu_En", DbType:="NVarChar(4000)")>  _
	Public Property BioEdu_En() As String
		Get
			Return Me._BioEdu_En
		End Get
		Set
			If (String.Equals(Me._BioEdu_En, value) = false) Then
				Me.OnBioEdu_EnChanging(value)
				Me.SendPropertyChanging
				Me._BioEdu_En = value
				Me.SendPropertyChanged("BioEdu_En")
				Me.OnBioEdu_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Evidence_Fa", DbType:="NVarChar(2000)")>  _
	Public Property Evidence_Fa() As String
		Get
			Return Me._Evidence_Fa
		End Get
		Set
			If (String.Equals(Me._Evidence_Fa, value) = false) Then
				Me.OnEvidence_FaChanging(value)
				Me.SendPropertyChanging
				Me._Evidence_Fa = value
				Me.SendPropertyChanged("Evidence_Fa")
				Me.OnEvidence_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Evidence_En", DbType:="NVarChar(2000)")>  _
	Public Property Evidence_En() As String
		Get
			Return Me._Evidence_En
		End Get
		Set
			If (String.Equals(Me._Evidence_En, value) = false) Then
				Me.OnEvidence_EnChanging(value)
				Me.SendPropertyChanging
				Me._Evidence_En = value
				Me.SendPropertyChanged("Evidence_En")
				Me.OnEvidence_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GraduationLocation_Fa", DbType:="NVarChar(500)")>  _
	Public Property GraduationLocation_Fa() As String
		Get
			Return Me._GraduationLocation_Fa
		End Get
		Set
			If (String.Equals(Me._GraduationLocation_Fa, value) = false) Then
				Me.OnGraduationLocation_FaChanging(value)
				Me.SendPropertyChanging
				Me._GraduationLocation_Fa = value
				Me.SendPropertyChanged("GraduationLocation_Fa")
				Me.OnGraduationLocation_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GraduationLocation_En", DbType:="NVarChar(500)")>  _
	Public Property GraduationLocation_En() As String
		Get
			Return Me._GraduationLocation_En
		End Get
		Set
			If (String.Equals(Me._GraduationLocation_En, value) = false) Then
				Me.OnGraduationLocation_EnChanging(value)
				Me.SendPropertyChanging
				Me._GraduationLocation_En = value
				Me.SendPropertyChanged("GraduationLocation_En")
				Me.OnGraduationLocation_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GraduationDate_Fa", DbType:="NVarChar(50)")>  _
	Public Property GraduationDate_Fa() As String
		Get
			Return Me._GraduationDate_Fa
		End Get
		Set
			If (String.Equals(Me._GraduationDate_Fa, value) = false) Then
				Me.OnGraduationDate_FaChanging(value)
				Me.SendPropertyChanging
				Me._GraduationDate_Fa = value
				Me.SendPropertyChanged("GraduationDate_Fa")
				Me.OnGraduationDate_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GraduationDate_En", DbType:="NVarChar(50)")>  _
	Public Property GraduationDate_En() As String
		Get
			Return Me._GraduationDate_En
		End Get
		Set
			If (String.Equals(Me._GraduationDate_En, value) = false) Then
				Me.OnGraduationDate_EnChanging(value)
				Me.SendPropertyChanging
				Me._GraduationDate_En = value
				Me.SendPropertyChanged("GraduationDate_En")
				Me.OnGraduationDate_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Intrests_Fa", DbType:="NVarChar(4000)")>  _
	Public Property Intrests_Fa() As String
		Get
			Return Me._Intrests_Fa
		End Get
		Set
			If (String.Equals(Me._Intrests_Fa, value) = false) Then
				Me.OnIntrests_FaChanging(value)
				Me.SendPropertyChanging
				Me._Intrests_Fa = value
				Me.SendPropertyChanged("Intrests_Fa")
				Me.OnIntrests_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Intrests_En", DbType:="NVarChar(4000)")>  _
	Public Property Intrests_En() As String
		Get
			Return Me._Intrests_En
		End Get
		Set
			If (String.Equals(Me._Intrests_En, value) = false) Then
				Me.OnIntrests_EnChanging(value)
				Me.SendPropertyChanging
				Me._Intrests_En = value
				Me.SendPropertyChanged("Intrests_En")
				Me.OnIntrests_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_State_Fa", DbType:="NVarChar(500)")>  _
	Public Property State_Fa() As String
		Get
			Return Me._State_Fa
		End Get
		Set
			If (String.Equals(Me._State_Fa, value) = false) Then
				Me.OnState_FaChanging(value)
				Me.SendPropertyChanging
				Me._State_Fa = value
				Me.SendPropertyChanged("State_Fa")
				Me.OnState_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_State_En", DbType:="NVarChar(500)")>  _
	Public Property State_En() As String
		Get
			Return Me._State_En
		End Get
		Set
			If (String.Equals(Me._State_En, value) = false) Then
				Me.OnState_EnChanging(value)
				Me.SendPropertyChanging
				Me._State_En = value
				Me.SendPropertyChanged("State_En")
				Me.OnState_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BioJob_Fa", DbType:="NVarChar(4000)")>  _
	Public Property BioJob_Fa() As String
		Get
			Return Me._BioJob_Fa
		End Get
		Set
			If (String.Equals(Me._BioJob_Fa, value) = false) Then
				Me.OnBioJob_FaChanging(value)
				Me.SendPropertyChanging
				Me._BioJob_Fa = value
				Me.SendPropertyChanged("BioJob_Fa")
				Me.OnBioJob_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BioJob_En", DbType:="NVarChar(4000)")>  _
	Public Property BioJob_En() As String
		Get
			Return Me._BioJob_En
		End Get
		Set
			If (String.Equals(Me._BioJob_En, value) = false) Then
				Me.OnBioJob_EnChanging(value)
				Me.SendPropertyChanging
				Me._BioJob_En = value
				Me.SendPropertyChanged("BioJob_En")
				Me.OnBioJob_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo_Fa", DbType:="NVarChar(2000)")>  _
	Public Property Memo_Fa() As String
		Get
			Return Me._Memo_Fa
		End Get
		Set
			If (String.Equals(Me._Memo_Fa, value) = false) Then
				Me.OnMemo_FaChanging(value)
				Me.SendPropertyChanging
				Me._Memo_Fa = value
				Me.SendPropertyChanged("Memo_Fa")
				Me.OnMemo_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo_En", DbType:="NVarChar(2000)")>  _
	Public Property Memo_En() As String
		Get
			Return Me._Memo_En
		End Get
		Set
			If (String.Equals(Me._Memo_En, value) = false) Then
				Me.OnMemo_EnChanging(value)
				Me.SendPropertyChanging
				Me._Memo_En = value
				Me.SendPropertyChanged("Memo_En")
				Me.OnMemo_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_Fa", DbType:="NVarChar(3000)")>  _
	Public Property Keyword_Fa() As String
		Get
			Return Me._Keyword_Fa
		End Get
		Set
			If (String.Equals(Me._Keyword_Fa, value) = false) Then
				Me.OnKeyword_FaChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_Fa = value
				Me.SendPropertyChanged("Keyword_Fa")
				Me.OnKeyword_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Keyword_En", DbType:="NVarChar(3000)")>  _
	Public Property Keyword_En() As String
		Get
			Return Me._Keyword_En
		End Get
		Set
			If (String.Equals(Me._Keyword_En, value) = false) Then
				Me.OnKeyword_EnChanging(value)
				Me.SendPropertyChanging
				Me._Keyword_En = value
				Me.SendPropertyChanged("Keyword_En")
				Me.OnKeyword_EnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.StdMessage")>  _
Partial Public Class StdMessage
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IDMStd As Integer
	
	Private _Title As String
	
	Private _NameAndFamily As String
	
	Private _Email As String
	
	Private _MSG As String
	
	Private _Moment_Fa As String
	
	Private _Moment_En As String
	
	Private _Year_En As System.Nullable(Of Integer)
	
	Private _Month_En As System.Nullable(Of Integer)
	
	Private _Day_En As System.Nullable(Of Integer)
	
	Private _Seen As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDMStdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDMStdChanged()
    End Sub
    Partial Private Sub OnTitleChanging(value As String)
    End Sub
    Partial Private Sub OnTitleChanged()
    End Sub
    Partial Private Sub OnNameAndFamilyChanging(value As String)
    End Sub
    Partial Private Sub OnNameAndFamilyChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnMSGChanging(value As String)
    End Sub
    Partial Private Sub OnMSGChanged()
    End Sub
    Partial Private Sub OnMoment_FaChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_FaChanged()
    End Sub
    Partial Private Sub OnMoment_EnChanging(value As String)
    End Sub
    Partial Private Sub OnMoment_EnChanged()
    End Sub
    Partial Private Sub OnYear_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYear_EnChanged()
    End Sub
    Partial Private Sub OnMonth_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMonth_EnChanged()
    End Sub
    Partial Private Sub OnDay_EnChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDay_EnChanged()
    End Sub
    Partial Private Sub OnSeenChanging(value As String)
    End Sub
    Partial Private Sub OnSeenChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDMStd", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property IDMStd() As Integer
		Get
			Return Me._IDMStd
		End Get
		Set
			If ((Me._IDMStd = value)  _
						= false) Then
				Me.OnIDMStdChanging(value)
				Me.SendPropertyChanging
				Me._IDMStd = value
				Me.SendPropertyChanged("IDMStd")
				Me.OnIDMStdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Title", DbType:="NVarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property Title() As String
		Get
			Return Me._Title
		End Get
		Set
			If (String.Equals(Me._Title, value) = false) Then
				Me.OnTitleChanging(value)
				Me.SendPropertyChanging
				Me._Title = value
				Me.SendPropertyChanged("Title")
				Me.OnTitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NameAndFamily", DbType:="NVarChar(500) NOT NULL", CanBeNull:=false)>  _
	Public Property NameAndFamily() As String
		Get
			Return Me._NameAndFamily
		End Get
		Set
			If (String.Equals(Me._NameAndFamily, value) = false) Then
				Me.OnNameAndFamilyChanging(value)
				Me.SendPropertyChanging
				Me._NameAndFamily = value
				Me.SendPropertyChanged("NameAndFamily")
				Me.OnNameAndFamilyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MSG", DbType:="NVarChar(4000)")>  _
	Public Property MSG() As String
		Get
			Return Me._MSG
		End Get
		Set
			If (String.Equals(Me._MSG, value) = false) Then
				Me.OnMSGChanging(value)
				Me.SendPropertyChanging
				Me._MSG = value
				Me.SendPropertyChanged("MSG")
				Me.OnMSGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_Fa", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Moment_Fa() As String
		Get
			Return Me._Moment_Fa
		End Get
		Set
			If (String.Equals(Me._Moment_Fa, value) = false) Then
				Me.OnMoment_FaChanging(value)
				Me.SendPropertyChanging
				Me._Moment_Fa = value
				Me.SendPropertyChanged("Moment_Fa")
				Me.OnMoment_FaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moment_En", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Moment_En() As String
		Get
			Return Me._Moment_En
		End Get
		Set
			If (String.Equals(Me._Moment_En, value) = false) Then
				Me.OnMoment_EnChanging(value)
				Me.SendPropertyChanging
				Me._Moment_En = value
				Me.SendPropertyChanged("Moment_En")
				Me.OnMoment_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year_En", DbType:="Int")>  _
	Public Property Year_En() As System.Nullable(Of Integer)
		Get
			Return Me._Year_En
		End Get
		Set
			If (Me._Year_En.Equals(value) = false) Then
				Me.OnYear_EnChanging(value)
				Me.SendPropertyChanging
				Me._Year_En = value
				Me.SendPropertyChanged("Year_En")
				Me.OnYear_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Month_En", DbType:="Int")>  _
	Public Property Month_En() As System.Nullable(Of Integer)
		Get
			Return Me._Month_En
		End Get
		Set
			If (Me._Month_En.Equals(value) = false) Then
				Me.OnMonth_EnChanging(value)
				Me.SendPropertyChanging
				Me._Month_En = value
				Me.SendPropertyChanged("Month_En")
				Me.OnMonth_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Day_En", DbType:="Int")>  _
	Public Property Day_En() As System.Nullable(Of Integer)
		Get
			Return Me._Day_En
		End Get
		Set
			If (Me._Day_En.Equals(value) = false) Then
				Me.OnDay_EnChanging(value)
				Me.SendPropertyChanging
				Me._Day_En = value
				Me.SendPropertyChanged("Day_En")
				Me.OnDay_EnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Seen", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Seen() As String
		Get
			Return Me._Seen
		End Get
		Set
			If (String.Equals(Me._Seen, value) = false) Then
				Me.OnSeenChanging(value)
				Me.SendPropertyChanging
				Me._Seen = value
				Me.SendPropertyChanged("Seen")
				Me.OnSeenChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
